{"rust:syn":{"coordinates":"rust:syn","name":"syn","description":"Parser for Rust source code","license":[""],"tags":["macros","syn"],"downloads":441856564,"repositories":["crates.io"]},"rust:proc-macro2":{"coordinates":"rust:proc-macro2","name":"proc-macro2","description":"A substitute implementation of the compiler''s `proc_macro` API to decouple token-based libraries from the procedural macro use case.","license":[""],"tags":["macros","syn"],"downloads":335425251,"repositories":["crates.io"]},"rust:quote":{"coordinates":"rust:quote","name":"quote","description":"Quasi-quoting macro quote!(...)","license":[""],"tags":["macros","syn"],"downloads":331471317,"repositories":["crates.io"]},"rust:libc":{"coordinates":"rust:libc","name":"libc","description":"Raw FFI bindings to platform libraries like libc. ","license":[""],"tags":["bindings","ffi","system","libc","operating"],"downloads":328273401,"repositories":["crates.io"]},"rust:bitflags":{"coordinates":"rust:bitflags","name":"bitflags","description":"A macro to generate structures which behave like bitflags. ","license":[""],"tags":["bit","bitmask","bitflags","flags"],"downloads":311183289,"repositories":["crates.io"]},"rust:rand":{"coordinates":"rust:rand","name":"rand","description":"Random number generators and other randomness functionality. ","license":[""],"tags":["random","rng"],"downloads":307211341,"repositories":["crates.io"]},"rust:rand_core":{"coordinates":"rust:rand_core","name":"rand_core","description":"Core random number generator traits and tools for implementation. ","license":[""],"tags":["random","rng"],"downloads":306440019,"repositories":["crates.io"]},"rust:cfg-if":{"coordinates":"rust:cfg-if","name":"cfg-if","description":"A macro to ergonomically define an item depending on a large number of #[cfg] parameters. Structured like an if-else chain, the first matching branch is the item that gets emitted. ","license":[""],"tags":[],"downloads":305773849,"repositories":["crates.io"]},"rust:serde":{"coordinates":"rust:serde","name":"serde","description":"A generic serialization/deserialization framework","license":[""],"tags":["serialization","no_std","serde"],"downloads":291913811,"repositories":["crates.io"]},"rust:hashbrown":{"coordinates":"rust:hashbrown","name":"hashbrown","description":"A Rust port of Google''s SwissTable hash map","license":[""],"tags":["hash","hashmap","no_std","swisstable"],"downloads":278284204,"repositories":["crates.io"]},"rust:base64":{"coordinates":"rust:base64","name":"base64","description":"encodes and decodes base64 as bytes or utf8","license":[""],"tags":["encode","decode","utf8","no_std","base64"],"downloads":277030886,"repositories":["crates.io"]},"rust:regex-syntax":{"coordinates":"rust:regex-syntax","name":"regex-syntax","description":"A regular expression parser.","license":[""],"tags":[],"downloads":274587415,"repositories":["crates.io"]},"rust:itoa":{"coordinates":"rust:itoa","name":"itoa","description":"Fast integer primitive to string conversion","license":[""],"tags":["integer"],"downloads":267894583,"repositories":["crates.io"]},"rust:autocfg":{"coordinates":"rust:autocfg","name":"autocfg","description":"Automatic cfg for Rust compiler features","license":[""],"tags":["build","rustc","autoconf"],"downloads":261528714,"repositories":["crates.io"]},"rust:getrandom":{"coordinates":"rust:getrandom","name":"getrandom","description":"A small cross-platform library for retrieving random data from system source","license":[""],"tags":[],"downloads":261105745,"repositories":["crates.io"]},"rust:serde_derive":{"coordinates":"rust:serde_derive","name":"serde_derive","description":"Macros 1.1 implementation of #[derive(Serialize, Deserialize)]","license":[""],"tags":["serialization","no_std","serde","derive"],"downloads":260874519,"repositories":["crates.io"]},"rust:log":{"coordinates":"rust:log","name":"log","description":"A lightweight logging facade for Rust ","license":[""],"tags":["logging"],"downloads":252241653,"repositories":["crates.io"]},"rust:serde_json":{"coordinates":"rust:serde_json","name":"serde_json","description":"A JSON serialization file format","license":[""],"tags":["serialization","json","serde"],"downloads":249664605,"repositories":["crates.io"]},"rust:memchr":{"coordinates":"rust:memchr","name":"memchr","description":"Provides extremely fast (uses SIMD on x86_64, aarch64 and wasm32) routines for 1, 2 or 3 byte search and single substring search. ","license":[""],"tags":["search","find","memchr","substring","memmem"],"downloads":249587883,"repositories":["crates.io"]},"rust:rand_chacha":{"coordinates":"rust:rand_chacha","name":"rand_chacha","description":"ChaCha random number generator ","license":[""],"tags":["random","rng","chacha"],"downloads":243765312,"repositories":["crates.io"]},"rust:regex":{"coordinates":"rust:regex","name":"regex","description":"An implementation of regular expressions for Rust. This implementation uses finite automata and guarantees linear time matching on all inputs. ","license":[""],"tags":[],"downloads":242015456,"repositories":["crates.io"]},"rust:time":{"coordinates":"rust:time","name":"time","description":"Date and time library. Fully interoperable with the standard library. Mostly compatible with #![no_std].","license":[""],"tags":["time","date","calendar","duration"],"downloads":234567808,"repositories":["crates.io"]},"rust:parking_lot_core":{"coordinates":"rust:parking_lot_core","name":"parking_lot_core","description":"An advanced API for creating custom synchronization primitives.","license":[""],"tags":["mutex","thread","rwlock","condvar","once"],"downloads":234156230,"repositories":["crates.io"]},"rust:once_cell":{"coordinates":"rust:once_cell","name":"once_cell","description":"Single assignment cells and lazy values.","license":[""],"tags":["lazy","static"],"downloads":232169590,"repositories":["crates.io"]},"rust:lazy_static":{"coordinates":"rust:lazy_static","name":"lazy_static","description":"A macro for declaring lazily evaluated statics in Rust.","license":[""],"tags":["macro","lazy","static"],"downloads":230891214,"repositories":["crates.io"]},"rust:aho-corasick":{"coordinates":"rust:aho-corasick","name":"aho-corasick","description":"Fast multiple substring searching.","license":[""],"tags":["text","search","string","multi","pattern"],"downloads":230642272,"repositories":["crates.io"]},"rust:cc":{"coordinates":"rust:cc","name":"cc","description":"A build-time dependency for Cargo build scripts to assist in invoking the native C compiler to compile native C code into a static archive to be linked into Rust code. ","license":[""],"tags":["build-dependencies"],"downloads":228435641,"repositories":["crates.io"]},"rust:ryu":{"coordinates":"rust:ryu","name":"ryu","description":"Fast floating point to string conversion","license":[""],"tags":["float"],"downloads":228393424,"repositories":["crates.io"]},"rust:smallvec":{"coordinates":"rust:smallvec","name":"smallvec","description":"''Small vector'' optimization: store up to a small number of items on the stack","license":[""],"tags":["vector","vec","stack","no_std","small"],"downloads":225315422,"repositories":["crates.io"]},"rust:indexmap":{"coordinates":"rust:indexmap","name":"indexmap","description":"A hash table with consistent order and fast iteration.","license":[""],"tags":["hashmap","no_std"],"downloads":225296022,"repositories":["crates.io"]},"rust:num-traits":{"coordinates":"rust:num-traits","name":"num-traits","description":"Numeric traits for generic mathematics","license":[""],"tags":["mathematics","numerics"],"downloads":224233826,"repositories":["crates.io"]},"rust:parking_lot":{"coordinates":"rust:parking_lot","name":"parking_lot","description":"More compact and efficient implementations of the standard synchronization primitives.","license":[""],"tags":["mutex","thread","rwlock","condvar","once"],"downloads":221254610,"repositories":["crates.io"]},"rust:clap":{"coordinates":"rust:clap","name":"clap","description":"A simple to use, efficient, and full-featured Command Line Argument Parser","license":[""],"tags":["parser","argument","cli","parse","arg"],"downloads":218984866,"repositories":["crates.io"]},"rust:version_check":{"coordinates":"rust:version_check","name":"version_check","description":"Tiny crate to check the version of the installed/running rustc.","license":[""],"tags":["version","rustc","check","minimum"],"downloads":209698257,"repositories":["crates.io"]},"rust:semver":{"coordinates":"rust:semver","name":"semver","description":"Parser and evaluator for Cargo''s flavor of Semantic Versioning","license":[""],"tags":["cargo"],"downloads":205055612,"repositories":["crates.io"]},"rust:strsim":{"coordinates":"rust:strsim","name":"strsim","description":"Implementations of string similarity metrics. Includes Hamming, Levenshtein, OSA, Damerau-Levenshtein, Jaro, Jaro-Winkler, and SÃ¸rensen-Dice. ","license":[""],"tags":["string","similarity","jaro","hamming","levenshtein"],"downloads":201482935,"repositories":["crates.io"]},"rust:digest":{"coordinates":"rust:digest","name":"digest","description":"Traits for cryptographic hash functions and message authentication codes","license":[""],"tags":["hash","crypto","digest"],"downloads":201177165,"repositories":["crates.io"]},"rust:scopeguard":{"coordinates":"rust:scopeguard","name":"scopeguard","description":"A RAII scope guard that will run a given closure when it goes out of scope, even if the code between panics (assuming unwinding panic).  Defines the macros `defer!`, `defer_on_unwind!`, `defer_on_success!` as shorthands for guards with one of the implemented strategies. ","license":[""],"tags":["scope-guard","defer","panic","unwind"],"downloads":196546787,"repositories":["crates.io"]},"rust:lock_api":{"coordinates":"rust:lock_api","name":"lock_api","description":"Wrappers to create fully-featured Mutex and RwLock types. Compatible with no_std.","license":[""],"tags":["lock","mutex","no_std","rwlock"],"downloads":196112173,"repositories":["crates.io"]},"rust:block-buffer":{"coordinates":"rust:block-buffer","name":"block-buffer","description":"Buffer type for block processing of data","license":[""],"tags":["buffer","block"],"downloads":194913836,"repositories":["crates.io"]},"rust:bytes":{"coordinates":"rust:bytes","name":"bytes","description":"Types and traits for working with bytes","license":[""],"tags":["zero-copy","io","buffers"],"downloads":194548128,"repositories":["crates.io"]},"rust:crossbeam-utils":{"coordinates":"rust:crossbeam-utils","name":"crossbeam-utils","description":"Utilities for concurrent programming","license":[""],"tags":["thread","cache","scoped","atomic"],"downloads":193807293,"repositories":["crates.io"]},"rust:itertools":{"coordinates":"rust:itertools","name":"itertools","description":"Extra iterator adaptors, iterator methods, free functions, and macros.","license":[""],"tags":["data-structure","iterator","zip","product","group-by"],"downloads":192729187,"repositories":["crates.io"]},"rust:heck":{"coordinates":"rust:heck","name":"heck","description":"heck is a case conversion library.","license":[""],"tags":["unicode","string","case","snake","camel"],"downloads":190847846,"repositories":["crates.io"]},"rust:idna":{"coordinates":"rust:idna","name":"idna","description":"IDNA (Internationalizing Domain Names in Applications) and Punycode.","license":[""],"tags":[],"downloads":190094178,"repositories":["crates.io"]},"rust:either":{"coordinates":"rust:either","name":"either","description":"The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases. ","license":[""],"tags":["data-structure","no_std"],"downloads":189706869,"repositories":["crates.io"]},"rust:thiserror":{"coordinates":"rust:thiserror","name":"thiserror","description":"derive(Error)","license":[""],"tags":["error","derive","error-handling"],"downloads":187545574,"repositories":["crates.io"]},"rust:thiserror-impl":{"coordinates":"rust:thiserror-impl","name":"thiserror-impl","description":"Implementation detail of the `thiserror` crate","license":[""],"tags":[],"downloads":187509313,"repositories":["crates.io"]},"rust:unicode-ident":{"coordinates":"rust:unicode-ident","name":"unicode-ident","description":"Determine whether characters have the XID_Start or XID_Continue properties according to Unicode Standard Annex #31","license":[""],"tags":["unicode","xid"],"downloads":187448273,"repositories":["crates.io"]},"rust:memoffset":{"coordinates":"rust:memoffset","name":"memoffset","description":"offset_of functionality for Rust structs.","license":[""],"tags":["offset","mem","offset_of","offsetof"],"downloads":187302081,"repositories":["crates.io"]},"rust:unicode-xid":{"coordinates":"rust:unicode-xid","name":"unicode-xid","description":"Determine whether characters have the XID_Start or XID_Continue properties according to Unicode Standard Annex #31. ","license":[""],"tags":["text","unicode","xid"],"downloads":185644304,"repositories":["crates.io"]},"rust:num_cpus":{"coordinates":"rust:num_cpus","name":"num_cpus","description":"Get the number of CPUs on a machine.","license":[""],"tags":["cpu","cpus","cores"],"downloads":184003513,"repositories":["crates.io"]},"rust:pin-project-lite":{"coordinates":"rust:pin-project-lite","name":"pin-project-lite","description":"A lightweight version of pin-project written with declarative macros. ","license":[""],"tags":["macros","pin"],"downloads":183614140,"repositories":["crates.io"]},"rust:socket2":{"coordinates":"rust:socket2","name":"socket2","description":"Utilities for handling networking sockets with a maximal amount of configuration possible intended. ","license":[""],"tags":["io","network","socket"],"downloads":182372216,"repositories":["crates.io"]},"rust:generic-array":{"coordinates":"rust:generic-array","name":"generic-array","description":"Generic types implementing functionality of arrays","license":[""],"tags":["generic","array"],"downloads":180520704,"repositories":["crates.io"]},"rust:percent-encoding":{"coordinates":"rust:percent-encoding","name":"percent-encoding","description":"Percent encoding and decoding","license":[""],"tags":[],"downloads":178887721,"repositories":["crates.io"]},"rust:mio":{"coordinates":"rust:mio","name":"mio","description":"Lightweight non-blocking I/O.","license":[""],"tags":["io","async","non-blocking"],"downloads":177127909,"repositories":["crates.io"]},"rust:byteorder":{"coordinates":"rust:byteorder","name":"byteorder","description":"Library for reading/writing numbers in big-endian and little-endian.","license":[""],"tags":["binary","byte","endian","big-endian","little-endian"],"downloads":175798238,"repositories":["crates.io"]},"rust:ppv-lite86":{"coordinates":"rust:ppv-lite86","name":"ppv-lite86","description":"Implementation of the crypto-simd API for x86","license":[""],"tags":["crypto","simd","x86"],"downloads":174999975,"repositories":["crates.io"]},"rust:tokio":{"coordinates":"rust:tokio","name":"tokio","description":"An event-driven, non-blocking I/O platform for writing asynchronous I/O backed applications. ","license":[""],"tags":["io","async","non-blocking","futures"],"downloads":174211437,"repositories":["crates.io"]},"rust:url":{"coordinates":"rust:url","name":"url","description":"URL library for Rust, based on the WHATWG URL Standard","license":[""],"tags":["parser","url"],"downloads":172695689,"repositories":["crates.io"]},"rust:anyhow":{"coordinates":"rust:anyhow","name":"anyhow","description":"Flexible concrete Error type built on std::error::Error","license":[""],"tags":["error","error-handling"],"downloads":169268648,"repositories":["crates.io"]},"rust:miniz_oxide":{"coordinates":"rust:miniz_oxide","name":"miniz_oxide","description":"DEFLATE compression and decompression library rewritten in Rust based on miniz","license":[""],"tags":["encoding","zlib","deflate","miniz"],"downloads":168727917,"repositories":["crates.io"]},"rust:slab":{"coordinates":"rust:slab","name":"slab","description":"Pre-allocated storage for a uniform data type","license":[""],"tags":["slab","allocator","no_std"],"downloads":166439780,"repositories":["crates.io"]},"rust:num-integer":{"coordinates":"rust:num-integer","name":"num-integer","description":"Integer traits and functions","license":[""],"tags":["mathematics","numerics"],"downloads":164766341,"repositories":["crates.io"]},"rust:futures-core":{"coordinates":"rust:futures-core","name":"futures-core","description":"The core traits and types in for the `futures` library. ","license":[""],"tags":[],"downloads":160656376,"repositories":["crates.io"]},"rust:regex-automata":{"coordinates":"rust:regex-automata","name":"regex-automata","description":"Automata construction and matching using regular expressions.","license":[""],"tags":["automaton","regex","dfa","nfa","automata"],"downloads":159420802,"repositories":["crates.io"]},"rust:chrono":{"coordinates":"rust:chrono","name":"chrono","description":"Date and time library for Rust","license":[""],"tags":["time","date","calendar"],"downloads":158715520,"repositories":["crates.io"]},"rust:unicode-normalization":{"coordinates":"rust:unicode-normalization","name":"unicode-normalization","description":"This crate provides functions for normalization of Unicode strings, including Canonical and Compatible Decomposition and Recomposition, as described in Unicode Standard Annex #15. ","license":[""],"tags":["text","unicode","normalization","decomposition","recomposition"],"downloads":157458108,"repositories":["crates.io"]},"rust:toml":{"coordinates":"rust:toml","name":"toml","description":"A native Rust encoder and decoder of TOML-formatted files and streams. Provides implementations of the standard Serialize/Deserialize traits for TOML data to facilitate deserializing and serializing Rust structures. ","license":[""],"tags":["encoding","toml"],"downloads":157360460,"repositories":["crates.io"]},"rust:fnv":{"coordinates":"rust:fnv","name":"fnv","description":"FowlerâNollâVo hash function","license":[""],"tags":[],"downloads":156952637,"repositories":["crates.io"]},"rust:unicode-bidi":{"coordinates":"rust:unicode-bidi","name":"unicode-bidi","description":"Implementation of the Unicode Bidirectional Algorithm","license":[""],"tags":["text","unicode","rtl","layout","bidi"],"downloads":155825024,"repositories":["crates.io"]},"rust:futures-util":{"coordinates":"rust:futures-util","name":"futures-util","description":"Common utilities and extension traits for the futures-rs library. ","license":[""],"tags":[],"downloads":155792875,"repositories":["crates.io"]},"rust:futures":{"coordinates":"rust:futures","name":"futures","description":"An implementation of futures and streams featuring zero allocations, composability, and iterator-like interfaces. ","license":[""],"tags":["async","future","futures"],"downloads":155541214,"repositories":["crates.io"]},"rust:futures-task":{"coordinates":"rust:futures-task","name":"futures-task","description":"Tools for working with tasks. ","license":[""],"tags":[],"downloads":155434656,"repositories":["crates.io"]},"rust:typenum":{"coordinates":"rust:typenum","name":"typenum","description":"Typenum is a Rust library for type-level numbers evaluated at     compile time. It currently supports bits, unsigned integers, and signed     integers. It also provides a type-level array of type-level numbers, but its     implementation is incomplete.","license":[""],"tags":[],"downloads":155211453,"repositories":["crates.io"]},"rust:sha2":{"coordinates":"rust:sha2","name":"sha2","description":"Pure Rust implementation of the SHA-2 hash function family including SHA-224, SHA-256, SHA-384, and SHA-512. ","license":[""],"tags":["hash","crypto","sha2","digest"],"downloads":154118884,"repositories":["crates.io"]},"rust:futures-sink":{"coordinates":"rust:futures-sink","name":"futures-sink","description":"The asynchronous `Sink` trait for the futures-rs library. ","license":[""],"tags":[],"downloads":153461881,"repositories":["crates.io"]},"rust:futures-channel":{"coordinates":"rust:futures-channel","name":"futures-channel","description":"Channels for asynchronous communication using futures-rs. ","license":[""],"tags":[],"downloads":152929498,"repositories":["crates.io"]},"rust:textwrap":{"coordinates":"rust:textwrap","name":"textwrap","description":"Library for word wrapping, indenting, and dedenting strings. Has optional support for Unicode and emojis as well as machine hyphenation.","license":[""],"tags":["text","typesetting","wrap","formatting","hyphenation"],"downloads":152414935,"repositories":["crates.io"]},"rust:tokio-util":{"coordinates":"rust:tokio-util","name":"tokio-util","description":"Additional utilities for working with Tokio. ","license":[""],"tags":[],"downloads":149968119,"repositories":["crates.io"]},"rust:pkg-config":{"coordinates":"rust:pkg-config","name":"pkg-config","description":"A library to run the pkg-config system tool at build time in order to be used in Cargo build scripts. ","license":[""],"tags":["build-dependencies"],"downloads":148846572,"repositories":["crates.io"]},"rust:tracing":{"coordinates":"rust:tracing","name":"tracing","description":"Application-level tracing for Rust. ","license":[""],"tags":["logging","async","metrics","tracing"],"downloads":148255080,"repositories":["crates.io"]},"rust:ahash":{"coordinates":"rust:ahash","name":"ahash","description":"A non-cryptographic hash function using AES-NI for high performance","license":[""],"tags":["hash","aes","hashmap","hasher","no-std"],"downloads":148174248,"repositories":["crates.io"]},"rust:tracing-core":{"coordinates":"rust:tracing-core","name":"tracing-core","description":"Core primitives for application-level tracing. ","license":[""],"tags":["logging","profiling","tracing"],"downloads":148120454,"repositories":["crates.io"]},"rust:rustc_version":{"coordinates":"rust:rustc_version","name":"rustc_version","description":"A library for querying the version of a installed rustc compiler","license":[""],"tags":["version","rustc"],"downloads":147334705,"repositories":["crates.io"]},"rust:unicode-width":{"coordinates":"rust:unicode-width","name":"unicode-width","description":"Determine displayed width of `char` and `str` types according to Unicode Standard Annex #11 rules. ","license":[""],"tags":["text","unicode","width"],"downloads":146925936,"repositories":["crates.io"]},"rust:atty":{"coordinates":"rust:atty","name":"atty","description":"A simple interface for querying atty","license":[""],"tags":["terminal","tty","isatty"],"downloads":146712864,"repositories":["crates.io"]},"rust:termcolor":{"coordinates":"rust:termcolor","name":"termcolor","description":"A simple cross platform library for writing colored text to a terminal. ","license":[""],"tags":["console","ansi","color","windows","win"],"downloads":146327828,"repositories":["crates.io"]},"rust:futures-io":{"coordinates":"rust:futures-io","name":"futures-io","description":"The `AsyncRead`, `AsyncWrite`, `AsyncSeek`, and `AsyncBufRead` traits for the futures-rs library. ","license":[""],"tags":[],"downloads":145981149,"repositories":["crates.io"]},"rust:pin-utils":{"coordinates":"rust:pin-utils","name":"pin-utils","description":"Utilities for pinning ","license":[""],"tags":[],"downloads":145443195,"repositories":["crates.io"]},"rust:hyper":{"coordinates":"rust:hyper","name":"hyper","description":"A fast and correct HTTP library.","license":[""],"tags":["hyper","http","hyperium"],"downloads":144120849,"repositories":["crates.io"]},"rust:tempfile":{"coordinates":"rust:tempfile","name":"tempfile","description":"A library for managing temporary files and directories.","license":[""],"tags":["filesystem","tempfile","tmpfile"],"downloads":142804003,"repositories":["crates.io"]},"rust:tinyvec":{"coordinates":"rust:tinyvec","name":"tinyvec","description":"`tinyvec` provides 100% safe vec-like data structures.","license":[""],"tags":["vec","no_std","no-std"],"downloads":142750984,"repositories":["crates.io"]},"rust:http":{"coordinates":"rust:http","name":"http","description":"A set of types for representing HTTP requests and responses. ","license":[""],"tags":["http"],"downloads":140342451,"repositories":["crates.io"]},"rust:spin":{"coordinates":"rust:spin","name":"spin","description":"Spin-based synchronization primitives","license":[""],"tags":["mutex","spinlock","rwlock"],"downloads":139344284,"repositories":["crates.io"]},"rust:nom":{"coordinates":"rust:nom","name":"nom","description":"A byte-oriented, zero-copy, parser combinators library","license":[""],"tags":["parser","parsing","streaming","bit","parser-combinators"],"downloads":139227767,"repositories":["crates.io"]},"rust:crossbeam-channel":{"coordinates":"rust:crossbeam-channel","name":"crossbeam-channel","description":"Multi-producer multi-consumer channels for message passing","license":[""],"tags":["channel","select","mpmc","golang","message"],"downloads":138700129,"repositories":["crates.io"]},"rust:uuid":{"coordinates":"rust:uuid","name":"uuid","description":"A library to generate and parse UUIDs.","license":[""],"tags":["uuid","unique","guid"],"downloads":138240939,"repositories":["crates.io"]},"rust:crossbeam-epoch":{"coordinates":"rust:crossbeam-epoch","name":"crossbeam-epoch","description":"Epoch-based garbage collection","license":[""],"tags":["garbage","rcu","atomic","lock-free"],"downloads":137435295,"repositories":["crates.io"]},"rust:fastrand":{"coordinates":"rust:fastrand","name":"fastrand","description":"A simple and fast random number generator","license":[""],"tags":["random","rand","simple","fast","wyrand"],"downloads":137352896,"repositories":["crates.io"]},"rust:nix":{"coordinates":"rust:nix","name":"nix","description":"Rust friendly bindings to *nix APIs","license":[""],"tags":[],"downloads":137306492,"repositories":["crates.io"]},"rust:env_logger":{"coordinates":"rust:env_logger","name":"env_logger","description":"A logging implementation for `log` which is configured via an environment variable. ","license":[""],"tags":["log","logging","logger"],"downloads":137090628,"repositories":["crates.io"]},"rust:form_urlencoded":{"coordinates":"rust:form_urlencoded","name":"form_urlencoded","description":"Parser and serializer for the application/x-www-form-urlencoded syntax, as used by HTML forms.","license":[""],"tags":[],"downloads":134883884,"repositories":["crates.io"]},"rust:h2":{"coordinates":"rust:h2","name":"h2","description":"An HTTP/2 client and server","license":[""],"tags":["http","async","non-blocking"],"downloads":133264288,"repositories":["crates.io"]},"rust:futures-macro":{"coordinates":"rust:futures-macro","name":"futures-macro","description":"The futures-rs procedural macro implementations. ","license":[""],"tags":[],"downloads":132181065,"repositories":["crates.io"]},"rust:rustix":{"coordinates":"rust:rustix","name":"rustix","description":"Safe Rust bindings to POSIX/Unix/Linux/Winsock-like syscalls","license":[""],"tags":["file","network","api","safe","syscall"],"downloads":131803677,"repositories":["crates.io"]},"rust:thread_local":{"coordinates":"rust:thread_local","name":"thread_local","description":"Per-object thread-local storage","license":[""],"tags":["concurrent","thread","thread_local"],"downloads":131663870,"repositories":["crates.io"]},"rust:tinyvec_macros":{"coordinates":"rust:tinyvec_macros","name":"tinyvec_macros","description":"Some macros for tiny containers","license":[""],"tags":[],"downloads":131488607,"repositories":["crates.io"]},"rust:adler":{"coordinates":"rust:adler","name":"adler","description":"A simple clean-room implementation of the Adler-32 checksum","license":[""],"tags":["zlib","hash","checksum","adler32","integrity"],"downloads":130929518,"repositories":["crates.io"]},"rust:httparse":{"coordinates":"rust:httparse","name":"httparse","description":"A tiny, safe, speedy, zero-copy HTTP/1.x parser.","license":[""],"tags":["parser","http","no_std"],"downloads":129661477,"repositories":["crates.io"]},"rust:crc32fast":{"coordinates":"rust:crc32fast","name":"crc32fast","description":"Fast, SIMD-accelerated CRC32 (IEEE) checksum computation","license":[""],"tags":["checksum","simd","crc","crc32","fast"],"downloads":128510781,"repositories":["crates.io"]},"rust:futures-executor":{"coordinates":"rust:futures-executor","name":"futures-executor","description":"Executors for asynchronous tasks based on the futures-rs library. ","license":[""],"tags":[],"downloads":127129419,"repositories":["crates.io"]},"rust:crossbeam-deque":{"coordinates":"rust:crossbeam-deque","name":"crossbeam-deque","description":"Concurrent work-stealing deque","license":[""],"tags":["scheduler","scheduling","lock-free","chase-lev"],"downloads":125450475,"repositories":["crates.io"]},"rust:http-body":{"coordinates":"rust:http-body","name":"http-body","description":"Trait representing an asynchronous, streaming, HTTP request or response body. ","license":[""],"tags":["http"],"downloads":125320423,"repositories":["crates.io"]},"rust:cpufeatures":{"coordinates":"rust:cpufeatures","name":"cpufeatures","description":"Lightweight runtime CPU feature detection for aarch64, loongarch64, and x86/x86_64 targets,  with no_std support and support for mobile targets including Android and iOS ","license":[""],"tags":["cpuid","target-feature"],"downloads":125040964,"repositories":["crates.io"]},"rust:winapi":{"coordinates":"rust:winapi","name":"winapi","description":"Raw FFI bindings for all of Windows API.","license":[""],"tags":["ffi","win32","windows","directx","com"],"downloads":123124469,"repositories":["crates.io"]},"rust:flate2":{"coordinates":"rust:flate2","name":"flate2","description":"DEFLATE compression and decompression exposed as Read/BufRead/Write streams. Supports miniz_oxide and multiple zlib implementations. Supports zlib, gzip, and raw deflate streams. ","license":[""],"tags":["encoding","gzip","zlib","deflate","zlib-ng"],"downloads":122002264,"repositories":["crates.io"]},"rust:tokio-macros":{"coordinates":"rust:tokio-macros","name":"tokio-macros","description":"Tokio''s proc macros. ","license":[""],"tags":[],"downloads":121777615,"repositories":["crates.io"]},"rust:async-trait":{"coordinates":"rust:async-trait","name":"async-trait","description":"Type erasure for async trait methods","license":[""],"tags":["async"],"downloads":121620826,"repositories":["crates.io"]},"rust:pin-project":{"coordinates":"rust:pin-project","name":"pin-project","description":"A crate for safe and ergonomic pin-projection. ","license":[""],"tags":["macros","attribute","pin"],"downloads":121170730,"repositories":["crates.io"]},"rust:pin-project-internal":{"coordinates":"rust:pin-project-internal","name":"pin-project-internal","description":"Implementation detail of the `pin-project` crate. ","license":[""],"tags":["macros","attribute","pin"],"downloads":121059225,"repositories":["crates.io"]},"rust:hex":{"coordinates":"rust:hex","name":"hex","description":"Encoding and decoding data into/from hexadecimal representation.","license":[""],"tags":["hex","no_std"],"downloads":120628723,"repositories":["crates.io"]},"rust:arrayvec":{"coordinates":"rust:arrayvec","name":"arrayvec","description":"A vector with fixed capacity, backed by an array (it can be stored on the stack too). Implements fixed capacity ArrayVec and ArrayString.","license":[""],"tags":["data-structure","vector","array","stack","no_std"],"downloads":119499614,"repositories":["crates.io"]},"rust:linux-raw-sys":{"coordinates":"rust:linux-raw-sys","name":"linux-raw-sys","description":"Generated bindings for Linux''s userspace API","license":[""],"tags":["linux","ffi","uapi"],"downloads":119465347,"repositories":["crates.io"]},"rust:mime":{"coordinates":"rust:mime","name":"mime","description":"Strongly Typed Mimes","license":[""],"tags":["mime","media-extensions","media-types"],"downloads":119265493,"repositories":["crates.io"]},"rust:want":{"coordinates":"rust:want","name":"want","description":"Detect when another Future wants a result.","license":[""],"tags":["channel","async","futures"],"downloads":118452320,"repositories":["crates.io"]},"rust:tracing-attributes":{"coordinates":"rust:tracing-attributes","name":"tracing-attributes","description":"Procedural macro attributes for automatically instrumenting functions. ","license":[""],"tags":["macro","log","logging","instrument","tracing"],"downloads":116816442,"repositories":["crates.io"]},"rust:humantime":{"coordinates":"rust:humantime","name":"humantime","description":"    A parser and formatter for std::time::{Duration, SystemTime} ","license":[""],"tags":["parser","time","human","duration","human-friendly"],"downloads":116597861,"repositories":["crates.io"]},"rust:wasi":{"coordinates":"rust:wasi","name":"wasi","description":"WASI API bindings for Rust","license":[""],"tags":["wasm","webassembly"],"downloads":116224218,"repositories":["crates.io"]},"rust:object":{"coordinates":"rust:object","name":"object","description":"A unified interface for reading and writing object file formats.","license":[""],"tags":["elf","object","pe","mach-o","coff"],"downloads":115716996,"repositories":["crates.io"]},"rust:unicode-segmentation":{"coordinates":"rust:unicode-segmentation","name":"unicode-segmentation","description":"This crate provides Grapheme Cluster, Word and Sentence boundaries according to Unicode Standard Annex #29 rules. ","license":[""],"tags":["text","unicode","grapheme","word","boundary"],"downloads":115193865,"repositories":["crates.io"]},"rust:try-lock":{"coordinates":"rust:try-lock","name":"try-lock","description":"A lightweight atomic lock.","license":[""],"tags":["lock","atomic"],"downloads":115152632,"repositories":["crates.io"]},"rust:rustls":{"coordinates":"rust:rustls","name":"rustls","description":"Rustls is a modern TLS library written in Rust.","license":[""],"tags":[],"downloads":115048571,"repositories":["crates.io"]},"rust:httpdate":{"coordinates":"rust:httpdate","name":"httpdate","description":"HTTP date parsing and formatting","license":[""],"tags":["time","http","date","simple","timestamp"],"downloads":114986272,"repositories":["crates.io"]},"rust:rustc-demangle":{"coordinates":"rust:rustc-demangle","name":"rustc-demangle","description":"Rust compiler symbol demangling. ","license":[""],"tags":[],"downloads":114403063,"repositories":["crates.io"]},"rust:walkdir":{"coordinates":"rust:walkdir","name":"walkdir","description":"Recursively walk a directory.","license":[""],"tags":["iterator","recursive","walk","directory"],"downloads":113751468,"repositories":["crates.io"]},"rust:windows_x86_64_msvc":{"coordinates":"rust:windows_x86_64_msvc","name":"windows_x86_64_msvc","description":"Import lib for Windows","license":[""],"tags":[],"downloads":113504324,"repositories":["crates.io"]},"rust:redox_syscall":{"coordinates":"rust:redox_syscall","name":"redox_syscall","description":"A Rust library to access raw Redox system calls","license":[""],"tags":[],"downloads":112975508,"repositories":["crates.io"]},"rust:backtrace":{"coordinates":"rust:backtrace","name":"backtrace","description":"A library to acquire a stack trace (backtrace) at runtime in a Rust program. ","license":[""],"tags":[],"downloads":112508891,"repositories":["crates.io"]},"rust:instant":{"coordinates":"rust:instant","name":"instant","description":"A partial replacement for std::time::Instant that works on WASM too.","license":[""],"tags":["time","wasm"],"downloads":111567322,"repositories":["crates.io"]},"rust:windows-sys":{"coordinates":"rust:windows-sys","name":"windows-sys","description":"Rust for Windows","license":[""],"tags":[],"downloads":111114101,"repositories":["crates.io"]},"rust:tower-service":{"coordinates":"rust:tower-service","name":"tower-service","description":"Trait representing an asynchronous, request / response based, client or server. ","license":[""],"tags":[],"downloads":110853898,"repositories":["crates.io"]},"rust:gimli":{"coordinates":"rust:gimli","name":"gimli","description":"A library for reading and writing the DWARF debugging format.","license":[""],"tags":["elf","debug","dwarf","eh_frame"],"downloads":109927568,"repositories":["crates.io"]},"rust:hmac":{"coordinates":"rust:hmac","name":"hmac","description":"Generic implementation of Hash-based Message Authentication Code (HMAC)","license":[""],"tags":["crypto","mac","digest","hmac"],"downloads":107926923,"repositories":["crates.io"]},"rust:ansi_term":{"coordinates":"rust:ansi_term","name":"ansi_term","description":"Library for ANSI terminal colours and styles (bold, underline)","license":[""],"tags":[],"downloads":107865348,"repositories":["crates.io"]},"rust:signal-hook-registry":{"coordinates":"rust:signal-hook-registry","name":"signal-hook-registry","description":"Backend crate for signal-hook","license":[""],"tags":["signal","unix","daemon"],"downloads":107860030,"repositories":["crates.io"]},"rust:same-file":{"coordinates":"rust:same-file","name":"same-file","description":"A simple crate for determining whether two file paths point to the same file. ","license":[""],"tags":["file","same","equal","inode"],"downloads":107388377,"repositories":["crates.io"]},"rust:opaque-debug":{"coordinates":"rust:opaque-debug","name":"opaque-debug","description":"Macro for opaque Debug trait implementation","license":[""],"tags":[],"downloads":107155867,"repositories":["crates.io"]},"rust:time-macros":{"coordinates":"rust:time-macros","name":"time-macros","description":"    Procedural macros for the time crate.     This crate is an implementation detail and should not be relied upon directly. ","license":[""],"tags":["time","date","calendar","duration"],"downloads":107118246,"repositories":["crates.io"]},"rust:glob":{"coordinates":"rust:glob","name":"glob","description":"Support for matching file paths against Unix shell style patterns. ","license":[""],"tags":[],"downloads":107098066,"repositories":["crates.io"]},"rust:num-bigint":{"coordinates":"rust:num-bigint","name":"num-bigint","description":"Big integer implementation for Rust","license":[""],"tags":["mathematics","numerics","bignum"],"downloads":107028231,"repositories":["crates.io"]},"rust:subtle":{"coordinates":"rust:subtle","name":"subtle","description":"Pure-Rust traits and utilities for constant-time cryptographic implementations.","license":[""],"tags":["crypto","cryptography","utilities","constant-time"],"downloads":106701112,"repositories":["crates.io"]},"rust:clap_lex":{"coordinates":"rust:clap_lex","name":"clap_lex","description":"Minimal, flexible command line parser","license":[""],"tags":["parser","argument","cli","parse","arg"],"downloads":106459727,"repositories":["crates.io"]},"rust:serde_urlencoded":{"coordinates":"rust:serde_urlencoded","name":"serde_urlencoded","description":"`x-www-form-urlencoded` meets Serde","license":[""],"tags":["serialization","serde","urlencoded"],"downloads":106127511,"repositories":["crates.io"]},"rust:windows_x86_64_gnu":{"coordinates":"rust:windows_x86_64_gnu","name":"windows_x86_64_gnu","description":"Import lib for Windows","license":[""],"tags":[],"downloads":104886388,"repositories":["crates.io"]},"rust:rayon":{"coordinates":"rust:rayon","name":"rayon","description":"Simple work-stealing parallelism for Rust","license":[""],"tags":["concurrency","parallel","thread","performance","join"],"downloads":104838655,"repositories":["crates.io"]},"rust:untrusted":{"coordinates":"rust:untrusted","name":"untrusted","description":"Safe, fast, zero-panic, zero-crashing, zero-allocation parsing of untrusted inputs in Rust.","license":[""],"tags":[],"downloads":104779943,"repositories":["crates.io"]},"rust:encoding_rs":{"coordinates":"rust:encoding_rs","name":"encoding_rs","description":"A Gecko-oriented implementation of the Encoding Standard","license":[""],"tags":["encoding","unicode","web","charset"],"downloads":104689523,"repositories":["crates.io"]},"rust:windows_i686_msvc":{"coordinates":"rust:windows_i686_msvc","name":"windows_i686_msvc","description":"Import lib for Windows","license":[""],"tags":[],"downloads":104238022,"repositories":["crates.io"]},"rust:ring":{"coordinates":"rust:ring","name":"ring","description":"Safe, fast, small crypto using Rust.","license":[""],"tags":["crypto","cryptography","rand","rsa","ecc"],"downloads":104179430,"repositories":["crates.io"]},"rust:hermit-abi":{"coordinates":"rust:hermit-abi","name":"hermit-abi","description":"Hermit system calls definitions.","license":[""],"tags":["unikernel","libos"],"downloads":104007802,"repositories":["crates.io"]},"rust:windows_aarch64_msvc":{"coordinates":"rust:windows_aarch64_msvc","name":"windows_aarch64_msvc","description":"Import lib for Windows","license":[""],"tags":[],"downloads":103814068,"repositories":["crates.io"]},"rust:proc-macro-error":{"coordinates":"rust:proc-macro-error","name":"proc-macro-error","description":"Almost drop-in replacement to panics in proc-macros","license":[""],"tags":["error","errors","proc-macro"],"downloads":103740409,"repositories":["crates.io"]},"rust:rayon-core":{"coordinates":"rust:rayon-core","name":"rayon-core","description":"Core APIs for Rayon","license":[""],"tags":["concurrency","parallel","thread","performance","join"],"downloads":103692194,"repositories":["crates.io"]},"rust:windows_i686_gnu":{"coordinates":"rust:windows_i686_gnu","name":"windows_i686_gnu","description":"Import lib for Windows","license":[""],"tags":[],"downloads":103653756,"repositories":["crates.io"]},"rust:addr2line":{"coordinates":"rust:addr2line","name":"addr2line","description":"A cross-platform symbolication library written in Rust, using `gimli`","license":[""],"tags":["elf","debug","dwarf","symbolicate","atos"],"downloads":103341127,"repositories":["crates.io"]},"rust:proc-macro-error-attr":{"coordinates":"rust:proc-macro-error-attr","name":"proc-macro-error-attr","description":"Attribute macro for proc-macro-error crate","license":[""],"tags":[],"downloads":102679321,"repositories":["crates.io"]},"rust:openssl-sys":{"coordinates":"rust:openssl-sys","name":"openssl-sys","description":"FFI bindings to OpenSSL","license":[""],"tags":[],"downloads":102614857,"repositories":["crates.io"]},"rust:crypto-common":{"coordinates":"rust:crypto-common","name":"crypto-common","description":"Common cryptographic traits","license":[""],"tags":["crypto","traits"],"downloads":100647088,"repositories":["crates.io"]},"rust:paste":{"coordinates":"rust:paste","name":"paste","description":"Macros for all your token pasting needs","license":[""],"tags":["macros"],"downloads":100435460,"repositories":["crates.io"]},"rust:reqwest":{"coordinates":"rust:reqwest","name":"reqwest","description":"higher level HTTP client library","license":[""],"tags":["client","http","request"],"downloads":98625744,"repositories":["crates.io"]},"rust:which":{"coordinates":"rust:which","name":"which","description":"A Rust equivalent of Unix command \"which\". Locate installed executable in cross platforms.","license":[""],"tags":["command","unix","which","which-rs"],"downloads":97098993,"repositories":["crates.io"]},"rust:openssl-probe":{"coordinates":"rust:openssl-probe","name":"openssl-probe","description":"Tool for helping to find SSL certificate locations on the system for OpenSSL ","license":[""],"tags":[],"downloads":95938343,"repositories":["crates.io"]},"rust:matches":{"coordinates":"rust:matches","name":"matches","description":"A macro to evaluate, as a boolean, whether an expression matches a pattern.","license":[""],"tags":[],"downloads":94361412,"repositories":["crates.io"]},"rust:static_assertions":{"coordinates":"rust:static_assertions","name":"static_assertions","description":"Compile-time assertions to ensure that invariants are met.","license":[""],"tags":["testing","static","assert"],"downloads":94185724,"repositories":["crates.io"]},"rust:ipnet":{"coordinates":"rust:ipnet","name":"ipnet","description":"Provides types and useful methods for working with IPv4 and IPv6 network addresses, commonly called IP prefixes. The new `IpNet`, `Ipv4Net`, and `Ipv6Net` types build on the existing `IpAddr`, `Ipv4Addr`, and `Ipv6Addr` types already provided in Rust''s standard library and align to their design to stay consistent. The module also provides useful traits that extend `Ipv4Addr` and `Ipv6Addr` with methods for `Add`, `Sub`, `BitAnd`, and `BitOr` operations. The module only uses stable feature so it is guaranteed to compile using the stable toolchain.","license":[""],"tags":["network","prefix","ip","cidr","subnet"],"downloads":93159226,"repositories":["crates.io"]},"rust:sct":{"coordinates":"rust:sct","name":"sct","description":"Certificate transparency SCT verification library","license":[""],"tags":[],"downloads":92513390,"repositories":["crates.io"]},"rust:clap_derive":{"coordinates":"rust:clap_derive","name":"clap_derive","description":"Parse command line argument by defining a struct, derive crate.","license":[""],"tags":["cli","parse","clap","derive","proc_macro"],"downloads":92179792,"repositories":["crates.io"]},"rust:darling_macro":{"coordinates":"rust:darling_macro","name":"darling_macro","description":"Internal support for a proc-macro library for reading attributes into structs when implementing custom derives. Use https://crates.io/crates/darling in your code. ","license":[""],"tags":[],"downloads":92093532,"repositories":["crates.io"]},"rust:darling_core":{"coordinates":"rust:darling_core","name":"darling_core","description":"Helper crate for proc-macro library for reading attributes into structs when implementing custom derives. Use https://crates.io/crates/darling in your code. ","license":[""],"tags":[],"downloads":92083324,"repositories":["crates.io"]},"rust:darling":{"coordinates":"rust:darling","name":"darling","description":"A proc-macro library for reading attributes into structs when implementing custom derives. ","license":[""],"tags":[],"downloads":92080875,"repositories":["crates.io"]},"rust:openssl":{"coordinates":"rust:openssl","name":"openssl","description":"OpenSSL bindings","license":[""],"tags":["crypto","tls","ssl","dtls"],"downloads":91522329,"repositories":["crates.io"]},"rust:libloading":{"coordinates":"rust:libloading","name":"libloading","description":"Bindings around the platform''s dynamic library loading primitives with greatly improved memory safety.","license":[""],"tags":["load","dlopen","shared","dylib"],"downloads":91289522,"repositories":["crates.io"]},"rust:tracing-subscriber":{"coordinates":"rust:tracing-subscriber","name":"tracing-subscriber","description":"Utilities for implementing and composing `tracing` subscribers. ","license":[""],"tags":["logging","metrics","tracing","subscriber"],"downloads":89421368,"repositories":["crates.io"]},"rust:tokio-rustls":{"coordinates":"rust:tokio-rustls","name":"tokio-rustls","description":"Asynchronous TLS/SSL streams for Tokio using Rustls.","license":[""],"tags":[],"downloads":89082503,"repositories":["crates.io"]},"rust:foreign-types":{"coordinates":"rust:foreign-types","name":"foreign-types","description":"A framework for Rust wrappers over C APIs","license":[""],"tags":[],"downloads":88741846,"repositories":["crates.io"]},"rust:foreign-types-shared":{"coordinates":"rust:foreign-types-shared","name":"foreign-types-shared","description":"An internal crate used by foreign-types","license":[""],"tags":[],"downloads":88172278,"repositories":["crates.io"]},"rust:rustversion":{"coordinates":"rust:rustversion","name":"rustversion","description":"Conditional compilation according to rustc compiler version","license":[""],"tags":[],"downloads":86524192,"repositories":["crates.io"]},"rust:quick-error":{"coordinates":"rust:quick-error","name":"quick-error","description":"    A macro which makes error types pleasant to write. ","license":[""],"tags":["macro","error","enum","type"],"downloads":86443051,"repositories":["crates.io"]},"rust:iana-time-zone":{"coordinates":"rust:iana-time-zone","name":"iana-time-zone","description":"get the IANA time zone for the current system","license":[""],"tags":["time","iana"],"downloads":85410956,"repositories":["crates.io"]},"rust:winapi-x86_64-pc-windows-gnu":{"coordinates":"rust:winapi-x86_64-pc-windows-gnu","name":"winapi-x86_64-pc-windows-gnu","description":"Import libraries for the x86_64-pc-windows-gnu target. Please don''t use this crate directly, depend on winapi instead.","license":[""],"tags":["windows"],"downloads":84073471,"repositories":["crates.io"]},"rust:webpki-roots":{"coordinates":"rust:webpki-roots","name":"webpki-roots","description":"Mozilla''s CA root certificates for use with webpki","license":[""],"tags":[],"downloads":83989012,"repositories":["crates.io"]},"rust:minimal-lexical":{"coordinates":"rust:minimal-lexical","name":"minimal-lexical","description":"Fast float parsing conversion routines.","license":[""],"tags":["parsing","no_std"],"downloads":83905797,"repositories":["crates.io"]},"rust:proc-macro-hack":{"coordinates":"rust:proc-macro-hack","name":"proc-macro-hack","description":"Procedural macros in expression position","license":[""],"tags":[],"downloads":83404953,"repositories":["crates.io"]},"rust:bstr":{"coordinates":"rust:bstr","name":"bstr","description":"A string type that is not required to be valid UTF-8.","license":[""],"tags":["text","string","byte","bytes","str"],"downloads":83303039,"repositories":["crates.io"]},"rust:winapi-i686-pc-windows-gnu":{"coordinates":"rust:winapi-i686-pc-windows-gnu","name":"winapi-i686-pc-windows-gnu","description":"Import libraries for the i686-pc-windows-gnu target. Please don''t use this crate directly, depend on winapi instead.","license":[""],"tags":["windows"],"downloads":83264151,"repositories":["crates.io"]},"rust:strum_macros":{"coordinates":"rust:strum_macros","name":"strum_macros","description":"Helpful macros for working with enums and strings","license":[""],"tags":["macros","string","enum","proc-macros"],"downloads":82100232,"repositories":["crates.io"]},"rust:bumpalo":{"coordinates":"rust:bumpalo","name":"bumpalo","description":"A fast bump allocation arena for Rust.","license":[""],"tags":[],"downloads":81664417,"repositories":["crates.io"]},"rust:zeroize":{"coordinates":"rust:zeroize","name":"zeroize","description":"Securely clear secrets from memory with a simple trait built on stable Rust primitives which guarantee memory is zeroed using an operation will not be ''optimized away'' by the compiler. Uses a portable pure Rust implementation that works everywhere, even WASM! ","license":[""],"tags":["memory","volatile","secure","memset","zero"],"downloads":81623786,"repositories":["crates.io"]},"rust:jobserver":{"coordinates":"rust:jobserver","name":"jobserver","description":"An implementation of the GNU Make jobserver for Rust. ","license":[""],"tags":[],"downloads":81041444,"repositories":["crates.io"]},"rust:linked-hash-map":{"coordinates":"rust:linked-hash-map","name":"linked-hash-map","description":"A HashMap wrapper that holds key-value pairs in insertion order","license":[""],"tags":["data-structures"],"downloads":80958786,"repositories":["crates.io"]},"rust:semver-parser":{"coordinates":"rust:semver-parser","name":"semver-parser","description":"Parsing of the semver spec. ","license":[""],"tags":["parser","version","semver","semantic"],"downloads":80385841,"repositories":["crates.io"]},"rust:sharded-slab":{"coordinates":"rust:sharded-slab","name":"sharded-slab","description":"A lock-free concurrent slab. ","license":[""],"tags":["slab","allocator","atomic","lock-free"],"downloads":80354084,"repositories":["crates.io"]},"rust:phf_shared":{"coordinates":"rust:phf_shared","name":"phf_shared","description":"Support code shared by PHF libraries","license":[""],"tags":[],"downloads":80111774,"repositories":["crates.io"]},"rust:remove_dir_all":{"coordinates":"rust:remove_dir_all","name":"remove_dir_all","description":"A safe, reliable implementation of remove_dir_all for Windows","license":[""],"tags":["utility","filesystem","windows","remove_dir"],"downloads":79802349,"repositories":["crates.io"]},"rust:errno":{"coordinates":"rust:errno","name":"errno","description":"Cross-platform interface to the `errno` variable.","license":[""],"tags":[],"downloads":79682409,"repositories":["crates.io"]},"rust:windows-targets":{"coordinates":"rust:windows-targets","name":"windows-targets","description":"Import libs for Windows","license":[""],"tags":[],"downloads":79657600,"repositories":["crates.io"]},"rust:fixedbitset":{"coordinates":"rust:fixedbitset","name":"fixedbitset","description":"FixedBitSet is a simple bitset collection","license":[""],"tags":["data-structure","container","bitvec","bitset","no_std"],"downloads":79382719,"repositories":["crates.io"]},"rust:petgraph":{"coordinates":"rust:petgraph","name":"petgraph","description":"Graph data structure library. Provides graph types and graph algorithms.","license":[""],"tags":["data-structure","graph","unionfind","graph-algorithms"],"downloads":79301936,"repositories":["crates.io"]},"rust:unicase":{"coordinates":"rust:unicase","name":"unicase","description":"A case-insensitive wrapper around strings.","license":[""],"tags":["lowercase","case","case-insensitive","no_std","case-folding"],"downloads":79279468,"repositories":["crates.io"]},"rust:vec_map":{"coordinates":"rust:vec_map","name":"vec_map","description":"A simple map based on a vector for small integer keys","license":[""],"tags":["data-structures","collections","vecmap","vec_map","contain-rs"],"downloads":79255643,"repositories":["crates.io"]},"rust:windows_aarch64_gnullvm":{"coordinates":"rust:windows_aarch64_gnullvm","name":"windows_aarch64_gnullvm","description":"Import lib for Windows","license":[""],"tags":[],"downloads":78988782,"repositories":["crates.io"]},"rust:windows_x86_64_gnullvm":{"coordinates":"rust:windows_x86_64_gnullvm","name":"windows_x86_64_gnullvm","description":"Import lib for Windows","license":[""],"tags":[],"downloads":78972528,"repositories":["crates.io"]},"rust:tracing-log":{"coordinates":"rust:tracing-log","name":"tracing-log","description":"Provides compatibility between `tracing` and the `log` crate. ","license":[""],"tags":["log","logging","tracing"],"downloads":78901548,"repositories":["crates.io"]},"rust:proc-macro-crate":{"coordinates":"rust:proc-macro-crate","name":"proc-macro-crate","description":"Replacement for crate (macro_rules keyword) in proc-macros ","license":[""],"tags":["macro","crate","proc-macro","macro-rules"],"downloads":78730045,"repositories":["crates.io"]},"rust:wasm-bindgen":{"coordinates":"rust:wasm-bindgen","name":"wasm-bindgen","description":"Easy support for interacting between JS and Rust. ","license":[""],"tags":[],"downloads":78710813,"repositories":["crates.io"]},"rust:wasm-bindgen-backend":{"coordinates":"rust:wasm-bindgen-backend","name":"wasm-bindgen-backend","description":"Backend code generation of the wasm-bindgen tool ","license":[""],"tags":[],"downloads":78610481,"repositories":["crates.io"]},"rust:wasm-bindgen-macro":{"coordinates":"rust:wasm-bindgen-macro","name":"wasm-bindgen-macro","description":"Definition of the `#[wasm_bindgen]` attribute, an internal dependency ","license":[""],"tags":[],"downloads":78568686,"repositories":["crates.io"]},"rust:wasm-bindgen-shared":{"coordinates":"rust:wasm-bindgen-shared","name":"wasm-bindgen-shared","description":"Shared support between wasm-bindgen and wasm-bindgen cli, an internal dependency. ","license":[""],"tags":[],"downloads":78529102,"repositories":["crates.io"]},"rust:wasm-bindgen-macro-support":{"coordinates":"rust:wasm-bindgen-macro-support","name":"wasm-bindgen-macro-support","description":"The part of the implementation of the `#[wasm_bindgen]` attribute that is not in the shared backend crate ","license":[""],"tags":[],"downloads":78513256,"repositories":["crates.io"]},"rust:rustc-hash":{"coordinates":"rust:rustc-hash","name":"rustc-hash","description":"speed, non-cryptographic hash used in rustc","license":[""],"tags":["hash","rustc","fxhash"],"downloads":77514461,"repositories":["crates.io"]},"rust:strum":{"coordinates":"rust:strum","name":"strum","description":"Helpful macros for working with enums and strings","license":[""],"tags":["macros","string","enum","proc-macros"],"downloads":76983227,"repositories":["crates.io"]},"rust:sha-1":{"coordinates":"rust:sha-1","name":"sha-1","description":"SHA-1 hash function. This crate is deprecated! Use the sha1 crate instead.","license":[""],"tags":["hash","sha1","crypto","digest"],"downloads":76683707,"repositories":["crates.io"]},"rust:sha1":{"coordinates":"rust:sha1","name":"sha1","description":"SHA-1 hash function","license":[""],"tags":["hash","sha1","crypto","digest"],"downloads":76154613,"repositories":["crates.io"]},"rust:native-tls":{"coordinates":"rust:native-tls","name":"native-tls","description":"A wrapper over a platform''s native TLS implementation","license":[""],"tags":[],"downloads":75955432,"repositories":["crates.io"]},"rust:tokio-stream":{"coordinates":"rust:tokio-stream","name":"tokio-stream","description":"Utilities to work with `Stream` and `tokio`. ","license":[""],"tags":[],"downloads":75525836,"repositories":["crates.io"]},"rust:num-rational":{"coordinates":"rust:num-rational","name":"num-rational","description":"Rational numbers implementation for Rust","license":[""],"tags":["mathematics","numerics","fractions"],"downloads":75509794,"repositories":["crates.io"]},"rust:siphasher":{"coordinates":"rust:siphasher","name":"siphasher","description":"SipHash-2-4, SipHash-1-3 and 128-bit variants in pure Rust","license":[""],"tags":["hash","crypto","siphash"],"downloads":75001864,"repositories":["crates.io"]},"rust:webpki":{"coordinates":"rust:webpki","name":"webpki","description":"Web PKI X.509 Certificate Verification.","license":[""],"tags":[],"downloads":74518361,"repositories":["crates.io"]},"rust:rustls-pemfile":{"coordinates":"rust:rustls-pemfile","name":"rustls-pemfile","description":"Basic .pem file parser for keys and certificates","license":[""],"tags":[],"downloads":73590887,"repositories":["crates.io"]},"rust:js-sys":{"coordinates":"rust:js-sys","name":"js-sys","description":"Bindings for all JS global objects and functions in all JS environments like Node.js and browsers, built on `#[wasm_bindgen]` using the `wasm-bindgen` crate. ","license":[""],"tags":[],"downloads":73374749,"repositories":["crates.io"]},"rust:os_str_bytes":{"coordinates":"rust:os_str_bytes","name":"os_str_bytes","description":"Lossless functionality for platform-native strings ","license":[""],"tags":["path","bytes","windows","osstring","osstr"],"downloads":71183849,"repositories":["crates.io"]},"rust:winapi-util":{"coordinates":"rust:winapi-util","name":"winapi-util","description":"A dumping ground for high level safe wrappers over winapi.","license":[""],"tags":["windows","winapi","util","win"],"downloads":70465555,"repositories":["crates.io"]},"rust:toml_edit":{"coordinates":"rust:toml_edit","name":"toml_edit","description":"Yet another format-preserving TOML parser.","license":[""],"tags":["encoding","toml"],"downloads":70457850,"repositories":["crates.io"]},"rust:hyper-tls":{"coordinates":"rust:hyper-tls","name":"hyper-tls","description":"Default TLS implementation for use with hyper","license":[""],"tags":["tls","ssl","hyper","http","https"],"downloads":70375856,"repositories":["crates.io"]},"rust:dirs":{"coordinates":"rust:dirs","name":"dirs","description":"A tiny low-level library that provides platform-specific standard locations of directories for config, cache and other data on Linux, Windows, macOS and Redox by leveraging the mechanisms defined by the XDG base/user directory specifications on Linux, the Known Folder API on Windows, and the Standard Directory guidelines on macOS.","license":[""],"tags":["path","xdg","basedir","folder","app_dirs"],"downloads":69611839,"repositories":["crates.io"]},"rust:prost":{"coordinates":"rust:prost","name":"prost","description":"A Protocol Buffers implementation for the Rust Language.","license":[""],"tags":["serialization","protobuf"],"downloads":69367282,"repositories":["crates.io"]},"rust:prost-derive":{"coordinates":"rust:prost-derive","name":"prost-derive","description":"A Protocol Buffers implementation for the Rust Language.","license":[""],"tags":[],"downloads":69280400,"repositories":["crates.io"]},"rust:io-lifetimes":{"coordinates":"rust:io-lifetimes","name":"io-lifetimes","description":"A low-level I/O ownership and borrowing library","license":[""],"tags":["io","api"],"downloads":69184966,"repositories":["crates.io"]},"rust:phf":{"coordinates":"rust:phf","name":"phf","description":"Runtime support for perfect hash function data structures","license":[""],"tags":[],"downloads":68767974,"repositories":["crates.io"]},"rust:filetime":{"coordinates":"rust:filetime","name":"filetime","description":"Platform-agnostic accessors of timestamps in File metadata ","license":[""],"tags":["timestamp","mtime"],"downloads":67986512,"repositories":["crates.io"]},"rust:matchers":{"coordinates":"rust:matchers","name":"matchers","description":"Regex matching on character and byte streams. ","license":[""],"tags":["streaming","regex","match","pattern"],"downloads":67337927,"repositories":["crates.io"]},"rust:rand_hc":{"coordinates":"rust:rand_hc","name":"rand_hc","description":"HC128 random number generator ","license":[""],"tags":["random","rng","hc128"],"downloads":66799063,"repositories":["crates.io"]},"rust:convert_case":{"coordinates":"rust:convert_case","name":"convert_case","description":"Convert strings into any case","license":[""],"tags":["string","case","casing"],"downloads":66719637,"repositories":["crates.io"]},"rust:time-core":{"coordinates":"rust:time-core","name":"time-core","description":"This crate is an implementation detail and should not be relied upon directly.","license":[""],"tags":["time","date","calendar","duration"],"downloads":66686495,"repositories":["crates.io"]},"rust:vcpkg":{"coordinates":"rust:vcpkg","name":"vcpkg","description":"A library to find native dependencies in a vcpkg tree at build time in order to be used in Cargo build scripts. ","license":[""],"tags":["linux","build-dependencies","windows","macos"],"downloads":66538628,"repositories":["crates.io"]},"rust:shlex":{"coordinates":"rust:shlex","name":"shlex","description":"Split a string into shell words, like Python''s shlex.","license":[""],"tags":[],"downloads":66345436,"repositories":["crates.io"]},"rust:crossbeam-queue":{"coordinates":"rust:crossbeam-queue","name":"crossbeam-queue","description":"Concurrent queues","license":[""],"tags":["queue","mpmc","lock-free","producer","consumer"],"downloads":66115776,"repositories":["crates.io"]},"rust:ident_case":{"coordinates":"rust:ident_case","name":"ident_case","description":"Utility for applying case rules to Rust identifiers.","license":[""],"tags":[],"downloads":65925979,"repositories":["crates.io"]},"rust:hyper-rustls":{"coordinates":"rust:hyper-rustls","name":"hyper-rustls","description":"Rustls+hyper integration for pure rust HTTPS","license":[""],"tags":[],"downloads":65866073,"repositories":["crates.io"]},"rust:synstructure":{"coordinates":"rust:synstructure","name":"synstructure","description":"Helper methods and macros for custom derives","license":[""],"tags":["macros","enum","derive","syn","expand_substructure"],"downloads":65592600,"repositories":["crates.io"]},"rust:event-listener":{"coordinates":"rust:event-listener","name":"event-listener","description":"Notify async tasks or threads","license":[""],"tags":["blocking","condvar","park","wake","eventcount"],"downloads":65569024,"repositories":["crates.io"]},"rust:core-foundation-sys":{"coordinates":"rust:core-foundation-sys","name":"core-foundation-sys","description":"Bindings to Core Foundation for macOS","license":[""],"tags":[],"downloads":64993039,"repositories":["crates.io"]},"rust:lazycell":{"coordinates":"rust:lazycell","name":"lazycell","description":"A library providing a lazily filled Cell struct","license":[""],"tags":["library","lazy","cell","lazycell"],"downloads":64535897,"repositories":["crates.io"]},"rust:phf_generator":{"coordinates":"rust:phf_generator","name":"phf_generator","description":"PHF generation logic","license":[""],"tags":[],"downloads":63497813,"repositories":["crates.io"]},"rust:num-complex":{"coordinates":"rust:num-complex","name":"num-complex","description":"Complex numbers implementation for Rust","license":[""],"tags":["mathematics","numerics"],"downloads":63493952,"repositories":["crates.io"]},"rust:dirs-sys":{"coordinates":"rust:dirs-sys","name":"dirs-sys","description":"System-level helper functions for the dirs and directories crates.","license":[""],"tags":[],"downloads":63120209,"repositories":["crates.io"]},"rust:half":{"coordinates":"rust:half","name":"half","description":"Half-precision floating point f16 and bf16 types for Rust implementing the IEEE 754-2008 standard binary16 and bfloat16 types.","license":[""],"tags":["no_std","f16","bfloat16"],"downloads":63070967,"repositories":["crates.io"]},"rust:crypto-mac":{"coordinates":"rust:crypto-mac","name":"crypto-mac","description":"Trait for Message Authentication Code (MAC) algorithms","license":[""],"tags":["crypto","mac"],"downloads":62872981,"repositories":["crates.io"]},"rust:web-sys":{"coordinates":"rust:web-sys","name":"web-sys","description":"Bindings for all Web APIs, a procedurally generated crate from WebIDL ","license":[""],"tags":[],"downloads":62778845,"repositories":["crates.io"]},"rust:num-iter":{"coordinates":"rust:num-iter","name":"num-iter","description":"External iterators for generic mathematics","license":[""],"tags":["mathematics","numerics"],"downloads":62329374,"repositories":["crates.io"]},"rust:cipher":{"coordinates":"rust:cipher","name":"cipher","description":"Traits for describing block ciphers and stream ciphers","license":[""],"tags":["crypto","trait","block-cipher","stream-cipher"],"downloads":62173209,"repositories":["crates.io"]},"rust:pest":{"coordinates":"rust:pest","name":"pest","description":"The Elegant Parser","license":[""],"tags":["parser","peg","grammar","pest"],"downloads":61284874,"repositories":["crates.io"]},"rust:bindgen":{"coordinates":"rust:bindgen","name":"bindgen","description":"Automatically generates Rust FFI bindings to C and C++ libraries.","license":[""],"tags":["bindings","ffi","code-generation"],"downloads":60995036,"repositories":["crates.io"]},"rust:bincode":{"coordinates":"rust:bincode","name":"bincode","description":"A binary serialization / deserialization strategy for transforming structs into bytes and vice versa!","license":[""],"tags":["binary","encode","decode","serialize","deserialize"],"downloads":60910823,"repositories":["crates.io"]},"rust:prost-types":{"coordinates":"rust:prost-types","name":"prost-types","description":"A Protocol Buffers implementation for the Rust Language.","license":[""],"tags":[],"downloads":60905448,"repositories":["crates.io"]},"rust:stable_deref_trait":{"coordinates":"rust:stable_deref_trait","name":"stable_deref_trait","description":"An unsafe marker trait for types like Box and Rc that dereference to a stable address even when moved, and hence can be used with libraries such as owning_ref and rental. ","license":[""],"tags":[],"downloads":60267882,"repositories":["crates.io"]},"rust:derive_more":{"coordinates":"rust:derive_more","name":"derive_more","description":"Adds #[derive(x)] macros for more traits","license":[""],"tags":["from","derive","display","add","intoiterator"],"downloads":60030548,"repositories":["crates.io"]},"rust:is-terminal":{"coordinates":"rust:is-terminal","name":"is-terminal","description":"Test whether a given stream is a terminal","license":[""],"tags":["terminal","tty","isatty"],"downloads":59494794,"repositories":["crates.io"]},"rust:zstd-safe":{"coordinates":"rust:zstd-safe","name":"zstd-safe","description":"Safe low-level bindings for the zstd compression library.","license":[""],"tags":["compression","zstd","zstandard"],"downloads":59447527,"repositories":["crates.io"]},"rust:zstd":{"coordinates":"rust:zstd","name":"zstd","description":"Binding for the zstd compression library.","license":[""],"tags":["compression","zstd","zstandard"],"downloads":59210931,"repositories":["crates.io"]},"rust:serde_yaml":{"coordinates":"rust:serde_yaml","name":"serde_yaml","description":"YAML data format for Serde","license":[""],"tags":["serialization","yaml","serde"],"downloads":58758596,"repositories":["crates.io"]},"rust:libz-sys":{"coordinates":"rust:libz-sys","name":"libz-sys","description":"Low-level bindings to the system libz library (also known as zlib).","license":[""],"tags":["zlib","zlib-ng"],"downloads":58348781,"repositories":["crates.io"]},"rust:block-padding":{"coordinates":"rust:block-padding","name":"block-padding","description":"Padding and unpadding of messages divided into blocks.","license":[""],"tags":["padding","pkcs7","ansix923","iso7816"],"downloads":58286434,"repositories":["crates.io"]},"rust:tokio-native-tls":{"coordinates":"rust:tokio-native-tls","name":"tokio-native-tls","description":"An implementation of TLS/SSL streams for Tokio using native-tls giving an implementation of TLS for nonblocking I/O streams. ","license":[""],"tags":[],"downloads":57747524,"repositories":["crates.io"]},"rust:ordered-float":{"coordinates":"rust:ordered-float","name":"ordered-float","description":"Wrappers for total ordering on floats","license":[""],"tags":["sort","no_std","f64","ord","f32"],"downloads":57709770,"repositories":["crates.io"]},"rust:mime_guess":{"coordinates":"rust:mime_guess","name":"mime_guess","description":"A simple crate for detection of a file''s MIME type by its extension.","license":[""],"tags":["filesystem","mime","extension"],"downloads":57012223,"repositories":["crates.io"]},"rust:tower-layer":{"coordinates":"rust:tower-layer","name":"tower-layer","description":"Decorates a `Service` to allow easy composition between `Service`s. ","license":[""],"tags":[],"downloads":56599140,"repositories":["crates.io"]},"rust:ucd-trie":{"coordinates":"rust:ucd-trie","name":"ucd-trie","description":"A trie for storing Unicode codepoint sets and maps. ","license":[""],"tags":["unicode","database","trie","character","codepoint"],"downloads":56240705,"repositories":["crates.io"]},"rust:tower":{"coordinates":"rust:tower","name":"tower","description":"Tower is a library of modular and reusable components for building robust clients and servers. ","license":[""],"tags":["io","async","non-blocking","service","futures"],"downloads":55720577,"repositories":["crates.io"]},"rust:aes":{"coordinates":"rust:aes","name":"aes","description":"Pure Rust implementation of the Advanced Encryption Standard (a.k.a. Rijndael)","license":[""],"tags":["aes","crypto","block-cipher","rijndael"],"downloads":55421050,"repositories":["crates.io"]},"rust:libm":{"coordinates":"rust:libm","name":"libm","description":"libm in pure Rust","license":[""],"tags":["math","libm"],"downloads":55380154,"repositories":["crates.io"]},"rust:yaml-rust":{"coordinates":"rust:yaml-rust","name":"yaml-rust","description":"The missing YAML 1.2 parser for rust","license":[""],"tags":[],"downloads":55199652,"repositories":["crates.io"]},"rust:dashmap":{"coordinates":"rust:dashmap","name":"dashmap","description":"Blazing fast concurrent HashMap for Rust.","license":[""],"tags":["concurrent","hashmap","atomic"],"downloads":54763613,"repositories":["crates.io"]},"rust:zstd-sys":{"coordinates":"rust:zstd-sys","name":"zstd-sys","description":"Low-level bindings for the zstd compression library.","license":[""],"tags":["compression","zstd","zstandard"],"downloads":54668706,"repositories":["crates.io"]},"rust:async-stream":{"coordinates":"rust:async-stream","name":"async-stream","description":"Asynchronous streams using async & await notation","license":[""],"tags":[],"downloads":54264807,"repositories":["crates.io"]},"rust:async-stream-impl":{"coordinates":"rust:async-stream-impl","name":"async-stream-impl","description":"proc macros for async-stream crate","license":[""],"tags":[],"downloads":54193369,"repositories":["crates.io"]},"rust:rand_pcg":{"coordinates":"rust:rand_pcg","name":"rand_pcg","description":"Selected PCG random number generators ","license":[""],"tags":["random","rng","pcg"],"downloads":54073674,"repositories":["crates.io"]},"rust:prost-build":{"coordinates":"rust:prost-build","name":"prost-build","description":"A Protocol Buffers implementation for the Rust Language.","license":[""],"tags":[],"downloads":53737153,"repositories":["crates.io"]},"rust:clang-sys":{"coordinates":"rust:clang-sys","name":"clang-sys","description":"Rust bindings for libclang.","license":[""],"tags":[],"downloads":53403553,"repositories":["crates.io"]},"rust:utf8parse":{"coordinates":"rust:utf8parse","name":"utf8parse","description":"Table-driven UTF-8 parser","license":[""],"tags":["table","parse","utf8"],"downloads":53207581,"repositories":["crates.io"]},"rust:winnow":{"coordinates":"rust:winnow","name":"winnow","description":"A byte-oriented, zero-copy, parser combinators library","license":[""],"tags":["parser","parsing","streaming","bit","parser-combinators"],"downloads":53136870,"repositories":["crates.io"]},"rust:md-5":{"coordinates":"rust:md-5","name":"md-5","description":"MD5 hash function","license":[""],"tags":["hash","md5","crypto","digest"],"downloads":52374098,"repositories":["crates.io"]},"rust:clap_builder":{"coordinates":"rust:clap_builder","name":"clap_builder","description":"A simple to use, efficient, and full-featured Command Line Argument Parser","license":[""],"tags":["parser","argument","cli","parse","arg"],"downloads":51804703,"repositories":["crates.io"]},"rust:cexpr":{"coordinates":"rust:cexpr","name":"cexpr","description":"A C expression parser and evaluator","license":[""],"tags":["parser","c","expression"],"downloads":51611312,"repositories":["crates.io"]},"rust:core-foundation":{"coordinates":"rust:core-foundation","name":"core-foundation","description":"Bindings to Core Foundation for macOS","license":[""],"tags":["framework","macos","objc"],"downloads":51010105,"repositories":["crates.io"]},"rust:num":{"coordinates":"rust:num","name":"num","description":"A collection of numeric types and traits for Rust, including bigint, complex, rational, range iterators, generic integers, and more! ","license":[""],"tags":["mathematics","numerics","bignum"],"downloads":50512662,"repositories":["crates.io"]},"rust:toml_datetime":{"coordinates":"rust:toml_datetime","name":"toml_datetime","description":"A TOML-compatible datetime type","license":[""],"tags":["encoding","toml"],"downloads":50354637,"repositories":["crates.io"]},"rust:bit-vec":{"coordinates":"rust:bit-vec","name":"bit-vec","description":"A vector of bits","license":[""],"tags":["data-structures","bitmap","bit","bitvec","bitmask"],"downloads":50049022,"repositories":["crates.io"]},"rust:tracing-futures":{"coordinates":"rust:tracing-futures","name":"tracing-futures","description":"Utilities for instrumenting `futures` with `tracing`. ","license":[""],"tags":["logging","async","futures","profiling","tracing"],"downloads":49975317,"repositories":["crates.io"]},"rust:constant_time_eq":{"coordinates":"rust:constant_time_eq","name":"constant_time_eq","description":"Compares two equal-sized byte strings in constant time.","license":[""],"tags":["constant_time"],"downloads":49794893,"repositories":["crates.io"]},"rust:multimap":{"coordinates":"rust:multimap","name":"multimap","description":"A multimap implementation.","license":[""],"tags":[],"downloads":49778204,"repositories":["crates.io"]},"rust:nu-ansi-term":{"coordinates":"rust:nu-ansi-term","name":"nu-ansi-term","description":"Library for ANSI terminal colors and styles (bold, underline)","license":[""],"tags":[],"downloads":49672130,"repositories":["crates.io"]},"rust:anstyle":{"coordinates":"rust:anstyle","name":"anstyle","description":"ANSI text styling","license":[""],"tags":["ansi","terminal","color","no_std"],"downloads":49398435,"repositories":["crates.io"]},"rust:ctor":{"coordinates":"rust:ctor","name":"ctor","description":"__attribute__((constructor)) for Rust","license":[""],"tags":[],"downloads":49394624,"repositories":["crates.io"]},"rust:data-encoding":{"coordinates":"rust:data-encoding","name":"data-encoding","description":"Efficient and customizable data-encoding functions like base64, base32, and hex","license":[""],"tags":["hex","no_std","base64","base32"],"downloads":49336194,"repositories":["crates.io"]},"rust:wasm-bindgen-futures":{"coordinates":"rust:wasm-bindgen-futures","name":"wasm-bindgen-futures","description":"Bridging the gap between Rust Futures and JavaScript Promises","license":[""],"tags":[],"downloads":49282932,"repositories":["crates.io"]},"rust:rustls-native-certs":{"coordinates":"rust:rustls-native-certs","name":"rustls-native-certs","description":"rustls-native-certs allows rustls to use the platform native certificate store","license":[""],"tags":[],"downloads":49067404,"repositories":["crates.io"]},"rust:arc-swap":{"coordinates":"rust:arc-swap","name":"arc-swap","description":"Atomically swappable Arc","license":[""],"tags":["arc","atomic"],"downloads":48713675,"repositories":["crates.io"]},"rust:winreg":{"coordinates":"rust:winreg","name":"winreg","description":"Rust bindings to MS Windows Registry API","license":[""],"tags":["winsdk","registry","windows"],"downloads":48523164,"repositories":["crates.io"]},"rust:peeking_take_while":{"coordinates":"rust:peeking_take_while","name":"peeking_take_while","description":"Like `Iterator::take_while`, but calls the predicate on a peeked value. This allows you to use `Iterator::by_ref` and `Iterator::take_while` together, and still get the first value for which the `take_while` predicate returned false after dropping the `by_ref`.","license":[""],"tags":["iterator","peek","take_while","by_ref"],"downloads":48441209,"repositories":["crates.io"]},"rust:csv":{"coordinates":"rust:csv","name":"csv","description":"Fast CSV parsing with support for serde.","license":[""],"tags":["parser","csv","comma","delimited","serde"],"downloads":48362849,"repositories":["crates.io"]},"rust:console":{"coordinates":"rust:console","name":"console","description":"A terminal and console abstraction for Rust","license":[""],"tags":["console","ansi","terminal","cli","colors"],"downloads":48190843,"repositories":["crates.io"]},"rust:openssl-macros":{"coordinates":"rust:openssl-macros","name":"openssl-macros","description":"Internal macros used by the openssl crate.","license":[""],"tags":[],"downloads":47798952,"repositories":["crates.io"]},"rust:concurrent-queue":{"coordinates":"rust:concurrent-queue","name":"concurrent-queue","description":"Concurrent multi-producer multi-consumer queue","license":[""],"tags":["channel","mpmc","spmc","mpsc","spsc"],"downloads":47787426,"repositories":["crates.io"]},"rust:derivative":{"coordinates":"rust:derivative","name":"derivative","description":"A set of alternative `derive` attributes for Rust","license":[""],"tags":["macro","plugin","derive","macro1-1"],"downloads":47747742,"repositories":["crates.io"]},"rust:rand_xorshift":{"coordinates":"rust:rand_xorshift","name":"rand_xorshift","description":"Xorshift random number generator ","license":[""],"tags":["random","rng","xorshift"],"downloads":47642750,"repositories":["crates.io"]},"rust:bitvec":{"coordinates":"rust:bitvec","name":"bitvec","description":"Addresses memory by bits, for packed collections and bitfields","license":[""],"tags":["bitmap","bitfields","bitvec","bitstream","bitvector"],"downloads":47396084,"repositories":["crates.io"]},"rust:scoped-tls":{"coordinates":"rust:scoped-tls","name":"scoped-tls","description":"Library implementation of the standard library''s old `scoped_thread_local!` macro for providing scoped access to thread local storage (TLS) so any type can be stored into TLS. ","license":[""],"tags":[],"downloads":47347410,"repositories":["crates.io"]},"rust:equivalent":{"coordinates":"rust:equivalent","name":"equivalent","description":"Traits for key comparison in maps.","license":[""],"tags":["hashmap","no_std"],"downloads":47207767,"repositories":["crates.io"]},"rust:csv-core":{"coordinates":"rust:csv-core","name":"csv-core","description":"Bare bones CSV parsing with no_std support.","license":[""],"tags":["parser","csv","comma","delimited","no_std"],"downloads":46900262,"repositories":["crates.io"]},"rust:tonic":{"coordinates":"rust:tonic","name":"tonic","description":"A gRPC over HTTP/2 implementation focused on high performance, interoperability, and flexibility. ","license":[""],"tags":["rpc","async","protobuf","futures","grpc"],"downloads":46803214,"repositories":["crates.io"]},"rust:signature":{"coordinates":"rust:signature","name":"signature","description":"Traits for cryptographic signature algorithms (e.g. ECDSA, Ed25519)","license":[""],"tags":["crypto","ecdsa","ed25519","signature","signing"],"downloads":46650167,"repositories":["crates.io"]},"rust:home":{"coordinates":"rust:home","name":"home","description":"Shared definitions of home directories.","license":[""],"tags":[],"downloads":46332660,"repositories":["crates.io"]},"rust:futures-lite":{"coordinates":"rust:futures-lite","name":"futures-lite","description":"Futures, streams, and async I/O combinators","license":[""],"tags":["async","asynchronous","futures"],"downloads":46286715,"repositories":["crates.io"]},"rust:memmap2":{"coordinates":"rust:memmap2","name":"memmap2","description":"Cross-platform Rust API for memory-mapped file IO","license":[""],"tags":["file","io","mmap","memory-map"],"downloads":46211542,"repositories":["crates.io"]},"rust:overload":{"coordinates":"rust:overload","name":"overload","description":"Provides a macro to simplify operator overloading.","license":[""],"tags":["macro","operator","overloading","op"],"downloads":45949212,"repositories":["crates.io"]},"rust:crunchy":{"coordinates":"rust:crunchy","name":"crunchy","description":"Crunchy unroller: deterministically unroll constant loops","license":[""],"tags":[],"downloads":45898762,"repositories":["crates.io"]},"rust:radium":{"coordinates":"rust:radium","name":"radium","description":"Portable interfaces for maybe-atomic types","license":[""],"tags":["cell","generic","trait","sync","atomic"],"downloads":45857763,"repositories":["crates.io"]},"rust:dirs-sys-next":{"coordinates":"rust:dirs-sys-next","name":"dirs-sys-next","description":"system-level helper functions for the dirs and directories crates","license":[""],"tags":[],"downloads":45689188,"repositories":["crates.io"]},"rust:async-channel":{"coordinates":"rust:async-channel","name":"async-channel","description":"Async multi-producer multi-consumer channel","license":[""],"tags":["mpmc","spmc","mpsc","futures","chan"],"downloads":45618914,"repositories":["crates.io"]},"rust:pest_derive":{"coordinates":"rust:pest_derive","name":"pest_derive","description":"pest''s derive macro","license":[""],"tags":["parser","peg","grammar","pest"],"downloads":45530955,"repositories":["crates.io"]},"rust:arrayref":{"coordinates":"rust:arrayref","name":"arrayref","description":"Macros to take array references of slices","license":[""],"tags":[],"downloads":44999391,"repositories":["crates.io"]},"rust:prettyplease":{"coordinates":"rust:prettyplease","name":"prettyplease","description":"A minimal `syn` syntax tree pretty-printer","license":[""],"tags":["rustfmt"],"downloads":44963205,"repositories":["crates.io"]},"rust:signal-hook":{"coordinates":"rust:signal-hook","name":"signal-hook","description":"Unix signal handling","license":[""],"tags":["signal","unix","daemon"],"downloads":44924578,"repositories":["crates.io"]},"rust:dtoa":{"coordinates":"rust:dtoa","name":"dtoa","description":"Fast floating point primitive to string conversion","license":[""],"tags":["float"],"downloads":44674879,"repositories":["crates.io"]},"rust:pest_meta":{"coordinates":"rust:pest_meta","name":"pest_meta","description":"pest meta language parser and validator","license":[""],"tags":["parser","meta","pest","optimizer"],"downloads":44567802,"repositories":["crates.io"]},"rust:pest_generator":{"coordinates":"rust:pest_generator","name":"pest_generator","description":"pest code generator","license":[""],"tags":["generator","pest"],"downloads":44540936,"repositories":["crates.io"]},"rust:phf_codegen":{"coordinates":"rust:phf_codegen","name":"phf_codegen","description":"Codegen library for PHF types","license":[""],"tags":[],"downloads":44416015,"repositories":["crates.io"]},"rust:num_threads":{"coordinates":"rust:num_threads","name":"num_threads","description":"A minimal library that determines the number of running threads for the current process.","license":[""],"tags":[],"downloads":43919822,"repositories":["crates.io"]},"rust:rustls-webpki":{"coordinates":"rust:rustls-webpki","name":"rustls-webpki","description":"Web PKI X.509 Certificate Verification.","license":[""],"tags":[],"downloads":43840727,"repositories":["crates.io"]},"rust:anstream":{"coordinates":"rust:anstream","name":"anstream","description":"A simple cross platform library for writing colored text to a terminal.","license":[""],"tags":["ansi","terminal","color","strip","wincon"],"downloads":43813605,"repositories":["crates.io"]},"rust:void":{"coordinates":"rust:void","name":"void","description":"The uninhabited void type for use in statically impossible cases.","license":[""],"tags":[],"downloads":43627301,"repositories":["crates.io"]},"rust:globset":{"coordinates":"rust:globset","name":"globset","description":"Cross platform single glob and glob set matching. Glob set matching is the process of matching one or more glob patterns against a single candidate path simultaneously, and returning all of the globs that matched. ","license":[""],"tags":["glob","set","regex","pattern","multiple"],"downloads":43531235,"repositories":["crates.io"]},"rust:indoc":{"coordinates":"rust:indoc","name":"indoc","description":"Indented document literals","license":[""],"tags":["string","literal","heredoc","nowdoc","multiline"],"downloads":43431284,"repositories":["crates.io"]},"rust:schannel":{"coordinates":"rust:schannel","name":"schannel","description":"Schannel bindings for rust, allowing SSL/TLS (e.g. https) without openssl","license":[""],"tags":["tls","ssl","windows","schannel","https"],"downloads":43339724,"repositories":["crates.io"]},"rust:security-framework":{"coordinates":"rust:security-framework","name":"security-framework","description":"Security.framework bindings for macOS and iOS","license":[""],"tags":["crypto","tls","ssl","ios","keychain"],"downloads":43243758,"repositories":["crates.io"]},"rust:hostname":{"coordinates":"rust:hostname","name":"hostname","description":"Cross-platform system''s host name functions","license":[""],"tags":["hostname","gethostname","sethostname"],"downloads":43162990,"repositories":["crates.io"]},"rust:anstyle-parse":{"coordinates":"rust:anstyle-parse","name":"anstyle-parse","description":"Parse ANSI Style Escapes","license":[""],"tags":["ansi","terminal","color","vte"],"downloads":42919074,"repositories":["crates.io"]},"rust:security-framework-sys":{"coordinates":"rust:security-framework-sys","name":"security-framework-sys","description":"Apple `Security.framework` low-level FFI bindings","license":[""],"tags":["ffi","crypto","tls","ssl","ios"],"downloads":42674426,"repositories":["crates.io"]},"rust:bytemuck":{"coordinates":"rust:bytemuck","name":"bytemuck","description":"A crate for mucking around with piles of bytes.","license":[""],"tags":["bytes","transmute","casting"],"downloads":42489348,"repositories":["crates.io"]},"rust:pem":{"coordinates":"rust:pem","name":"pem","description":"Parse and encode PEM-encoded data.","license":[""],"tags":["no_std","no-std","pem"],"downloads":42377046,"repositories":["crates.io"]},"rust:der":{"coordinates":"rust:der","name":"der","description":"Pure Rust embedded-friendly implementation of the Distinguished Encoding Rules (DER) for Abstract Syntax Notation One (ASN.1) as described in ITU X.690 with full support for heapless no_std targets ","license":[""],"tags":["crypto","asn1","pkcs","itu"],"downloads":42342167,"repositories":["crates.io"]},"rust:bit-set":{"coordinates":"rust:bit-set","name":"bit-set","description":"A set of bits","license":[""],"tags":["data-structures","bitset"],"downloads":42188892,"repositories":["crates.io"]},"rust:funty":{"coordinates":"rust:funty","name":"funty","description":"Trait generalization over the primitive types","license":[""],"tags":["numerics","primitives","traits","pointers"],"downloads":42142056,"repositories":["crates.io"]},"rust:parking":{"coordinates":"rust:parking","name":"parking","description":"Thread parking and unparking","license":[""],"tags":["notify","thread","park","condition","wake"],"downloads":42081956,"repositories":["crates.io"]},"rust:cast":{"coordinates":"rust:cast","name":"cast","description":"Ergonomic, checked cast functions for primitive types","license":[""],"tags":["float","integer","checked","cast","primitive"],"downloads":42065691,"repositories":["crates.io"]},"rust:criterion":{"coordinates":"rust:criterion","name":"criterion","description":"Statistics-driven micro-benchmarking library","license":[""],"tags":["benchmark","criterion"],"downloads":41959676,"repositories":["crates.io"]},"rust:dirs-next":{"coordinates":"rust:dirs-next","name":"dirs-next","description":"A tiny low-level library that provides platform-specific standard locations of directories for config, cache and other data on Linux, Windows, macOS and Redox by leveraging the mechanisms defined by the XDG base/user directory specifications on Linux, the Known Folder API on Windows, and the Standard Directory guidelines on macOS. ","license":[""],"tags":["path","xdg","basedir","folder","app_dirs"],"downloads":41567431,"repositories":["crates.io"]},"rust:wyz":{"coordinates":"rust:wyz","name":"wyz","description":"myrrlynâs utility collection","license":[""],"tags":[],"downloads":41566826,"repositories":["crates.io"]},"rust:tap":{"coordinates":"rust:tap","name":"tap","description":"Generic extensions for tapping values in Rust","license":[""],"tags":["functional","pipe","tap","tap_ok","tap_some"],"downloads":41503722,"repositories":["crates.io"]},"rust:structopt":{"coordinates":"rust:structopt","name":"structopt","description":"Parse command line argument by defining a struct.","license":[""],"tags":["docopt","cli","clap","derive"],"downloads":41487067,"repositories":["crates.io"]},"rust:net2":{"coordinates":"rust:net2","name":"net2","description":"Extensions to the standard library''s networking types as proposed in RFC 1158. ","license":[""],"tags":[],"downloads":41204849,"repositories":["crates.io"]},"rust:structopt-derive":{"coordinates":"rust:structopt-derive","name":"structopt-derive","description":"Parse command line argument by defining a struct, derive crate.","license":[""],"tags":["docopt","cli","clap","derive"],"downloads":41107136,"repositories":["crates.io"]},"rust:axum":{"coordinates":"rust:axum","name":"axum","description":"Web framework that focuses on ergonomics and modularity","license":[""],"tags":["http","web","framework"],"downloads":41044687,"repositories":["crates.io"]},"rust:iovec":{"coordinates":"rust:iovec","name":"iovec","description":"Portable buffer type for scatter/gather I/O operations ","license":[""],"tags":["networking","io","scatter","gather","vectored"],"downloads":40979666,"repositories":["crates.io"]},"rust:cargo_metadata":{"coordinates":"rust:cargo_metadata","name":"cargo_metadata","description":"structured access to the output of `cargo metadata`","license":[""],"tags":[],"downloads":40919471,"repositories":["crates.io"]},"rust:fallible-iterator":{"coordinates":"rust:fallible-iterator","name":"fallible-iterator","description":"Fallible iterator traits","license":[""],"tags":[],"downloads":40843971,"repositories":["crates.io"]},"rust:cookie":{"coordinates":"rust:cookie","name":"cookie","description":"HTTP cookie parsing and cookie jar management. Supports signed and private (encrypted, authenticated) jars. ","license":[""],"tags":[],"downloads":40805560,"repositories":["crates.io"]},"rust:async-lock":{"coordinates":"rust:async-lock","name":"async-lock","description":"Async synchronization primitives","license":[""],"tags":["lock","mutex","rwlock","semaphore","barrier"],"downloads":40741651,"repositories":["crates.io"]},"rust:combine":{"coordinates":"rust:combine","name":"combine","description":"Fast parser combinators on arbitrary streams with zero-copy support.","license":[""],"tags":["parser","parsing","combinators","ll"],"downloads":40683254,"repositories":["crates.io"]},"rust:waker-fn":{"coordinates":"rust:waker-fn","name":"waker-fn","description":"Convert closures into wakers","license":[""],"tags":["closure","async","callback","waker","wake"],"downloads":40643922,"repositories":["crates.io"]},"rust:lru":{"coordinates":"rust:lru","name":"lru","description":"A LRU cache implementation","license":[""],"tags":["cache","lru"],"downloads":40612068,"repositories":["crates.io"]},"rust:matchit":{"coordinates":"rust:matchit","name":"matchit","description":"A high performance, zero-copy URL router.","license":[""],"tags":["url","path","tree","router","match"],"downloads":40212814,"repositories":["crates.io"]},"rust:base64ct":{"coordinates":"rust:base64ct","name":"base64ct","description":"Pure Rust implementation of Base64 (RFC 4648) which avoids any usages of data-dependent branches/LUTs and thereby provides portable \"best effort\" constant-time operation and embedded-friendly no_std support ","license":[""],"tags":["crypto","base64","pem","phc"],"downloads":40131961,"repositories":["crates.io"]},"rust:serde_with":{"coordinates":"rust:serde_with","name":"serde_with","description":"Custom de/serialization functions for Rust''s serde","license":[""],"tags":["serialization","utilities","serde","deserialization"],"downloads":40009461,"repositories":["crates.io"]},"rust:axum-core":{"coordinates":"rust:axum-core","name":"axum-core","description":"Core types and traits for axum","license":[""],"tags":["http","web","framework"],"downloads":39909183,"repositories":["crates.io"]},"rust:terminal_size":{"coordinates":"rust:terminal_size","name":"terminal_size","description":"Gets the size of your Linux or Windows terminal","license":[""],"tags":["console","terminal","dimensions","term","size"],"downloads":39703861,"repositories":["crates.io"]},"rust:sync_wrapper":{"coordinates":"rust:sync_wrapper","name":"sync_wrapper","description":"A tool for enlisting the compiler''s help in proving the absence of concurrency","license":[""],"tags":["concurrency"],"downloads":39615312,"repositories":["crates.io"]},"rust:tinytemplate":{"coordinates":"rust:tinytemplate","name":"tinytemplate","description":"Simple, lightweight template engine","license":[""],"tags":["html","template"],"downloads":39599282,"repositories":["crates.io"]},"rust:tungstenite":{"coordinates":"rust:tungstenite","name":"tungstenite","description":"Lightweight stream-based WebSocket implementation","license":[""],"tags":["io","websocket","web"],"downloads":39571118,"repositories":["crates.io"]},"rust:criterion-plot":{"coordinates":"rust:criterion-plot","name":"criterion-plot","description":"Criterion''s plotting library","license":[""],"tags":["plotting","gnuplot","criterion"],"downloads":39505072,"repositories":["crates.io"]},"rust:utf-8":{"coordinates":"rust:utf-8","name":"utf-8","description":"Incremental, zero-copy UTF-8 decoding with error handling","license":[""],"tags":[],"downloads":39323426,"repositories":["crates.io"]},"rust:match_cfg":{"coordinates":"rust:match_cfg","name":"match_cfg","description":"A convenience macro to ergonomically define an item depending on a large number of `#[cfg]` parameters. Structured like match statement, the first matching branch is the item that gets emitted. ","license":[""],"tags":[],"downloads":39319585,"repositories":["crates.io"]},"rust:pbkdf2":{"coordinates":"rust:pbkdf2","name":"pbkdf2","description":"Generic implementation of PBKDF2","license":[""],"tags":["hashing","crypto","password","phf"],"downloads":39263283,"repositories":["crates.io"]},"rust:serde_with_macros":{"coordinates":"rust:serde_with_macros","name":"serde_with_macros","description":"proc-macro library for serde_with","license":[""],"tags":["serialization","utilities","serde","deserialization"],"downloads":39206611,"repositories":["crates.io"]},"rust:spki":{"coordinates":"rust:spki","name":"spki","description":"X.509 Subject Public Key Info (RFC5280) describing public keys as well as their associated AlgorithmIdentifiers (i.e. OIDs) ","license":[""],"tags":["crypto","x509"],"downloads":39183630,"repositories":["crates.io"]},"rust:diff":{"coordinates":"rust:diff","name":"diff","description":"An LCS based slice and string diffing implementation.","license":[""],"tags":[],"downloads":38945129,"repositories":["crates.io"]},"rust:const-oid":{"coordinates":"rust:const-oid","name":"const-oid","description":"Const-friendly implementation of the ISO/IEC Object Identifier (OID) standard as defined in ITU X.660, with support for BER/DER encoding/decoding as well as heapless no_std (i.e. embedded) support ","license":[""],"tags":["iso","oid","itu","iec"],"downloads":38735334,"repositories":["crates.io"]},"rust:term":{"coordinates":"rust:term","name":"term","description":"A terminal formatting library ","license":[""],"tags":[],"downloads":38660918,"repositories":["crates.io"]},"rust:lexical-core":{"coordinates":"rust:lexical-core","name":"lexical-core","description":"Lexical, to- and from-string conversion routines.","license":[""],"tags":["encoding","parsing","lexical","no_std"],"downloads":38635950,"repositories":["crates.io"]},"rust:curve25519-dalek":{"coordinates":"rust:curve25519-dalek","name":"curve25519-dalek","description":"A pure-Rust implementation of group operations on ristretto255 and Curve25519","license":[""],"tags":["crypto","cryptography","curve25519","ristretto","ristretto255"],"downloads":38625574,"repositories":["crates.io"]},"rust:polling":{"coordinates":"rust:polling","name":"polling","description":"Portable interface to epoll, kqueue, event ports, and IOCP","license":[""],"tags":["iocp","mio","epoll","kqueue"],"downloads":38513221,"repositories":["crates.io"]},"rust:pkcs8":{"coordinates":"rust:pkcs8","name":"pkcs8","description":"Pure Rust implementation of Public-Key Cryptography Standards (PKCS) #8: Private-Key Information Syntax Specification (RFC 5208), with additional support for PKCS#8v2 asymmetric key packages (RFC 5958) ","license":[""],"tags":["crypto","key","pkcs","private"],"downloads":38251859,"repositories":["crates.io"]},"rust:anstyle-query":{"coordinates":"rust:anstyle-query","name":"anstyle-query","description":"Look up colored console capabilities","license":[""],"tags":["ansi","terminal","cli","color","no-std"],"downloads":38203276,"repositories":["crates.io"]},"rust:aead":{"coordinates":"rust:aead","name":"aead","description":"Traits for Authenticated Encryption with Associated Data (AEAD) algorithms, such as AES-GCM as ChaCha20Poly1305, which provide a high-level API ","license":[""],"tags":["crypto","encryption"],"downloads":38185215,"repositories":["crates.io"]},"rust:oorandom":{"coordinates":"rust:oorandom","name":"oorandom","description":"A tiny, robust PRNG implementation.","license":[""],"tags":["random","rng","pcg","prng"],"downloads":38131501,"repositories":["crates.io"]},"rust:target-lexicon":{"coordinates":"rust:target-lexicon","name":"target-lexicon","description":"Targeting utilities for compilers and related tools","license":[""],"tags":["compiler","jit","host","target","triple"],"downloads":37964027,"repositories":["crates.io"]},"rust:serde_bytes":{"coordinates":"rust:serde_bytes","name":"serde_bytes","description":"Optimized handling of `&[u8]` and `Vec<u8>` for Serde","license":[""],"tags":["serialization","bytes","no_std","serde"],"downloads":37848569,"repositories":["crates.io"]},"rust:quick-xml":{"coordinates":"rust:quick-xml","name":"quick-xml","description":"High performance xml reader and writer","license":[""],"tags":["parser","html","xml","writer","serde"],"downloads":37343359,"repositories":["crates.io"]},"rust:xml-rs":{"coordinates":"rust:xml-rs","name":"xml-rs","description":"An XML library in pure Rust","license":[""],"tags":["parser","parsing","xml","writer","sax"],"downloads":37319491,"repositories":["crates.io"]},"rust:tonic-build":{"coordinates":"rust:tonic-build","name":"tonic-build","description":"Codegen module of `tonic` gRPC implementation. ","license":[""],"tags":["rpc","async","codegen","protobuf","grpc"],"downloads":37290061,"repositories":["crates.io"]},"rust:predicates":{"coordinates":"rust:predicates","name":"predicates","description":"An implementation of boolean-valued predicate functions.","license":[""],"tags":["logic","boolean","match","predicate","combinatorial"],"downloads":37170447,"repositories":["crates.io"]},"rust:tar":{"coordinates":"rust:tar","name":"tar","description":"A Rust implementation of a TAR file reader and writer. This library does not currently handle compression, but it is abstract over all I/O readers and writers. Additionally, great lengths are taken to ensure that the entire contents are never required to be entirely resident in memory all at once. ","license":[""],"tags":["tar","tarfile","encoding"],"downloads":37036922,"repositories":["crates.io"]},"rust:miow":{"coordinates":"rust:miow","name":"miow","description":"A zero overhead I/O library for Windows, focusing on IOCP and async I/O abstractions. ","license":[""],"tags":["io","iocp","windows","overlapped"],"downloads":36875236,"repositories":["crates.io"]},"rust:zeroize_derive":{"coordinates":"rust:zeroize_derive","name":"zeroize_derive","description":"Custom derive support for zeroize","license":[""],"tags":["memory","volatile","secure","memset","zero"],"downloads":36813055,"repositories":["crates.io"]},"rust:colorchoice":{"coordinates":"rust:colorchoice","name":"colorchoice","description":"Global override of color control","license":[""],"tags":["ansi","terminal","cli","color","no-std"],"downloads":36780917,"repositories":["crates.io"]},"rust:async-io":{"coordinates":"rust:async-io","name":"async-io","description":"Async I/O and timers","license":[""],"tags":["iocp","mio","epoll","kqueue"],"downloads":36742072,"repositories":["crates.io"]},"rust:redox_users":{"coordinates":"rust:redox_users","name":"redox_users","description":"A Rust library to access Redox users and groups functionality","license":[""],"tags":["auth","redox"],"downloads":36681767,"repositories":["crates.io"]},"rust:num_enum":{"coordinates":"rust:num_enum","name":"num_enum","description":"Procedural macros to make inter-operation between primitives and enums easier.","license":[""],"tags":["ffi","conversion","enum","derive","safe"],"downloads":36316803,"repositories":["crates.io"]},"rust:num_enum_derive":{"coordinates":"rust:num_enum_derive","name":"num_enum_derive","description":"Internal implementation details for ::num_enum (Procedural macros to make inter-operation between primitives and enums easier)","license":[""],"tags":[],"downloads":36200900,"repositories":["crates.io"]},"rust:maplit":{"coordinates":"rust:maplit","name":"maplit","description":"Collection âliteralâ macros for HashMap, HashSet, BTreeMap, and BTreeSet.","license":[""],"tags":["macro","data-structure","literal","hashmap"],"downloads":36128295,"repositories":["crates.io"]},"rust:pretty_assertions":{"coordinates":"rust:pretty_assertions","name":"pretty_assertions","description":"Overwrite `assert_eq!` and `assert_ne!` with drop-in replacements, adding colorful diffs.","license":[""],"tags":["assert","color","diff","pretty"],"downloads":36068892,"repositories":["crates.io"]},"rust:fxhash":{"coordinates":"rust:fxhash","name":"fxhash","description":"A fast, non-secure, hashing algorithm derived from an internal hasher used in FireFox and Rustc.","license":[""],"tags":["hash"],"downloads":35980008,"repositories":["crates.io"]},"rust:plotters":{"coordinates":"rust:plotters","name":"plotters","description":"A Rust drawing library focus on data plotting for both WASM and native applications","license":[""],"tags":["plotting","visualization","webassembly","drawing"],"downloads":35923039,"repositories":["crates.io"]},"rust:tokio-io-timeout":{"coordinates":"rust:tokio-io-timeout","name":"tokio-io-timeout","description":"Tokio wrappers which apply timeouts to IO operations","license":[""],"tags":[],"downloads":35883214,"repositories":["crates.io"]},"rust:ctr":{"coordinates":"rust:ctr","name":"ctr","description":"CTR block modes of operation","license":[""],"tags":["crypto","ciphers","stream-cipher","block-mode"],"downloads":35622494,"repositories":["crates.io"]},"rust:colored":{"coordinates":"rust:colored","name":"colored","description":"The most simple way to add colors in your terminal","license":[""],"tags":["color","string","term","ansi_term","term-painter"],"downloads":35610775,"repositories":["crates.io"]},"rust:crc":{"coordinates":"rust:crc","name":"crc","description":"Rust implementation of CRC with support of various standards","license":[""],"tags":["hash","crc","crc32","crc64","crc16"],"downloads":35523878,"repositories":["crates.io"]},"rust:xattr":{"coordinates":"rust:xattr","name":"xattr","description":"unix extended filesystem attributes","license":[""],"tags":["filesystem","unix","xattr"],"downloads":35470718,"repositories":["crates.io"]},"rust:cmake":{"coordinates":"rust:cmake","name":"cmake","description":"A build dependency for running `cmake` to build a native library ","license":[""],"tags":["build-dependencies"],"downloads":35419332,"repositories":["crates.io"]},"rust:async-task":{"coordinates":"rust:async-task","name":"async-task","description":"Task abstraction for building executors","license":[""],"tags":["spawn","futures","task","executor"],"downloads":35133443,"repositories":["crates.io"]},"rust:byte-tools":{"coordinates":"rust:byte-tools","name":"byte-tools","description":"Bytes related utility functions","license":[""],"tags":["bytes"],"downloads":35105230,"repositories":["crates.io"]},"rust:hyper-timeout":{"coordinates":"rust:hyper-timeout","name":"hyper-timeout","description":"A connect, read and write timeout aware connector to be used with hyper Client.","license":[""],"tags":[],"downloads":35102213,"repositories":["crates.io"]},"rust:float-cmp":{"coordinates":"rust:float-cmp","name":"float-cmp","description":"Floating point approximate comparison traits","license":[""],"tags":["float","comparison","fuzzy","approximate","no_std"],"downloads":34952950,"repositories":["crates.io"]},"rust:tracing-serde":{"coordinates":"rust:tracing-serde","name":"tracing-serde","description":"A compatibility layer for serializing trace data with `serde` ","license":[""],"tags":["serialization","logging","tracing"],"downloads":34770088,"repositories":["crates.io"]},"rust:threadpool":{"coordinates":"rust:threadpool","name":"threadpool","description":"A thread pool for running a number of jobs on a fixed set of worker threads. ","license":[""],"tags":["pool","threading","threadpool","thread","parallelism"],"downloads":34619158,"repositories":["crates.io"]},"rust:universal-hash":{"coordinates":"rust:universal-hash","name":"universal-hash","description":"Traits which describe the functionality of universal hash functions (UHFs)","license":[""],"tags":["crypto","mac"],"downloads":34591120,"repositories":["crates.io"]},"rust:dyn-clone":{"coordinates":"rust:dyn-clone","name":"dyn-clone","description":"Clone trait that is object-safe","license":[""],"tags":["clone","trait-object","dyn"],"downloads":34437018,"repositories":["crates.io"]},"rust:urlencoding":{"coordinates":"rust:urlencoding","name":"urlencoding","description":"A Rust library for doing URL percentage encoding.","license":[""],"tags":["url","escape","urlencode","percent","urldecode"],"downloads":33794178,"repositories":["crates.io"]},"rust:doc-comment":{"coordinates":"rust:doc-comment","name":"doc-comment","description":"Macro to generate doc comments","license":[""],"tags":[],"downloads":33769451,"repositories":["crates.io"]},"rust:predicates-core":{"coordinates":"rust:predicates-core","name":"predicates-core","description":"An API for boolean-valued predicate functions.","license":[""],"tags":["logic","boolean","match","predicate","combinatorial"],"downloads":33641298,"repositories":["crates.io"]},"rust:predicates-tree":{"coordinates":"rust:predicates-tree","name":"predicates-tree","description":"Render boolean-valued predicate functions results as a tree.","license":[""],"tags":["logic","boolean","match","predicate","combinatorial"],"downloads":33560227,"repositories":["crates.io"]},"rust:crossbeam":{"coordinates":"rust:crossbeam","name":"crossbeam","description":"Tools for concurrent programming","license":[""],"tags":["garbage","non-blocking","rcu","atomic","lock-free"],"downloads":33355121,"repositories":["crates.io"]},"rust:hkdf":{"coordinates":"rust:hkdf","name":"hkdf","description":"HMAC-based Extract-and-Expand Key Derivation Function (HKDF)","license":[""],"tags":["crypto","hkdf","kdf"],"downloads":33311689,"repositories":["crates.io"]},"rust:windows":{"coordinates":"rust:windows","name":"windows","description":"Rust for Windows","license":[""],"tags":[],"downloads":33231266,"repositories":["crates.io"]},"rust:sha3":{"coordinates":"rust:sha3","name":"sha3","description":"Pure Rust implementation of SHA-3, a family of Keccak-based hash functions including the SHAKE family of eXtendable-Output Functions (XOFs), as well as the accelerated variant TurboSHAKE ","license":[""],"tags":["hash","crypto","sha3","keccak","digest"],"downloads":33226234,"repositories":["crates.io"]},"rust:serde_spanned":{"coordinates":"rust:serde_spanned","name":"serde_spanned","description":"Serde-compatible spanned Value","license":[""],"tags":["serde","span"],"downloads":33062033,"repositories":["crates.io"]},"rust:plotters-backend":{"coordinates":"rust:plotters-backend","name":"plotters-backend","description":"Plotters Backend API","license":[""],"tags":[],"downloads":32991997,"repositories":["crates.io"]},"rust:camino":{"coordinates":"rust:camino","name":"camino","description":"UTF-8 paths","license":[""],"tags":["unicode","filesystem","utf8","paths"],"downloads":32872550,"repositories":["crates.io"]},"rust:android_system_properties":{"coordinates":"rust:android_system_properties","name":"android_system_properties","description":"Minimal Android system properties wrapper","license":[""],"tags":["android"],"downloads":32826505,"repositories":["crates.io"]},"rust:num-derive":{"coordinates":"rust:num-derive","name":"num-derive","description":"Numeric syntax extensions","license":[""],"tags":["mathematics","numerics"],"downloads":32822708,"repositories":["crates.io"]},"rust:plotters-svg":{"coordinates":"rust:plotters-svg","name":"plotters-svg","description":"Plotters SVG backend","license":[""],"tags":[],"downloads":32766839,"repositories":["crates.io"]},"rust:deranged":{"coordinates":"rust:deranged","name":"deranged","description":"Ranged integers","license":[""],"tags":["range","integer","int"],"downloads":32679209,"repositories":["crates.io"]},"rust:tiny-keccak":{"coordinates":"rust:tiny-keccak","name":"tiny-keccak","description":"An implementation of Keccak derived functions.","license":[""],"tags":["hash","crypto","sha3","keccak","kangarootwelve"],"downloads":32638297,"repositories":["crates.io"]},"rust:tokio-tungstenite":{"coordinates":"rust:tokio-tungstenite","name":"tokio-tungstenite","description":"Tokio binding for Tungstenite, the Lightweight stream-based WebSocket implementation","license":[""],"tags":["io","websocket","web"],"downloads":32619655,"repositories":["crates.io"]},"rust:unindent":{"coordinates":"rust:unindent","name":"unindent","description":"Remove a column of leading whitespace from a string","license":[""],"tags":["string","literal","heredoc","nowdoc","multiline"],"downloads":32516061,"repositories":["crates.io"]},"rust:polyval":{"coordinates":"rust:polyval","name":"polyval","description":"POLYVAL is a GHASH-like universal hash over GF(2^128) useful for constructing a Message Authentication Code (MAC) ","license":[""],"tags":["crypto","aes-gcm-siv","ghash","universal-hashing","aes-gcm"],"downloads":32217253,"repositories":["crates.io"]},"rust:fake-simd":{"coordinates":"rust:fake-simd","name":"fake-simd","description":"Crate for mimicking simd crate on stable Rust","license":[""],"tags":["simd"],"downloads":31985437,"repositories":["crates.io"]},"rust:error-chain":{"coordinates":"rust:error-chain","name":"error-chain","description":"Yet another error boilerplate library.","license":[""],"tags":["error"],"downloads":31675270,"repositories":["crates.io"]},"rust:cargo-platform":{"coordinates":"rust:cargo-platform","name":"cargo-platform","description":"Cargo''s representation of a target platform.","license":[""],"tags":[],"downloads":31560858,"repositories":["crates.io"]},"rust:protobuf":{"coordinates":"rust:protobuf","name":"protobuf","description":"Rust implementation of Google protocol buffers ","license":[""],"tags":[],"downloads":31452100,"repositories":["crates.io"]},"rust:serde_repr":{"coordinates":"rust:serde_repr","name":"serde_repr","description":"Derive Serialize and Deserialize that delegates to the underlying repr of a C-like enum.","license":[""],"tags":["serialization","integer","serde"],"downloads":31434949,"repositories":["crates.io"]},"rust:Inflector":{"coordinates":"rust:Inflector","name":"Inflector","description":"Adds String based inflections for Rust. Snake, kebab, camel, sentence, class, title and table cases as well as ordinalize, deordinalize, demodulize, foreign key, and pluralize/singularize are supported as both traits and pure functions acting on String types. ","license":[""],"tags":["snake","camel","inflection","pluralize","inflector"],"downloads":31289346,"repositories":["crates.io"]},"rust:futures-timer":{"coordinates":"rust:futures-timer","name":"futures-timer","description":"Timeouts for futures. ","license":[""],"tags":[],"downloads":31227832,"repositories":["crates.io"]},"rust:failure":{"coordinates":"rust:failure","name":"failure","description":"Experimental error handling abstraction.","license":[""],"tags":[],"downloads":31141467,"repositories":["crates.io"]},"rust:crypto-bigint":{"coordinates":"rust:crypto-bigint","name":"crypto-bigint","description":"Pure Rust implementation of a big integer library which has been designed from the ground-up for use in cryptographic applications. Provides constant-time, no_std-friendly implementations of modern formulas using const generics. ","license":[""],"tags":["crypto","bignum","precision","integer","arbitrary"],"downloads":31111061,"repositories":["crates.io"]},"rust:tower-http":{"coordinates":"rust:tower-http","name":"tower-http","description":"Tower middleware and utilities for HTTP clients and servers","license":[""],"tags":["io","http","async","service","futures"],"downloads":30948287,"repositories":["crates.io"]},"rust:atomic-waker":{"coordinates":"rust:atomic-waker","name":"atomic-waker","description":"A synchronization primitive for task wakeup","license":[""],"tags":["notify","async","futures","waker","wake"],"downloads":30830906,"repositories":["crates.io"]},"rust:adler32":{"coordinates":"rust:adler32","name":"adler32","description":"Minimal Adler32 implementation for Rust.","license":[""],"tags":["hash","adler32","rolling"],"downloads":30464579,"repositories":["crates.io"]},"rust:yansi":{"coordinates":"rust:yansi","name":"yansi","description":"A dead simple ANSI terminal color painting library.","license":[""],"tags":["ansi","terminal","color","format","paint"],"downloads":30323950,"repositories":["crates.io"]},"rust:ignore":{"coordinates":"rust:ignore","name":"ignore","description":"A fast library for efficiently matching ignore files such as `.gitignore` against file paths. ","license":[""],"tags":["file","glob","gitignore","pattern","ignore"],"downloads":30295897,"repositories":["crates.io"]},"rust:const_fn":{"coordinates":"rust:const_fn","name":"const_fn","description":"A lightweight attribute for easy generation of const functions with conditional compilations. ","license":[""],"tags":["macros","static","attribute","const"],"downloads":30282386,"repositories":["crates.io"]},"rust:aes-gcm":{"coordinates":"rust:aes-gcm","name":"aes-gcm","description":"Pure Rust implementation of the AES-GCM (Galois/Counter Mode) Authenticated Encryption with Associated Data (AEAD) Cipher with optional architecture-specific hardware acceleration ","license":[""],"tags":["aes","encryption","gcm","aead","ghash"],"downloads":30183287,"repositories":["crates.io"]},"rust:md5":{"coordinates":"rust:md5","name":"md5","description":"The package provides the MD5 hash function.","license":[""],"tags":["hash","md5","checksum","digest"],"downloads":30089973,"repositories":["crates.io"]},"rust:async-executor":{"coordinates":"rust:async-executor","name":"async-executor","description":"Async executor","license":[""],"tags":["asynchronous","multi","spawn","single","executor"],"downloads":30063681,"repositories":["crates.io"]},"rust:proc-macro-nested":{"coordinates":"rust:proc-macro-nested","name":"proc-macro-nested","description":"Support for nested proc-macro-hack invocations","license":[""],"tags":[],"downloads":29996555,"repositories":["crates.io"]},"rust:ghash":{"coordinates":"rust:ghash","name":"ghash","description":"Universal hash over GF(2^128) useful for constructing a Message Authentication Code (MAC), as in the AES-GCM authenticated encryption cipher. ","license":[""],"tags":["crypto","universal-hashing","aes-gcm"],"downloads":29982289,"repositories":["crates.io"]},"rust:blocking":{"coordinates":"rust:blocking","name":"blocking","description":"A thread pool for isolating blocking I/O in async programs","license":[""],"tags":["file","async","stdio","process","stdin"],"downloads":29829080,"repositories":["crates.io"]},"rust:zip":{"coordinates":"rust:zip","name":"zip","description":"Library to support the reading and writing of zip files. ","license":[""],"tags":["zip","archive"],"downloads":29795128,"repositories":["crates.io"]},"rust:hashlink":{"coordinates":"rust:hashlink","name":"hashlink","description":"HashMap-like containers that hold their key-value pairs in a user controllable order","license":[""],"tags":["data-structures","no_std"],"downloads":29787739,"repositories":["crates.io"]},"rust:serde_cbor":{"coordinates":"rust:serde_cbor","name":"serde_cbor","description":"CBOR support for serde.","license":[""],"tags":["serialization","cbor","no_std","serde"],"downloads":29325433,"repositories":["crates.io"]},"rust:lru-cache":{"coordinates":"rust:lru-cache","name":"lru-cache","description":"A cache that holds a limited number of key-value pairs","license":[""],"tags":["data-structures"],"downloads":29275579,"repositories":["crates.io"]},"rust:errno-dragonfly":{"coordinates":"rust:errno-dragonfly","name":"errno-dragonfly","description":"Exposes errno functionality to stable Rust on DragonFlyBSD","license":[""],"tags":["dragonfly"],"downloads":29234355,"repositories":["crates.io"]},"rust:failure_derive":{"coordinates":"rust:failure_derive","name":"failure_derive","description":"derives for the failure crate","license":[""],"tags":[],"downloads":29098750,"repositories":["crates.io"]},"rust:enum-as-inner":{"coordinates":"rust:enum-as-inner","name":"enum-as-inner","description":"A proc-macro for deriving inner field accessor functions on enums. ","license":[""],"tags":[],"downloads":29092434,"repositories":["crates.io"]},"rust:valuable":{"coordinates":"rust:valuable","name":"valuable","description":"Object-safe value inspection, used to pass un-typed structured data across trait-object boundaries. ","license":[""],"tags":["serialization","no_std","debugging","valuable"],"downloads":28796350,"repositories":["crates.io"]},"rust:termtree":{"coordinates":"rust:termtree","name":"termtree","description":"Visualize tree-like data on the command-line","license":[""],"tags":["tree","cli","dag"],"downloads":28678828,"repositories":["crates.io"]},"rust:encode_unicode":{"coordinates":"rust:encode_unicode","name":"encode_unicode","description":"UTF-8 and UTF-16 character types, iterators and related methods for char, u8 and u16. ","license":[""],"tags":["unicode","utf-8","utf-16"],"downloads":28590404,"repositories":["crates.io"]},"rust:opentelemetry":{"coordinates":"rust:opentelemetry","name":"opentelemetry","description":"A metrics collection and distributed tracing framework","license":[""],"tags":["logging","async","metrics","tracing","opentelemetry"],"downloads":28542953,"repositories":["crates.io"]},"rust:maybe-uninit":{"coordinates":"rust:maybe-uninit","name":"maybe-uninit","description":"MaybeUninit for friends of backwards compatibility","license":[""],"tags":[],"downloads":28536860,"repositories":["crates.io"]},"rust:brotli-decompressor":{"coordinates":"rust:brotli-decompressor","name":"brotli-decompressor","description":"A brotli decompressor that with an interface avoiding the rust stdlib. This makes it suitable for embedded devices and kernels. It is designed with a pluggable allocator so that the standard lib''s allocator may be employed. The default build also includes a stdlib allocator and stream interface. Disable this with --features=no-stdlib. Alternatively, --features=unsafe turns off array bounds checks and memory initialization but provides a safe interface for the caller.  Without adding the --features=unsafe argument, all included code is safe. For compression in addition to this library, download https://github.com/dropbox/rust-brotli ","license":[""],"tags":["decompression","nostd","huffman","brotli","lz77"],"downloads":28468814,"repositories":["crates.io"]},"rust:png":{"coordinates":"rust:png","name":"png","description":"PNG decoding and encoding library in pure Rust","license":[""],"tags":[],"downloads":28429855,"repositories":["crates.io"]},"rust:keccak":{"coordinates":"rust:keccak","name":"keccak","description":"Pure Rust implementation of the Keccak sponge function including the keccak-f and keccak-p variants ","license":[""],"tags":["crypto","keccak","sponge","keccak-f","keccak-p"],"downloads":28284302,"repositories":["crates.io"]},"rust:number_prefix":{"coordinates":"rust:number_prefix","name":"number_prefix","description":"Library for numeric prefixes (kilo, giga, kibi).","license":[""],"tags":["mathematics","numerics"],"downloads":28269146,"repositories":["crates.io"]},"rust:alloc-no-stdlib":{"coordinates":"rust:alloc-no-stdlib","name":"alloc-no-stdlib","description":"A dynamic allocator that may be used with or without the stdlib. This allows a package with nostd to allocate memory dynamically and be used either with a custom allocator, items on the stack, or by a package that wishes to simply use Box<>. It also provides options to use calloc or a mutable global variable for pre-zeroed memory","license":[""],"tags":["allocator","custom","nostd","safe","calloc"],"downloads":28185353,"repositories":["crates.io"]},"rust:iana-time-zone-haiku":{"coordinates":"rust:iana-time-zone-haiku","name":"iana-time-zone-haiku","description":"iana-time-zone support crate for Haiku OS","license":[""],"tags":["time","iana"],"downloads":28159093,"repositories":["crates.io"]},"rust:string_cache":{"coordinates":"rust:string_cache","name":"string_cache","description":"A string interning library for Rust, developed as part of the Servo project.","license":[""],"tags":[],"downloads":28105865,"repositories":["crates.io"]},"rust:alloc-stdlib":{"coordinates":"rust:alloc-stdlib","name":"alloc-stdlib","description":"A dynamic allocator example that may be used with the stdlib","license":[""],"tags":["allocator","custom","nostd","safe","calloc"],"downloads":28003808,"repositories":["crates.io"]},"rust:headers":{"coordinates":"rust:headers","name":"headers","description":"typed HTTP headers","license":[""],"tags":["hyper","http","hyperium","headers"],"downloads":27998098,"repositories":["crates.io"]},"rust:indicatif":{"coordinates":"rust:indicatif","name":"indicatif","description":"A progress bar and cli reporting library for Rust","license":[""],"tags":["cli","colors","progressbar","progress","pb"],"downloads":27986555,"repositories":["crates.io"]},"rust:git2":{"coordinates":"rust:git2","name":"git2","description":"Bindings to libgit2 for interoperating with git repositories. This library is both threadsafe and memory safe and allows both reading and writing git repositories. ","license":[""],"tags":["git"],"downloads":27880095,"repositories":["crates.io"]},"rust:approx":{"coordinates":"rust:approx","name":"approx","description":"Approximate floating point equality comparisons and assertions.","license":[""],"tags":["assert","equality","float","comparison","approximate"],"downloads":27851311,"repositories":["crates.io"]},"rust:trust-dns-proto":{"coordinates":"rust:trust-dns-proto","name":"trust-dns-proto","description":"Trust-DNS is a safe and secure DNS library. This is the foundational DNS protocol library for all Trust-DNS projects. ","license":[""],"tags":["dns","named","bind","dig","dnssec"],"downloads":27848819,"repositories":["crates.io"]},"rust:libgit2-sys":{"coordinates":"rust:libgit2-sys","name":"libgit2-sys","description":"Native bindings to the libgit2 library","license":[""],"tags":[],"downloads":27756204,"repositories":["crates.io"]},"rust:twox-hash":{"coordinates":"rust:twox-hash","name":"twox-hash","description":"A Rust implementation of the XXHash and XXH3 algorithms","license":[""],"tags":["hash","hasher","xxhash","xxh3"],"downloads":27635260,"repositories":["crates.io"]},"rust:codespan-reporting":{"coordinates":"rust:codespan-reporting","name":"codespan-reporting","description":"Beautiful diagnostic reporting for text-based programming languages","license":[""],"tags":[],"downloads":27551658,"repositories":["crates.io"]},"rust:wait-timeout":{"coordinates":"rust:wait-timeout","name":"wait-timeout","description":"A crate to wait on a child process with a timeout specified across Unix and Windows platforms. ","license":[""],"tags":[],"downloads":27324572,"repositories":["crates.io"]},"rust:brotli":{"coordinates":"rust:brotli","name":"brotli","description":"A brotli compressor and decompressor that with an interface avoiding the rust stdlib. This makes it suitable for embedded devices and kernels. It is designed with a pluggable allocator so that the standard lib''s allocator may be employed. The default build also includes a stdlib allocator and stream interface. Disable this with --features=no-stdlib. All included code is safe.","license":[""],"tags":["decompression","nostd","huffman","brotli","lz77"],"downloads":27254004,"repositories":["crates.io"]},"rust:rand_isaac":{"coordinates":"rust:rand_isaac","name":"rand_isaac","description":"ISAAC random number generator ","license":[""],"tags":["random","rng","isaac"],"downloads":27172088,"repositories":["crates.io"]},"rust:rand_os":{"coordinates":"rust:rand_os","name":"rand_os","description":"OS backed Random Number Generator","license":[""],"tags":["random","rng","os"],"downloads":27123709,"repositories":["crates.io"]},"rust:bzip2-sys":{"coordinates":"rust:bzip2-sys","name":"bzip2-sys","description":"Bindings to libbzip2 for bzip2 compression and decompression exposed as Reader/Writer streams. ","license":[""],"tags":[],"downloads":27123405,"repositories":["crates.io"]},"rust:headers-core":{"coordinates":"rust:headers-core","name":"headers-core","description":"typed HTTP headers core trait","license":[""],"tags":["hyper","http","hyperium","headers"],"downloads":27073947,"repositories":["crates.io"]},"rust:fs_extra":{"coordinates":"rust:fs_extra","name":"fs_extra","description":"Expanding std::fs and std::io. Recursively copy folders with information about process and much more.","license":[""],"tags":["file","recursion","filesystem","dir","copy"],"downloads":27071412,"repositories":["crates.io"]},"rust:precomputed-hash":{"coordinates":"rust:precomputed-hash","name":"precomputed-hash","description":"A library intending to be a base dependency to expose a precomputed hash","license":[""],"tags":[],"downloads":27011877,"repositories":["crates.io"]},"rust:pyo3":{"coordinates":"rust:pyo3","name":"pyo3","description":"Bindings to Python interpreter","license":[""],"tags":["ffi","python","cpython","pyo3"],"downloads":26981994,"repositories":["crates.io"]},"rust:http-range-header":{"coordinates":"rust:http-range-header","name":"http-range-header","description":"No-dep range header parser","license":[""],"tags":["parser","http","range","headers","http-headers"],"downloads":26769781,"repositories":["crates.io"]},"rust:pem-rfc7468":{"coordinates":"rust:pem-rfc7468","name":"pem-rfc7468","description":"PEM Encoding (RFC 7468) for PKIX, PKCS, and CMS Structures, implementing a strict subset of the original Privacy-Enhanced Mail encoding intended specifically for use with cryptographic keys, certificates, and other messages. Provides a no_std-friendly, constant-time implementation suitable for use with cryptographic private keys. ","license":[""],"tags":["crypto","key","rsa","pem","pkcs"],"downloads":26542811,"repositories":["crates.io"]},"rust:difflib":{"coordinates":"rust:difflib","name":"difflib","description":"Port of Python''s difflib library to Rust.","license":[""],"tags":["text","diff","difflib"],"downloads":26496214,"repositories":["crates.io"]},"rust:normalize-line-endings":{"coordinates":"rust:normalize-line-endings","name":"normalize-line-endings","description":"Takes an iterator over chars and returns a new iterator with all line endings (\\r, \\n, or \\r\\n) as \\n","license":[""],"tags":["line","chars","ending","normalize"],"downloads":26415201,"repositories":["crates.io"]},"rust:libsqlite3-sys":{"coordinates":"rust:libsqlite3-sys","name":"libsqlite3-sys","description":"Native bindings to the libsqlite3 library","license":[""],"tags":["sqlite","ffi","sqlcipher"],"downloads":26382025,"repositories":["crates.io"]},"rust:language-tags":{"coordinates":"rust:language-tags","name":"language-tags","description":"Language tags for Rust","license":[""],"tags":["i18n","http","html","language"],"downloads":26282730,"repositories":["crates.io"]},"rust:inout":{"coordinates":"rust:inout","name":"inout","description":"Custom reference types for code generic over in-place and buffer-to-buffer modes of operation.","license":[""],"tags":["custom-reference"],"downloads":26177143,"repositories":["crates.io"]},"rust:pathdiff":{"coordinates":"rust:pathdiff","name":"pathdiff","description":"Library for diffing paths to obtain relative paths","license":[""],"tags":["path","relative"],"downloads":26169572,"repositories":["crates.io"]},"rust:standback":{"coordinates":"rust:standback","name":"standback","description":"New standard library, old compiler.","license":[""],"tags":["std","polyfill","back-compatible"],"downloads":26146153,"repositories":["crates.io"]},"rust:ff":{"coordinates":"rust:ff","name":"ff","description":"Library for building and interfacing with finite fields","license":[""],"tags":[],"downloads":26105265,"repositories":["crates.io"]},"rust:trust-dns-resolver":{"coordinates":"rust:trust-dns-resolver","name":"trust-dns-resolver","description":"Trust-DNS is a safe and secure DNS library. This Resolver library  uses the Client library to perform all DNS queries. The Resolver is intended to be a high-level library for any DNS record resolution see Resolver and AsyncResolver for supported resolution types. The Client can be used for other queries. ","license":[""],"tags":["dns","named","bind","dig","dnssec"],"downloads":26026520,"repositories":["crates.io"]},"rust:image":{"coordinates":"rust:image","name":"image","description":"Imaging library. Provides basic image processing and encoders/decoders for common image formats.","license":[""],"tags":[],"downloads":25864765,"repositories":["crates.io"]},"rust:time-macros-impl":{"coordinates":"rust:time-macros-impl","name":"time-macros-impl","description":"Procedural macros for the time crate.","license":[""],"tags":["time","date","calendar","duration"],"downloads":25856479,"repositories":["crates.io"]},"rust:ed25519":{"coordinates":"rust:ed25519","name":"ed25519","description":"Edwards Digital Signature Algorithm (EdDSA) over Curve25519 (as specified in RFC 8032) support library providing signature type definitions and PKCS#8 private key decoding/encoding support ","license":[""],"tags":["crypto","signature","ecc","curve25519","signing"],"downloads":25830233,"repositories":["crates.io"]},"rust:group":{"coordinates":"rust:group","name":"group","description":"Elliptic curve group traits and utilities","license":[""],"tags":[],"downloads":25793621,"repositories":["crates.io"]},"rust:stringprep":{"coordinates":"rust:stringprep","name":"stringprep","description":"An implementation of the stringprep algorithm","license":[""],"tags":[],"downloads":25786488,"repositories":["crates.io"]},"rust:rand_jitter":{"coordinates":"rust:rand_jitter","name":"rand_jitter","description":"Random number generator based on timing jitter","license":[""],"tags":["random","rng","os"],"downloads":25785427,"repositories":["crates.io"]},"rust:zerocopy":{"coordinates":"rust:zerocopy","name":"zerocopy","description":"Utilities for zero-copy parsing and serialization","license":[""],"tags":[],"downloads":25751041,"repositories":["crates.io"]},"rust:allocator-api2":{"coordinates":"rust:allocator-api2","name":"allocator-api2","description":"Mirror of Rust''s allocator API","license":[""],"tags":[],"downloads":25543831,"repositories":["crates.io"]},"rust:resolv-conf":{"coordinates":"rust:resolv-conf","name":"resolv-conf","description":"    The resolv.conf file parser ","license":[""],"tags":["conf","unix","dns","resolv"],"downloads":25493967,"repositories":["crates.io"]},"rust:pyo3-macros":{"coordinates":"rust:pyo3-macros","name":"pyo3-macros","description":"Proc macros for PyO3 package","license":[""],"tags":["ffi","python","cpython","pyo3"],"downloads":25368935,"repositories":["crates.io"]},"rust:pyo3-macros-backend":{"coordinates":"rust:pyo3-macros-backend","name":"pyo3-macros-backend","description":"Code generation for PyO3 package","license":[""],"tags":["ffi","python","cpython","pyo3"],"downloads":25367734,"repositories":["crates.io"]},"rust:inotify":{"coordinates":"rust:inotify","name":"inotify","description":"Idiomatic wrapper for inotify","license":[""],"tags":["linux","inotify"],"downloads":25187872,"repositories":["crates.io"]},"rust:nodrop":{"coordinates":"rust:nodrop","name":"nodrop","description":"A wrapper type to inhibit drop (destructor).  ***Deprecated: Use ManuallyDrop or MaybeUninit instead!*** ","license":[""],"tags":[],"downloads":25015479,"repositories":["crates.io"]},"rust:elliptic-curve":{"coordinates":"rust:elliptic-curve","name":"elliptic-curve","description":"General purpose Elliptic Curve Cryptography (ECC) support, including types and traits for representing various elliptic curve forms, scalars, points, and public/secret keys composed thereof. ","license":[""],"tags":["crypto","ecc","elliptic","weierstrass"],"downloads":25007088,"repositories":["crates.io"]},"rust:ecdsa":{"coordinates":"rust:ecdsa","name":"ecdsa","description":"Pure Rust implementation of the Elliptic Curve Digital Signature Algorithm (ECDSA) as specified in FIPS 186-4 (Digital Signature Standard), providing RFC6979 deterministic signatures as well as support for added entropy ","license":[""],"tags":["crypto","secp256k1","signature","ecc","nist"],"downloads":24572465,"repositories":["crates.io"]},"rust:async-compression":{"coordinates":"rust:async-compression","name":"async-compression","description":"Adaptors between compression crates and Rust''s modern asynchronous IO types. ","license":[""],"tags":["gzip","compression","async","brotli","zstd"],"downloads":24404478,"repositories":["crates.io"]},"rust:fragile":{"coordinates":"rust:fragile","name":"fragile","description":"Provides wrapper types for sending non-send values to other threads.","license":[""],"tags":["cell","send","failure","non-send","send-wrapper"],"downloads":23844293,"repositories":["crates.io"]},"rust:phf_macros":{"coordinates":"rust:phf_macros","name":"phf_macros","description":"Macros to generate types in the phf crate","license":[""],"tags":[],"downloads":23760417,"repositories":["crates.io"]},"rust:notify":{"coordinates":"rust:notify","name":"notify","description":"Cross-platform filesystem notification library","license":[""],"tags":["events","filesystem","notify","watch"],"downloads":23705366,"repositories":["crates.io"]},"rust:flume":{"coordinates":"rust:flume","name":"flume","description":"A blazingly fast multi-producer channel","license":[""],"tags":["channel","mpmc","thread","fifo","mpsc"],"downloads":23689244,"repositories":["crates.io"]},"rust:inotify-sys":{"coordinates":"rust:inotify-sys","name":"inotify-sys","description":"inotify bindings for the Rust programming language","license":[""],"tags":["linux","inotify"],"downloads":23684032,"repositories":["crates.io"]},"rust:mockall":{"coordinates":"rust:mockall","name":"mockall","description":"A powerful mock object library for Rust. ","license":[""],"tags":["testing","mock","mocking"],"downloads":23683416,"repositories":["crates.io"]},"rust:prometheus":{"coordinates":"rust:prometheus","name":"prometheus","description":"Prometheus instrumentation library for Rust applications.","license":[""],"tags":["metrics","prometheus"],"downloads":23637838,"repositories":["crates.io"]},"rust:mockall_derive":{"coordinates":"rust:mockall_derive","name":"mockall_derive","description":"Procedural macros for Mockall ","license":[""],"tags":["testing","mock","mocking"],"downloads":23601284,"repositories":["crates.io"]},"rust:ctrlc":{"coordinates":"rust:ctrlc","name":"ctrlc","description":"Easy Ctrl-C handler for Rust projects","license":[""],"tags":["signal","ctrlc","sigint"],"downloads":23516524,"repositories":["crates.io"]},"rust:value-bag":{"coordinates":"rust:value-bag","name":"value-bag","description":"Anonymous structured values","license":[""],"tags":["serialization","no_std"],"downloads":23478303,"repositories":["crates.io"]},"rust:getopts":{"coordinates":"rust:getopts","name":"getopts","description":"getopts-like option parsing. ","license":[""],"tags":[],"downloads":23368834,"repositories":["crates.io"]},"rust:tracing-opentelemetry":{"coordinates":"rust:tracing-opentelemetry","name":"tracing-opentelemetry","description":"OpenTelemetry integration for tracing","license":[""],"tags":["async","zipkin","tracing","jaeger","opentelemetry"],"downloads":23340668,"repositories":["crates.io"]},"rust:blake2":{"coordinates":"rust:blake2","name":"blake2","description":"BLAKE2 hash functions","license":[""],"tags":["hash","crypto","blake2","digest"],"downloads":23334261,"repositories":["crates.io"]},"rust:crc-catalog":{"coordinates":"rust:crc-catalog","name":"crc-catalog","description":"Catalog of CRC algorithms (generated from http://reveng.sourceforge.net/crc-catalogue) expressed as simple Rust structs.","license":[""],"tags":["crc"],"downloads":23323477,"repositories":["crates.io"]},"rust:winapi-build":{"coordinates":"rust:winapi-build","name":"winapi-build","description":"Common code for build.rs in WinAPI -sys crates.","license":[""],"tags":["ffi","winsdk","windows"],"downloads":23189744,"repositories":["crates.io"]},"rust:ntapi":{"coordinates":"rust:ntapi","name":"ntapi","description":"FFI bindings for Native API","license":[""],"tags":["ffi","win32","windows","native","ntapi"],"downloads":23140533,"repositories":["crates.io"]},"rust:fs2":{"coordinates":"rust:fs2","name":"fs2","description":"Cross-platform file locks and file duplication.","license":[""],"tags":["file","lock","file-system","duplicate","flock"],"downloads":23104679,"repositories":["crates.io"]},"rust:pyo3-build-config":{"coordinates":"rust:pyo3-build-config","name":"pyo3-build-config","description":"Build configuration for the PyO3 ecosystem","license":[""],"tags":["ffi","python","cpython","pyo3"],"downloads":23071496,"repositories":["crates.io"]},"rust:kernel32-sys":{"coordinates":"rust:kernel32-sys","name":"kernel32-sys","description":"Contains function definitions for the Windows API library kernel32. See winapi for types and constants.","license":[""],"tags":["ffi","win32","windows"],"downloads":22974108,"repositories":["crates.io"]},"rust:downcast":{"coordinates":"rust:downcast","name":"downcast","description":"Trait for downcasting trait objects back to their original types.","license":[""],"tags":["any"],"downloads":22878059,"repositories":["crates.io"]},"rust:blake3":{"coordinates":"rust:blake3","name":"blake3","description":"the BLAKE3 hash function","license":[""],"tags":[],"downloads":22863002,"repositories":["crates.io"]},"rust:async-recursion":{"coordinates":"rust:async-recursion","name":"async-recursion","description":"Recursion for async functions","license":[""],"tags":[],"downloads":22797391,"repositories":["crates.io"]},"rust:async-std":{"coordinates":"rust:async-std","name":"async-std","description":"Async version of the Rust standard library","license":[""],"tags":["async","future","std","await","task"],"downloads":22465168,"repositories":["crates.io"]},"rust:pulldown-cmark":{"coordinates":"rust:pulldown-cmark","name":"pulldown-cmark","description":"A pull parser for CommonMark","license":[""],"tags":["markdown","commonmark"],"downloads":22200094,"repositories":["crates.io"]},"rust:wasmparser":{"coordinates":"rust:wasmparser","name":"wasmparser","description":"A simple event-driven library for parsing WebAssembly binary files. ","license":[""],"tags":["parser","wasm","webassembly"],"downloads":22131162,"repositories":["crates.io"]},"rust:color_quant":{"coordinates":"rust:color_quant","name":"color_quant","description":"Color quantization library to reduce n colors to 256 colors.","license":[""],"tags":[],"downloads":22019055,"repositories":["crates.io"]},"rust:erased-serde":{"coordinates":"rust:erased-serde","name":"erased-serde","description":"Type-erased Serialize and Serializer traits","license":[""],"tags":["serde","erasure"],"downloads":22012334,"repositories":["crates.io"]},"rust:sysinfo":{"coordinates":"rust:sysinfo","name":"sysinfo","description":"Library to get system information such as processes, CPUs, disks, components and networks","license":[""],"tags":[],"downloads":21932966,"repositories":["crates.io"]},"rust:async-global-executor":{"coordinates":"rust:async-global-executor","name":"async-global-executor","description":"A global executor built on top of async-executor and async-io","license":[""],"tags":["async","future","await","executor"],"downloads":21665390,"repositories":["crates.io"]},"rust:ascii":{"coordinates":"rust:ascii","name":"ascii","description":"ASCII-only equivalents to `char`, `str` and `String`.","license":[""],"tags":[],"downloads":21636205,"repositories":["crates.io"]},"rust:derive_builder":{"coordinates":"rust:derive_builder","name":"derive_builder","description":"Rust macro to automatically implement the builder pattern for arbitrary structs.","license":[""],"tags":["macro","builder","derive","struct","setter"],"downloads":21626408,"repositories":["crates.io"]},"rust:derive_builder_core":{"coordinates":"rust:derive_builder_core","name":"derive_builder_core","description":"Internal helper library for the derive_builder crate.","license":[""],"tags":[],"downloads":21610308,"repositories":["crates.io"]},"rust:sec1":{"coordinates":"rust:sec1","name":"sec1","description":"Pure Rust implementation of SEC1: Elliptic Curve Cryptography encoding formats including ASN.1 DER-serialized private keys as well as the Elliptic-Curve-Point-to-Octet-String encoding ","license":[""],"tags":["crypto","key","elliptic-curve","secg"],"downloads":21602787,"repositories":["crates.io"]},"rust:ed25519-dalek":{"coordinates":"rust:ed25519-dalek","name":"ed25519-dalek","description":"Fast and efficient ed25519 EdDSA key generations, signing, and verification in pure Rust.","license":[""],"tags":["cryptography","ed25519","signature","ecc","curve25519"],"downloads":21598728,"repositories":["crates.io"]},"rust:sha1_smol":{"coordinates":"rust:sha1_smol","name":"sha1_smol","description":"Minimal dependency free implementation of SHA1 for Rust.","license":[""],"tags":["sha1"],"downloads":21554502,"repositories":["crates.io"]},"rust:bzip2":{"coordinates":"rust:bzip2","name":"bzip2","description":"Bindings to libbzip2 for bzip2 compression and decompression exposed as Reader/Writer streams. ","license":[""],"tags":["encoding","bzip"],"downloads":21538957,"repositories":["crates.io"]},"rust:base16ct":{"coordinates":"rust:base16ct","name":"base16ct","description":"Pure Rust implementation of Base16 a.k.a hexadecimal (RFC 4648) which avoids any usages of data-dependent branches/LUTs and thereby provides portable \"best effort\" constant-time operation and embedded-friendly no_std support ","license":[""],"tags":["crypto","hex","hexadecimal"],"downloads":21525899,"repositories":["crates.io"]},"rust:whoami":{"coordinates":"rust:whoami","name":"whoami","description":"Retrieve the current user and environment.","license":[""],"tags":["platform","user","username","whoami","detect"],"downloads":21511234,"repositories":["crates.io"]},"rust:serde_path_to_error":{"coordinates":"rust:serde_path_to_error","name":"serde_path_to_error","description":"Path to the element that failed to deserialize","license":[""],"tags":["serialization","serde"],"downloads":21434345,"repositories":["crates.io"]},"rust:serial_test":{"coordinates":"rust:serial_test","name":"serial_test","description":"Allows for the creation of serialised Rust tests","license":[""],"tags":["testing","parallel","sequential"],"downloads":21340697,"repositories":["crates.io"]},"rust:ciborium-io":{"coordinates":"rust:ciborium-io","name":"ciborium-io","description":"Simplified Read/Write traits for no_std usage","license":[""],"tags":["io","read","write"],"downloads":21338703,"repositories":["crates.io"]},"rust:ciborium":{"coordinates":"rust:ciborium","name":"ciborium","description":"serde implementation of CBOR using ciborium-basic","license":[""],"tags":["cbor","serde"],"downloads":21324004,"repositories":["crates.io"]},"rust:ciborium-ll":{"coordinates":"rust:ciborium-ll","name":"ciborium-ll","description":"Low-level CBOR codec primitives","license":[""],"tags":["cbor"],"downloads":21323590,"repositories":["crates.io"]},"rust:unsafe-libyaml":{"coordinates":"rust:unsafe-libyaml","name":"unsafe-libyaml","description":"libyaml transpiled to rust by c2rust","license":[""],"tags":["yaml"],"downloads":21302252,"repositories":["crates.io"]},"rust:utf8-ranges":{"coordinates":"rust:utf8-ranges","name":"utf8-ranges","description":"DEPRECATED. Use regex-syntax::utf8 submodule instead.","license":[""],"tags":["utf8","range","codepoint","automaton"],"downloads":21240743,"repositories":["crates.io"]},"rust:kv-log-macro":{"coordinates":"rust:kv-log-macro","name":"kv-log-macro","description":"Log macro for log''s kv-unstable backend.","license":[""],"tags":["macro","log","kv","key","value"],"downloads":21224106,"repositories":["crates.io"]},"rust:serial_test_derive":{"coordinates":"rust:serial_test_derive","name":"serial_test_derive","description":"Helper crate for serial_test","license":[""],"tags":[],"downloads":21111992,"repositories":["crates.io"]},"rust:downcast-rs":{"coordinates":"rust:downcast-rs","name":"downcast-rs","description":"Trait object downcasting support using only safe Rust. It supports type parameters, associated types, and type constraints. ","license":[""],"tags":["any","trait","downcast","no_std","associated"],"downloads":21098800,"repositories":["crates.io"]},"rust:unreachable":{"coordinates":"rust:unreachable","name":"unreachable","description":"An unreachable code optimization hint in stable rust.","license":[""],"tags":[],"downloads":21039185,"repositories":["crates.io"]},"rust:jpeg-decoder":{"coordinates":"rust:jpeg-decoder","name":"jpeg-decoder","description":"JPEG decoder","license":[""],"tags":["image","decoder","jpeg","jpg"],"downloads":20858569,"repositories":["crates.io"]},"rust:cache-padded":{"coordinates":"rust:cache-padded","name":"cache-padded","description":"Prevent false sharing by padding and aligning to the length of a cache line","license":[""],"tags":["cache","atomic","lock-free","padding"],"downloads":20840038,"repositories":["crates.io"]},"rust:config":{"coordinates":"rust:config","name":"config","description":"Layered configuration system for Rust applications.","license":[""],"tags":["environment","env","settings","config","configuration"],"downloads":20833863,"repositories":["crates.io"]},"rust:handlebars":{"coordinates":"rust:handlebars","name":"handlebars","description":"Handlebars templating implemented in Rust.","license":[""],"tags":["web","handlebars","templating"],"downloads":20704387,"repositories":["crates.io"]},"rust:bytecount":{"coordinates":"rust:bytecount","name":"bytecount","description":"count occurrences of a given byte, or the number of UTF-8 code points, in a byte slice, fast","license":[""],"tags":[],"downloads":20694952,"repositories":["crates.io"]},"rust:crossterm":{"coordinates":"rust:crossterm","name":"crossterm","description":"A crossplatform terminal library for manipulating terminals.","license":[""],"tags":["terminal","input","event","cli","color"],"downloads":20631827,"repositories":["crates.io"]},"rust:rsa":{"coordinates":"rust:rsa","name":"rsa","description":"Pure Rust RSA implementation","license":[""],"tags":["crypto","security","encryption","rsa"],"downloads":20551574,"repositories":["crates.io"]},"rust:indenter":{"coordinates":"rust:indenter","name":"indenter","description":"A formatter wrapper that indents the text, designed for error display impls ","license":[""],"tags":["error","formatter","display","fmt"],"downloads":20543541,"repositories":["crates.io"]},"rust:rust-ini":{"coordinates":"rust:rust-ini","name":"rust-ini","description":"An Ini configuration file parsing library in Rust","license":[""],"tags":["ini","configuration","conf","cfg"],"downloads":20486367,"repositories":["crates.io"]},"rust:serde_derive_internals":{"coordinates":"rust:serde_derive_internals","name":"serde_derive_internals","description":"AST representation used by Serde derive macros. Unstable.","license":[""],"tags":["serialization","serde"],"downloads":20430043,"repositories":["crates.io"]},"rust:simple_asn1":{"coordinates":"rust:simple_asn1","name":"simple_asn1","description":"A simple DER/ASN.1 encoding/decoding library.","license":[""],"tags":["encoding","asn1","der"],"downloads":20246611,"repositories":["crates.io"]},"rust:rfc6979":{"coordinates":"rust:rfc6979","name":"rfc6979","description":"Pure Rust implementation of RFC6979: Deterministic Usage of the Digital Signature Algorithm (DSA) and Elliptic Curve Digital Signature Algorithm (ECDSA) ","license":[""],"tags":["ecdsa","signature","dsa"],"downloads":20184709,"repositories":["crates.io"]},"rust:eyre":{"coordinates":"rust:eyre","name":"eyre","description":"Flexible concrete Error Reporting type built on std::error::Error with customizable Reports","license":[""],"tags":[],"downloads":20084440,"repositories":["crates.io"]},"rust:vsdb":{"coordinates":"rust:vsdb","name":"vsdb","description":"A stuctured DB with some ''Git-like'' features, mainly used in blockchain projects.","license":[""],"tags":["git","leveldb","version","rocksdb","vcs"],"downloads":20028060,"repositories":["crates.io"]},"rust:seahash":{"coordinates":"rust:seahash","name":"seahash","description":"A blazingly fast, portable hash function with proven statistical guarantees.","license":[""],"tags":["hash","hashing","checksum","portable","checksumming"],"downloads":20005916,"repositories":["crates.io"]},"rust:curl-sys":{"coordinates":"rust:curl-sys","name":"curl-sys","description":"Native bindings to the libcurl library","license":[""],"tags":[],"downloads":19979159,"repositories":["crates.io"]},"rust:matrixmultiply":{"coordinates":"rust:matrixmultiply","name":"matrixmultiply","description":"General matrix multiplication for f32 and f64 matrices. Operates on matrices with general layout (they can use arbitrary row and column stride). Detects and uses AVX or SSE2 on x86 platforms transparently for higher performance. Uses a microkernel strategy, so that the implementation is easy to parallelize and optimize.  Supports multithreading.","license":[""],"tags":["matrix","sgemm","dgemm"],"downloads":19977498,"repositories":["crates.io"]},"rust:vsdb_derive":{"coordinates":"rust:vsdb_derive","name":"vsdb_derive","description":"Some procedure macro implementations for vsdb.","license":[""],"tags":["git","leveldb","version","rocksdb","vcs"],"downloads":19882063,"repositories":["crates.io"]},"rust:vsdbsled":{"coordinates":"rust:vsdbsled","name":"vsdbsled","description":"Lightweight high-performance pure-rust transactional embedded database.","license":[""],"tags":["sqlite","redis","lmdb","mongo","rocksdb"],"downloads":19879455,"repositories":["crates.io"]},"rust:difference":{"coordinates":"rust:difference","name":"difference","description":"A Rust text diffing and assertion library.","license":[""],"tags":["text","assert","diff","compare","changes"],"downloads":19867933,"repositories":["crates.io"]},"rust:owo-colors":{"coordinates":"rust:owo-colors","name":"owo-colors","description":"Zero-allocation terminal colors that''ll make people go owo","license":[""],"tags":["terminal","cli","color","ansi_term","no-std"],"downloads":19852174,"repositories":["crates.io"]},"rust:powerfmt":{"coordinates":"rust:powerfmt","name":"powerfmt","description":"    `powerfmt` is a library that provides utilities for formatting values. This crate makes it     significantly easier to support filling to a minimum width with alignment, avoid heap     allocation, and avoid repetitive calculations. ","license":[""],"tags":["format","extension","formatter","display","fmt"],"downloads":19821535,"repositories":["crates.io"]},"rust:widestring":{"coordinates":"rust:widestring","name":"widestring","description":"A wide string Rust library for converting to and from wide strings, such as those often used in Windows API or other FFI libaries. Both `u16` and `u32` string types are provided, including support for UTF-16 and UTF-32, malformed encoding, C-style strings, etc.","license":[""],"tags":["win32","string","wide","utf-16","utf-32"],"downloads":19787458,"repositories":["crates.io"]},"rust:actix-rt":{"coordinates":"rust:actix-rt","name":"actix-rt","description":"Tokio-based single-threaded async runtime for the Actix ecosystem","license":[""],"tags":["io","runtime","async","futures"],"downloads":19694377,"repositories":["crates.io"]},"rust:chrono-tz":{"coordinates":"rust:chrono-tz","name":"chrono-tz","description":"TimeZone implementations for chrono from the IANA database","license":[""],"tags":["time","date","timezone","iana","zone"],"downloads":19620752,"repositories":["crates.io"]},"rust:openssl-src":{"coordinates":"rust:openssl-src","name":"openssl-src","description":"Source of OpenSSL and logic to build it. ","license":[""],"tags":[],"downloads":19564005,"repositories":["crates.io"]},"rust:anes":{"coordinates":"rust:anes","name":"anes","description":"ANSI Escape Sequences provider & parser","license":[""],"tags":["parser","ansi","terminal","code","sequence"],"downloads":19557085,"repositories":["crates.io"]},"rust:cxxbridge-macro":{"coordinates":"rust:cxxbridge-macro","name":"cxxbridge-macro","description":"Implementation detail of the `cxx` crate.","license":[""],"tags":["ffi"],"downloads":19530961,"repositories":["crates.io"]},"rust:cxx":{"coordinates":"rust:cxx","name":"cxx","description":"Safe interop between Rust and C++","license":[""],"tags":["ffi","c++"],"downloads":19464825,"repositories":["crates.io"]},"rust:cxxbridge-flags":{"coordinates":"rust:cxxbridge-flags","name":"cxxbridge-flags","description":"Compiler configuration of the `cxx` crate (implementation detail)","license":[""],"tags":[],"downloads":19343144,"repositories":["crates.io"]},"rust:num-bigint-dig":{"coordinates":"rust:num-bigint-dig","name":"num-bigint-dig","description":"Big integer implementation for Rust","license":[""],"tags":["mathematics","numerics","bignum"],"downloads":19293352,"repositories":["crates.io"]},"rust:debugid":{"coordinates":"rust:debugid","name":"debugid","description":"Common reusable types for implementing the sentry.io protocol.","license":[""],"tags":["breakpad","crashpad","sentry","debugid"],"downloads":19142788,"repositories":["crates.io"]},"rust:ureq":{"coordinates":"rust:ureq","name":"ureq","description":"Simple, safe HTTP client","license":[""],"tags":["client","http","web","request","https"],"downloads":19080835,"repositories":["crates.io"]},"rust:mio-uds":{"coordinates":"rust:mio-uds","name":"mio-uds","description":"Unix domain socket bindings for mio ","license":[""],"tags":[],"downloads":19053782,"repositories":["crates.io"]},"rust:portable-atomic":{"coordinates":"rust:portable-atomic","name":"portable-atomic","description":"Portable atomic types including support for 128-bit atomics, atomic float, etc. ","license":[""],"tags":["atomic"],"downloads":19021445,"repositories":["crates.io"]},"rust:link-cplusplus":{"coordinates":"rust:link-cplusplus","name":"link-cplusplus","description":"Link libstdc++ or libc++ automatically or manually","license":[""],"tags":["linkage","c++"],"downloads":18993225,"repositories":["crates.io"]},"rust:actix-web":{"coordinates":"rust:actix-web","name":"actix-web","description":"Actix Web is a powerful, pragmatic, and extremely fast web framework for Rust","license":[""],"tags":["http","web","async","framework","actix"],"downloads":18808408,"repositories":["crates.io"]},"rust:bs58":{"coordinates":"rust:bs58","name":"bs58","description":"Another Base58 codec implementation.","license":[""],"tags":["base58"],"downloads":18759131,"repositories":["crates.io"]},"rust:const-random":{"coordinates":"rust:const-random","name":"const-random","description":"Provides compile time random number generation.","license":[""],"tags":["macro","rust","constants"],"downloads":18548194,"repositories":["crates.io"]},"rust:const-random-macro":{"coordinates":"rust:const-random-macro","name":"const-random-macro","description":"Provides the procedural macro used by const-random","license":[""],"tags":["macro","rust","constants"],"downloads":18492324,"repositories":["crates.io"]},"rust:snap":{"coordinates":"rust:snap","name":"snap","description":"A pure Rust implementation of the Snappy compression algorithm. Includes streaming compression and decompression. ","license":[""],"tags":["compression","snappy","decompression","decompress","compress"],"downloads":18440812,"repositories":["crates.io"]},"rust:actix-http":{"coordinates":"rust:actix-http","name":"actix-http","description":"HTTP types and services for the Actix ecosystem","license":[""],"tags":["http","async","framework","futures","actix"],"downloads":18413312,"repositories":["crates.io"]},"rust:jsonwebtoken":{"coordinates":"rust:jsonwebtoken","name":"jsonwebtoken","description":"Create and decode JWTs in a strongly typed way.","license":[""],"tags":["api","token","jwt","jwk"],"downloads":18399208,"repositories":["crates.io"]},"rust:android-tzdata":{"coordinates":"rust:android-tzdata","name":"android-tzdata","description":"Parser for the Android-specific tzdata file","license":[""],"tags":["parser","timezone","android"],"downloads":18312350,"repositories":["crates.io"]},"rust:unicode_categories":{"coordinates":"rust:unicode_categories","name":"unicode_categories","description":"Query Unicode category membership for chars","license":[""],"tags":["unicode"],"downloads":18287113,"repositories":["crates.io"]},"rust:actix-codec":{"coordinates":"rust:actix-codec","name":"actix-codec","description":"Codec utilities for working with framed protocols","license":[""],"tags":["network","async","framework","futures"],"downloads":18268149,"repositories":["crates.io"]},"rust:tempdir":{"coordinates":"rust:tempdir","name":"tempdir","description":"A library for managing a temporary directory and deleting all contents when it''s dropped. ","license":[""],"tags":["file","filesystem","fs"],"downloads":18189015,"repositories":["crates.io"]},"rust:tokio-io":{"coordinates":"rust:tokio-io","name":"tokio-io","description":"Core I/O primitives for asynchronous I/O in Rust. ","license":[""],"tags":[],"downloads":18139437,"repositories":["crates.io"]},"rust:string_cache_codegen":{"coordinates":"rust:string_cache_codegen","name":"string_cache_codegen","description":"A codegen library for string-cache, developed as part of the Servo project.","license":[""],"tags":[],"downloads":18082898,"repositories":["crates.io"]},"rust:gif":{"coordinates":"rust:gif","name":"gif","description":"GIF de- and encoder","license":[""],"tags":[],"downloads":18074701,"repositories":["crates.io"]},"rust:actix-utils":{"coordinates":"rust:actix-utils","name":"actix-utils","description":"Various utilities used in the Actix ecosystem","license":[""],"tags":["network","async","framework","futures"],"downloads":18011345,"repositories":["crates.io"]},"rust:infer":{"coordinates":"rust:infer","name":"infer","description":"Small crate to infer file type based on magic number signatures","license":[""],"tags":["mime","filetype","no_std","magic-number","mime-types"],"downloads":18004179,"repositories":["crates.io"]},"rust:proptest":{"coordinates":"rust:proptest","name":"proptest","description":"Hypothesis-like property-based testing and shrinking. ","license":[""],"tags":["testing","quickcheck","property","fuzz","hypothesis"],"downloads":17982830,"repositories":["crates.io"]},"rust:parse-zoneinfo":{"coordinates":"rust:parse-zoneinfo","name":"parse-zoneinfo","description":"Parse zoneinfo files from the IANA database","license":[""],"tags":["time","date","calendar","timezone","zone"],"downloads":17928029,"repositories":["crates.io"]},"rust:curl":{"coordinates":"rust:curl","name":"curl","description":"Rust bindings to libcurl for making HTTP requests","license":[""],"tags":[],"downloads":17910878,"repositories":["crates.io"]},"rust:pkcs1":{"coordinates":"rust:pkcs1","name":"pkcs1","description":"Pure Rust implementation of Public-Key Cryptography Standards (PKCS) #1: RSA Cryptography Specifications Version 2.2 (RFC 8017) ","license":[""],"tags":["crypto","key","rsa","pem","pkcs"],"downloads":17886015,"repositories":["crates.io"]},"rust:rmp":{"coordinates":"rust:rmp","name":"rmp","description":"Pure Rust MessagePack serialization implementation","license":[""],"tags":["msgpack","messagepack"],"downloads":17872020,"repositories":["crates.io"]},"rust:rust_decimal":{"coordinates":"rust:rust_decimal","name":"rust_decimal","description":"Decimal number implementation written in pure Rust suitable for financial and fixed-precision calculations.","license":[""],"tags":["number","precision","fixed","decimal","financial"],"downloads":17761997,"repositories":["crates.io"]},"rust:actix-macros":{"coordinates":"rust:actix-macros","name":"actix-macros","description":"Macros for Actix system and runtime","license":[""],"tags":[],"downloads":17730960,"repositories":["crates.io"]},"rust:cxx-build":{"coordinates":"rust:cxx-build","name":"cxx-build","description":"C++ code generator for integrating `cxx` crate into a Cargo build.","license":[""],"tags":["ffi","build-dependencies"],"downloads":17684228,"repositories":["crates.io"]},"rust:der-parser":{"coordinates":"rust:der-parser","name":"der-parser","description":"Parser/encoder for ASN.1 BER/DER data","license":[""],"tags":["parser","nom","asn1","der","ber"],"downloads":17605632,"repositories":["crates.io"]},"rust:actix-service":{"coordinates":"rust:actix-service","name":"actix-service","description":"Service trait and combinators for representing asynchronous request/response operations.","license":[""],"tags":["network","async","framework","service","futures"],"downloads":17605328,"repositories":["crates.io"]},"rust:integer-encoding":{"coordinates":"rust:integer-encoding","name":"integer-encoding","description":"varint+zigzag and fixedint integer encoding/decoding (https://developers.google.com/protocol-buffers/docs/encoding)","license":[""],"tags":["serialize","integer","protobuf","varint","zigzag"],"downloads":17570185,"repositories":["crates.io"]},"rust:actix-server":{"coordinates":"rust:actix-server","name":"actix-server","description":"General purpose TCP server built for the Actix ecosystem","license":[""],"tags":["tcp","network","server","async","framework"],"downloads":17546286,"repositories":["crates.io"]},"rust:cbindgen":{"coordinates":"rust:cbindgen","name":"cbindgen","description":"A tool for generating C bindings to Rust code.","license":[""],"tags":["bindings","ffi","code-generation"],"downloads":17432716,"repositories":["crates.io"]},"rust:fallible-streaming-iterator":{"coordinates":"rust:fallible-streaming-iterator","name":"fallible-streaming-iterator","description":"Fallible streaming iteration","license":[""],"tags":[],"downloads":17407547,"repositories":["crates.io"]},"rust:similar":{"coordinates":"rust:similar","name":"similar","description":"A diff library for Rust","license":[""],"tags":["difference","diff","compare","changes","patience"],"downloads":17365359,"repositories":["crates.io"]},"rust:displaydoc":{"coordinates":"rust:displaydoc","name":"displaydoc","description":"A derive macro for implementing the display Trait via a doc comment and string interpolation ","license":[""],"tags":["derive","display"],"downloads":17340553,"repositories":["crates.io"]},"rust:take_mut":{"coordinates":"rust:take_mut","name":"take_mut","description":"Take a T from a &mut T temporarily","license":[""],"tags":[],"downloads":17284562,"repositories":["crates.io"]},"rust:actix-router":{"coordinates":"rust:actix-router","name":"actix-router","description":"Resource path matching and router","license":[""],"tags":["router","routing","actix"],"downloads":17282071,"repositories":["crates.io"]},"rust:scratch":{"coordinates":"rust:scratch","name":"scratch","description":"Compile-time temporary directory shared by multiple crates and erased by `cargo clean`","license":[""],"tags":[],"downloads":17266774,"repositories":["crates.io"]},"rust:rand_xoshiro":{"coordinates":"rust:rand_xoshiro","name":"rand_xoshiro","description":"Xoshiro, xoroshiro and splitmix64 random number generators","license":[""],"tags":["random","rng"],"downloads":17226244,"repositories":["crates.io"]},"rust:backoff":{"coordinates":"rust:backoff","name":"backoff","description":"Retry operations with exponential backoff policy. ","license":[""],"tags":[],"downloads":17165090,"repositories":["crates.io"]},"rust:actix-web-codegen":{"coordinates":"rust:actix-web-codegen","name":"actix-web-codegen","description":"Routing and runtime macros for Actix Web","license":[""],"tags":[],"downloads":17148963,"repositories":["crates.io"]},"rust:anstyle-wincon":{"coordinates":"rust:anstyle-wincon","name":"anstyle-wincon","description":"Styling legacy Windows terminals","license":[""],"tags":["ansi","terminal","color","windows"],"downloads":17058676,"repositories":["crates.io"]},"rust:enum-iterator":{"coordinates":"rust:enum-iterator","name":"enum-iterator","description":"Tools to iterate over all values of a type (e.g. all variants of an enumeration)","license":[""],"tags":["iterator","enum","enumerate","variants","cardinality"],"downloads":17012643,"repositories":["crates.io"]},"rust:enum-iterator-derive":{"coordinates":"rust:enum-iterator-derive","name":"enum-iterator-derive","description":"Procedural macro to derive Sequence","license":[""],"tags":["iterator","enum","enumerate","variants","cardinality"],"downloads":17007851,"repositories":["crates.io"]},"rust:rusty-fork":{"coordinates":"rust:rusty-fork","name":"rusty-fork","description":"Cross-platform library for running Rust tests in sub-processes using a fork-like interface. ","license":[""],"tags":["testing","process","fork"],"downloads":16921405,"repositories":["crates.io"]},"rust:tokio-timer":{"coordinates":"rust:tokio-timer","name":"tokio-timer","description":"Timer facilities for Tokio ","license":[""],"tags":[],"downloads":16798772,"repositories":["crates.io"]},"rust:directories":{"coordinates":"rust:directories","name":"directories","description":"A tiny mid-level library that provides platform-specific standard locations of directories for config, cache and other data on Linux, Windows and macOS by leveraging the mechanisms defined by the XDG base/user directory specifications on Linux, the Known Folder API on Windows, and the Standard Directory guidelines on macOS.","license":[""],"tags":["path","xdg","basedir","folder","app_dirs"],"downloads":16775269,"repositories":["crates.io"]},"rust:pyo3-ffi":{"coordinates":"rust:pyo3-ffi","name":"pyo3-ffi","description":"Python-API bindings for the PyO3 ecosystem","license":[""],"tags":["ffi","python","cpython","pyo3"],"downloads":16765118,"repositories":["crates.io"]},"rust:cpuid-bool":{"coordinates":"rust:cpuid-bool","name":"cpuid-bool","description":"DEPRECATED: replaced by the `cpufeatures` crate","license":[""],"tags":[],"downloads":16764873,"repositories":["crates.io"]},"rust:async-process":{"coordinates":"rust:async-process","name":"async-process","description":"Async interface for working with processes","license":[""],"tags":["command","spawn","process","subprocess","child"],"downloads":16721092,"repositories":["crates.io"]},"rust:fancy-regex":{"coordinates":"rust:fancy-regex","name":"fancy-regex","description":"An implementation of regexes, supporting a relatively rich set of features, including backreferences and look-around.","license":[""],"tags":[],"downloads":16693784,"repositories":["crates.io"]},"rust:bytestring":{"coordinates":"rust:bytestring","name":"bytestring","description":"A UTF-8 encoded read-only string using `Bytes` as storage","license":[""],"tags":["web","utf8","string","bytes","actix"],"downloads":16674420,"repositories":["crates.io"]},"rust:quanta":{"coordinates":"rust:quanta","name":"quanta","description":"high-speed timing library","license":[""],"tags":["timing","nanosecond","rdtsc"],"downloads":16639154,"repositories":["crates.io"]},"rust:tokio-executor":{"coordinates":"rust:tokio-executor","name":"tokio-executor","description":"Future execution primitives ","license":[""],"tags":["futures","tokio"],"downloads":16556623,"repositories":["crates.io"]},"rust:gethostname":{"coordinates":"rust:gethostname","name":"gethostname","description":"gethostname for all platforms","license":[""],"tags":["dns","hostname","gethostname"],"downloads":16550446,"repositories":["crates.io"]},"rust:quickcheck":{"coordinates":"rust:quickcheck","name":"quickcheck","description":"Automatic property based testing with shrinking.","license":[""],"tags":["testing","quickcheck","property","shrinking","fuzz"],"downloads":16497944,"repositories":["crates.io"]},"rust:dotenv":{"coordinates":"rust:dotenv","name":"dotenv","description":"A `dotenv` implementation for Rust","license":[""],"tags":["environment","env","dotenv","settings","config"],"downloads":16470998,"repositories":["crates.io"]},"rust:shell-words":{"coordinates":"rust:shell-words","name":"shell-words","description":"Process command line according to parsing rules of UNIX shell","license":[""],"tags":["shell","unix","quote","split","words"],"downloads":16358746,"repositories":["crates.io"]},"rust:raw-cpuid":{"coordinates":"rust:raw-cpuid","name":"raw-cpuid","description":"A library to parse the x86 CPUID instruction, written in rust with no external dependencies. The implementation closely resembles the Intel CPUID manual description. The library does only depend on libcore.","license":[""],"tags":["cpuid","os","x86","amd64","libcore"],"downloads":16357611,"repositories":["crates.io"]},"rust:serde_qs":{"coordinates":"rust:serde_qs","name":"serde_qs","description":"Querystrings for Serde","license":[""],"tags":["serialization","serde","querystring"],"downloads":16335679,"repositories":["crates.io"]},"rust:rustc-serialize":{"coordinates":"rust:rustc-serialize","name":"rustc-serialize","description":"Generic serialization/deserialization support corresponding to the `derive(RustcEncodable, RustcDecodable)` mode in the compiler. Also includes support for hex, base64, and json encoding and decoding.  This crate is deprecated in favor of serde. ","license":[""],"tags":[],"downloads":16325489,"repositories":["crates.io"]},"rust:base-x":{"coordinates":"rust:base-x","name":"base-x","description":"Encode/decode any base","license":[""],"tags":["base-x","base","convert"],"downloads":16286373,"repositories":["crates.io"]},"rust:opentelemetry-semantic-conventions":{"coordinates":"rust:opentelemetry-semantic-conventions","name":"opentelemetry-semantic-conventions","description":"Semantic conventions for OpenTelemetry","license":[""],"tags":["async","tracing","opentelemetry"],"downloads":16155316,"repositories":["crates.io"]},"rust:x509-parser":{"coordinates":"rust:x509-parser","name":"x509-parser","description":"Parser for the X.509 v3 format (RFC 5280 certificates)","license":[""],"tags":["parser","nom","certificate","x509"],"downloads":16136019,"repositories":["crates.io"]},"rust:leb128":{"coordinates":"rust:leb128","name":"leb128","description":"Read and write DWARF''s \"Little Endian Base 128\" (LEB128) variable length integer encoding.","license":[""],"tags":["encoding","variable","length","leb128","dwarf"],"downloads":16134736,"repositories":["crates.io"]},"rust:tiff":{"coordinates":"rust:tiff","name":"tiff","description":"TIFF decoding and encoding library in pure Rust","license":[""],"tags":[],"downloads":16128494,"repositories":["crates.io"]},"rust:derive_builder_macro":{"coordinates":"rust:derive_builder_macro","name":"derive_builder_macro","description":"Rust macro to automatically implement the builder pattern for arbitrary structs.","license":[""],"tags":["macro","builder","derive","struct","setter"],"downloads":16126614,"repositories":["crates.io"]},"rust:xmlparser":{"coordinates":"rust:xmlparser","name":"xmlparser","description":"Pull-based, zero-allocation XML parser.","license":[""],"tags":["parser","tokenizer","xml"],"downloads":16118621,"repositories":["crates.io"]},"rust:schemars":{"coordinates":"rust:schemars","name":"schemars","description":"Generate JSON Schemas from Rust code","license":[""],"tags":["json-schema","rust","serde"],"downloads":16117921,"repositories":["crates.io"]},"rust:owning_ref":{"coordinates":"rust:owning_ref","name":"owning_ref","description":"A library for creating references that carry their owner with them.","license":[""],"tags":["reference","sibling","field","owning"],"downloads":16097107,"repositories":["crates.io"]},"rust:rand_distr":{"coordinates":"rust:rand_distr","name":"rand_distr","description":"Sampling from random number distributions ","license":[""],"tags":["random","probability","distribution","rng"],"downloads":16090970,"repositories":["crates.io"]},"rust:weezl":{"coordinates":"rust:weezl","name":"weezl","description":"Fast LZW compression and decompression.","license":[""],"tags":[],"downloads":16083595,"repositories":["crates.io"]},"rust:schemars_derive":{"coordinates":"rust:schemars_derive","name":"schemars_derive","description":"Macros for #[derive(JsonSchema)], for use with schemars","license":[""],"tags":["json-schema","rust","serde"],"downloads":16081308,"repositories":["crates.io"]},"rust:blake2b_simd":{"coordinates":"rust:blake2b_simd","name":"blake2b_simd","description":"a pure Rust BLAKE2b implementation with dynamic SIMD","license":[""],"tags":["blake2","blake2b","blake2bp"],"downloads":16073535,"repositories":["crates.io"]},"rust:slog":{"coordinates":"rust:slog","name":"slog","description":"Structured, extensible, composable logging for Rust","license":[""],"tags":["log","logging","structured","hierarchical"],"downloads":16071259,"repositories":["crates.io"]},"rust:bytesize":{"coordinates":"rust:bytesize","name":"bytesize","description":"an utility for human-readable bytes representations","license":[""],"tags":["utility","format","byte","human-readable","byte-size"],"downloads":16026953,"repositories":["crates.io"]},"rust:rusqlite":{"coordinates":"rust:rusqlite","name":"rusqlite","description":"Ergonomic wrapper for SQLite","license":[""],"tags":["database","sqlite","ffi"],"downloads":15987865,"repositories":["crates.io"]},"rust:dunce":{"coordinates":"rust:dunce","name":"dunce","description":"Normalize Windows paths to the most compatible format, avoiding UNC where possible","license":[""],"tags":["windows","realpath","unc","canonicalize","deunc"],"downloads":15947034,"repositories":["crates.io"]},"rust:uint":{"coordinates":"rust:uint","name":"uint","description":"Large fixed-size integer arithmetic","license":[""],"tags":[],"downloads":15911175,"repositories":["crates.io"]},"rust:console_error_panic_hook":{"coordinates":"rust:console_error_panic_hook","name":"console_error_panic_hook","description":"A panic hook for `wasm32-unknown-unknown` that logs panics to `console.error`","license":[""],"tags":[],"downloads":15910310,"repositories":["crates.io"]},"rust:platforms":{"coordinates":"rust:platforms","name":"platforms","description":"Rust platform registry with information about valid Rust platforms (target triple, target_arch, target_os) sourced from the Rust compiler. ","license":[""],"tags":["cpu","os","architectures","targets","triples"],"downloads":15890301,"repositories":["crates.io"]},"rust:fuchsia-cprng":{"coordinates":"rust:fuchsia-cprng","name":"fuchsia-cprng","description":"Rust crate for the Fuchsia cryptographically secure pseudorandom number generator","license":[""],"tags":[],"downloads":15890069,"repositories":["crates.io"]},"rust:password-hash":{"coordinates":"rust:password-hash","name":"password-hash","description":"Traits which describe the functionality of password hashing algorithms, as well as a `no_std`-friendly implementation of the PHC string format (a well-defined subset of the Modular Crypt Format a.k.a. MCF) ","license":[""],"tags":["password","crypt","pbkdf","phc","mcf"],"downloads":15864031,"repositories":["crates.io"]},"rust:chacha20":{"coordinates":"rust:chacha20","name":"chacha20","description":"The ChaCha20 stream cipher (RFC 8439) implemented in pure Rust using traits from the RustCrypto `cipher` crate, with optional architecture-specific hardware acceleration (AVX2, SSE2). Additionally provides the ChaCha8, ChaCha12, XChaCha20, XChaCha12 and XChaCha8 stream ciphers, and also optional rand_core-compatible RNGs based on those ciphers. ","license":[""],"tags":["crypto","stream-cipher","xchacha20","chacha8","chacha12"],"downloads":15854423,"repositories":["crates.io"]},"rust:atoi":{"coordinates":"rust:atoi","name":"atoi","description":"Parse integers directly from `[u8]` slices in safe code","license":[""],"tags":["conversion","integer","atoi"],"downloads":15839193,"repositories":["crates.io"]},"rust:twoway":{"coordinates":"rust:twoway","name":"twoway","description":"(Deprecated - use crate memchr instead.) Fast substring search for strings and byte strings. Optional SSE4.2 acceleration (if detected at runtime) using pcmpestri. Memchr is the only mandatory dependency. The two way algorithm is also used by rust''s libstd itself, but here it is exposed both for byte strings, using memchr, and optionally using a SSE4.2 accelerated version.","license":[""],"tags":["string","find","substring-search","pcmpestri","memmem"],"downloads":15801102,"repositories":["crates.io"]},"rust:rmp-serde":{"coordinates":"rust:rmp-serde","name":"rmp-serde","description":"Serde bindings for RMP","license":[""],"tags":["serialization","msgpack","serde","messagepack"],"downloads":15798786,"repositories":["crates.io"]},"rust:rdrand":{"coordinates":"rust:rdrand","name":"rdrand","description":"An implementation of random number generator based on rdrand and rdseed instructions","license":[""],"tags":["random","rand","rdrand","rdseed"],"downloads":15798621,"repositories":["crates.io"]},"rust:typed-arena":{"coordinates":"rust:typed-arena","name":"typed-arena","description":"The arena, a fast but limited type of allocator","license":[""],"tags":["arena"],"downloads":15774247,"repositories":["crates.io"]},"rust:mach":{"coordinates":"rust:mach","name":"mach","description":"A Rust interface to the user-space API of the Mach 3.0 kernel that underlies OSX.","license":[""],"tags":["kernel","darwin","macos"],"downloads":15644459,"repositories":["crates.io"]},"rust:poly1305":{"coordinates":"rust:poly1305","name":"poly1305","description":"The Poly1305 universal hash function and message authentication code","license":[""],"tags":["crypto","chacha20","mac","universal-hashing","salsa20"],"downloads":15593460,"repositories":["crates.io"]},"rust:inventory":{"coordinates":"rust:inventory","name":"inventory","description":"Typed distributed plugin registration","license":[""],"tags":["linkage"],"downloads":15533774,"repositories":["crates.io"]},"rust:tokio-reactor":{"coordinates":"rust:tokio-reactor","name":"tokio-reactor","description":"Event loop that drives Tokio I/O resources. ","license":[""],"tags":[],"downloads":15521533,"repositories":["crates.io"]},"rust:rusticata-macros":{"coordinates":"rust:rusticata-macros","name":"rusticata-macros","description":"Helper macros for Rusticata","license":[""],"tags":["parser","serialize","nom"],"downloads":15421656,"repositories":["crates.io"]},"rust:oid-registry":{"coordinates":"rust:oid-registry","name":"oid-registry","description":"Object Identifier (OID) database","license":[""],"tags":["der","ber","oid"],"downloads":15398570,"repositories":["crates.io"]},"rust:x25519-dalek":{"coordinates":"rust:x25519-dalek","name":"x25519-dalek","description":"X25519 elliptic curve Diffie-Hellman key exchange in pure-Rust, using curve25519-dalek.","license":[""],"tags":["cryptography","curve25519","key-exchange","x25519","diffie-hellman"],"downloads":15319166,"repositories":["crates.io"]},"rust:assert_matches":{"coordinates":"rust:assert_matches","name":"assert_matches","description":"Asserts that a value matches a pattern","license":[""],"tags":["assert","match","pattern"],"downloads":15317092,"repositories":["crates.io"]},"rust:hdrhistogram":{"coordinates":"rust:hdrhistogram","name":"hdrhistogram","description":"A port of HdrHistogram to Rust","license":[""],"tags":["statistics","analytics","sampling"],"downloads":15271537,"repositories":["crates.io"]},"rust:os_pipe":{"coordinates":"rust:os_pipe","name":"os_pipe","description":"a cross-platform library for opening OS pipes","license":[""],"tags":["pipe","pipe2","createpipe","dup"],"downloads":15206618,"repositories":["crates.io"]},"rust:warp":{"coordinates":"rust:warp","name":"warp","description":"serve the web at warp speeds","license":[""],"tags":["hyper","http","server","warp"],"downloads":15138899,"repositories":["crates.io"]},"rust:thrift":{"coordinates":"rust:thrift","name":"thrift","description":"Rust bindings for the Apache Thrift RPC system","license":[""],"tags":["thrift"],"downloads":15114083,"repositories":["crates.io"]},"rust:atomic":{"coordinates":"rust:atomic","name":"atomic","description":"Generic Atomic<T> wrapper type","license":[""],"tags":["no_std","atomic"],"downloads":15096406,"repositories":["crates.io"]},"rust:bigdecimal":{"coordinates":"rust:bigdecimal","name":"bigdecimal","description":"Arbitrary precision decimal numbers","license":[""],"tags":["numerics","bignum","decimal","arbitrary-precision"],"downloads":15070588,"repositories":["crates.io"]},"rust:sqlformat":{"coordinates":"rust:sqlformat","name":"sqlformat","description":"Formats whitespace in a SQL string to make it easier to read","license":[""],"tags":["sql"],"downloads":15026193,"repositories":["crates.io"]},"rust:hex-literal":{"coordinates":"rust:hex-literal","name":"hex-literal","description":"Macro for converting hexadecimal string to a byte array at compile time","license":[""],"tags":["hex","literals"],"downloads":14985362,"repositories":["crates.io"]},"rust:tokio-threadpool":{"coordinates":"rust:tokio-threadpool","name":"tokio-threadpool","description":"A task scheduler backed by a work-stealing thread pool. ","license":[""],"tags":["futures","tokio"],"downloads":14923860,"repositories":["crates.io"]},"rust:deflate":{"coordinates":"rust:deflate","name":"deflate","description":"A DEFLATE, zlib and gzip encoder written in Rust. ","license":[""],"tags":["gzip","flate","zlib","compression","deflate"],"downloads":14922592,"repositories":["crates.io"]},"rust:backtrace-sys":{"coordinates":"rust:backtrace-sys","name":"backtrace-sys","description":"Bindings to the libbacktrace gcc library ","license":[""],"tags":[],"downloads":14921468,"repositories":["crates.io"]},"rust:bytes-utils":{"coordinates":"rust:bytes-utils","name":"bytes-utils","description":"Additional utilities for working with the bytes crate","license":[""],"tags":["zero-copy","buffers","bytes","no_std"],"downloads":14901362,"repositories":["crates.io"]},"rust:rkyv_derive":{"coordinates":"rust:rkyv_derive","name":"rkyv_derive","description":"Derive macro for rkyv","license":[""],"tags":[],"downloads":14858307,"repositories":["crates.io"]},"rust:rkyv":{"coordinates":"rust:rkyv","name":"rkyv","description":"Zero-copy deserialization framework for Rust","license":[""],"tags":["serialization","zero-copy","archive","no_std","rkyv"],"downloads":14851648,"repositories":["crates.io"]},"rust:scheduled-thread-pool":{"coordinates":"rust:scheduled-thread-pool","name":"scheduled-thread-pool","description":"A scheduled thread pool","license":[""],"tags":["pool","threadpool"],"downloads":14822890,"repositories":["crates.io"]},"rust:serde-value":{"coordinates":"rust:serde-value","name":"serde-value","description":"Serialization value trees","license":[""],"tags":["serde"],"downloads":14813404,"repositories":["crates.io"]},"rust:globwalk":{"coordinates":"rust:globwalk","name":"globwalk","description":"Glob-matched recursive file system walking.","license":[""],"tags":["glob","iterator","walk","regex","pattern"],"downloads":14802326,"repositories":["crates.io"]},"rust:enumflags2":{"coordinates":"rust:enumflags2","name":"enumflags2","description":"Enum-based bit flags","license":[""],"tags":["enum","flag","bitflags","bitflag"],"downloads":14790643,"repositories":["crates.io"]},"rust:futures-intrusive":{"coordinates":"rust:futures-intrusive","name":"futures-intrusive","description":"Futures based on intrusive data structures - for std and no-std environments. ","license":[""],"tags":[],"downloads":14779150,"repositories":["crates.io"]},"rust:paste-impl":{"coordinates":"rust:paste-impl","name":"paste-impl","description":"Implementation detail of the `paste` crate","license":[""],"tags":[],"downloads":14772179,"repositories":["crates.io"]},"rust:jni":{"coordinates":"rust:jni","name":"jni","description":"Rust bindings to the JNI","license":[""],"tags":["ffi","java","jni"],"downloads":14743597,"repositories":["crates.io"]},"rust:enumflags2_derive":{"coordinates":"rust:enumflags2_derive","name":"enumflags2_derive","description":"Do not use directly, use the reexport in the `enumflags2` crate. This allows for better compatibility across versions.","license":[""],"tags":["enum","flag","bitflags","bitflag"],"downloads":14743261,"repositories":["crates.io"]},"rust:gloo-timers":{"coordinates":"rust:gloo-timers","name":"gloo-timers","description":"Convenience crate for working with JavaScript timers","license":[""],"tags":[],"downloads":14733142,"repositories":["crates.io"]},"rust:retain_mut":{"coordinates":"rust:retain_mut","name":"retain_mut","description":"Provide retain_mut method that has the same functionality as retain but gives mutable borrow to the predicate.","license":[""],"tags":["no_std","retain"],"downloads":14731777,"repositories":["crates.io"]},"rust:cpp_demangle":{"coordinates":"rust:cpp_demangle","name":"cpp_demangle","description":"A crate for demangling C++ symbols","license":[""],"tags":["symbolicate","demangle","c-plus-plus","itanium"],"downloads":14730437,"repositories":["crates.io"]},"rust:p256":{"coordinates":"rust:p256","name":"p256","description":"Pure Rust implementation of the NIST P-256 (a.k.a. secp256r1, prime256v1) elliptic curve as defined in SP 800-186, with support for ECDH, ECDSA signing/verification, and general purpose curve arithmetic ","license":[""],"tags":["crypto","ecc","nist","prime256v1","secp256r1"],"downloads":14716789,"repositories":["crates.io"]},"rust:chrono-tz-build":{"coordinates":"rust:chrono-tz-build","name":"chrono-tz-build","description":"internal build script for chrono-tz","license":[""],"tags":["timezone","script","iana","chrono-tz"],"downloads":14689600,"repositories":["crates.io"]},"rust:dialoguer":{"coordinates":"rust:dialoguer","name":"dialoguer","description":"A command line prompting library.","license":[""],"tags":["cli","menu","prompt"],"downloads":14689273,"repositories":["crates.io"]},"rust:secp256k1":{"coordinates":"rust:secp256k1","name":"secp256k1","description":"Rust wrapper library for Pieter Wuille''s `libsecp256k1`. Implements ECDSA and BIP 340 signatures for the SECG elliptic curve group secp256k1 and related utilities.","license":[""],"tags":["crypto","bitcoin","ecdsa","secp256k1","libsecp256k1"],"downloads":14678961,"repositories":["crates.io"]},"rust:rpassword":{"coordinates":"rust:rpassword","name":"rpassword","description":"Read passwords in console applications.","license":[""],"tags":["read","password","security","pass","getpass"],"downloads":14642313,"repositories":["crates.io"]},"rust:bytecheck_derive":{"coordinates":"rust:bytecheck_derive","name":"bytecheck_derive","description":"Derive macro for bytecheck","license":[""],"tags":[],"downloads":14605429,"repositories":["crates.io"]},"rust:bytecheck":{"coordinates":"rust:bytecheck","name":"bytecheck","description":"Derive macro for bytecheck","license":[""],"tags":["zero-copy","validation","rkyv","bytecheck"],"downloads":14603729,"repositories":["crates.io"]},"rust:secrecy":{"coordinates":"rust:secrecy","name":"secrecy","description":"Wrapper types and traits for secret management which help ensure they aren''t accidentally copied, logged, or otherwise exposed (as much as possible), and also ensure secrets are securely wiped from memory when dropped. ","license":[""],"tags":["memory","clear","secure","secret","wipe"],"downloads":14596575,"repositories":["crates.io"]},"rust:if_chain":{"coordinates":"rust:if_chain","name":"if_chain","description":"Macro for writing nested `if let` expressions.","license":[""],"tags":[],"downloads":14594279,"repositories":["crates.io"]},"rust:tokio-tcp":{"coordinates":"rust:tokio-tcp","name":"tokio-tcp","description":"TCP bindings for tokio. ","license":[""],"tags":[],"downloads":14583753,"repositories":["crates.io"]},"rust:libssh2-sys":{"coordinates":"rust:libssh2-sys","name":"libssh2-sys","description":"Native bindings to the libssh2 library","license":[""],"tags":[],"downloads":14583214,"repositories":["crates.io"]},"rust:raw-window-handle":{"coordinates":"rust:raw-window-handle","name":"raw-window-handle","description":"Interoperability library for Rust Windowing applications.","license":[""],"tags":["windowing"],"downloads":14510844,"repositories":["crates.io"]},"rust:typed-builder":{"coordinates":"rust:typed-builder","name":"typed-builder","description":"Compile-time type-checked builder derive","license":[""],"tags":["builder"],"downloads":14507539,"repositories":["crates.io"]},"rust:ws2_32-sys":{"coordinates":"rust:ws2_32-sys","name":"ws2_32-sys","description":"Contains function definitions for the Windows API library ws2_32. See winapi for types and constants.","license":[""],"tags":["ffi","win32","windows"],"downloads":14468510,"repositories":["crates.io"]},"rust:chunked_transfer":{"coordinates":"rust:chunked_transfer","name":"chunked_transfer","description":"Encoder and decoder for HTTP chunked transfer coding (RFC 7230 Â§ 4.1)","license":[""],"tags":[],"downloads":14462026,"repositories":["crates.io"]},"rust:assert-json-diff":{"coordinates":"rust:assert-json-diff","name":"assert-json-diff","description":"Easily compare two JSON values and get great output","license":[""],"tags":["testing","json","serde_json"],"downloads":14432627,"repositories":["crates.io"]},"rust:gcc":{"coordinates":"rust:gcc","name":"gcc","description":"**Deprecated** crate, renamed to `cc`  A build-time dependency for Cargo build scripts to assist in invoking the native C compiler to compile native C code into a static archive to be linked into Rust code. ","license":[""],"tags":["build-dependencies"],"downloads":14426882,"repositories":["crates.io"]},"rust:ptr_meta_derive":{"coordinates":"rust:ptr_meta_derive","name":"ptr_meta_derive","description":"Macros for ptr_meta","license":[""],"tags":[],"downloads":14415132,"repositories":["crates.io"]},"rust:ptr_meta":{"coordinates":"rust:ptr_meta","name":"ptr_meta","description":"A radioactive stabilization of the ptr_meta rfc","license":[""],"tags":["meta","no_std","ptr"],"downloads":14410415,"repositories":["crates.io"]},"rust:zerocopy-derive":{"coordinates":"rust:zerocopy-derive","name":"zerocopy-derive","description":"Custom derive for traits from the zerocopy crate","license":[""],"tags":[],"downloads":14372900,"repositories":["crates.io"]},"rust:rend":{"coordinates":"rust:rend","name":"rend","description":"Endian-aware primitives for Rust","license":[""],"tags":["endian","no_std"],"downloads":14327819,"repositories":["crates.io"]},"rust:snafu-derive":{"coordinates":"rust:snafu-derive","name":"snafu-derive","description":"An ergonomic error handling library","license":[""],"tags":[],"downloads":14251070,"repositories":["crates.io"]},"rust:vte":{"coordinates":"rust:vte","name":"vte","description":"Parser for implementing terminal emulators","license":[""],"tags":["parser","ansi","terminal","vte"],"downloads":14239545,"repositories":["crates.io"]},"rust:snafu":{"coordinates":"rust:snafu","name":"snafu","description":"An ergonomic error handling library","license":[""],"tags":["library","error","no_std","ergonomic"],"downloads":14217999,"repositories":["crates.io"]},"rust:lexical-util":{"coordinates":"rust:lexical-util","name":"lexical-util","description":"Shared utilities for lexical creates.","license":[""],"tags":["no_std"],"downloads":14197537,"repositories":["crates.io"]},"rust:lexical-parse-integer":{"coordinates":"rust:lexical-parse-integer","name":"lexical-parse-integer","description":"Efficient parsing of integers from strings.","license":[""],"tags":["parsing","lexical","no_std"],"downloads":14176062,"repositories":["crates.io"]},"rust:lexical-parse-float":{"coordinates":"rust:lexical-parse-float","name":"lexical-parse-float","description":"Efficient parsing of floats from strings.","license":[""],"tags":["parsing","lexical","no_std"],"downloads":14166913,"repositories":["crates.io"]},"rust:psm":{"coordinates":"rust:psm","name":"psm","description":"Portable Stack Manipulation: stack manipulation and introspection routines","license":[""],"tags":["stack","no_std"],"downloads":14157802,"repositories":["crates.io"]},"rust:sqlx":{"coordinates":"rust:sqlx","name":"sqlx","description":"ð§° The Rust SQL Toolkit. An async, pure Rust SQL crate featuring compile-time checked queries without a DSL. Supports PostgreSQL, MySQL, and SQLite.","license":[""],"tags":[],"downloads":14092672,"repositories":["crates.io"]},"rust:ena":{"coordinates":"rust:ena","name":"ena","description":"Union-find, congruence closure, and other unification code. Based on code from rustc.","license":[""],"tags":["unification","union-find"],"downloads":14071028,"repositories":["crates.io"]},"rust:hash32":{"coordinates":"rust:hash32","name":"hash32","description":"32-bit hashing algorithms","license":[""],"tags":["hash","murmur3","fnv","32-bit"],"downloads":13990671,"repositories":["crates.io"]},"rust:parity-scale-codec":{"coordinates":"rust:parity-scale-codec","name":"parity-scale-codec","description":"SCALE - Simple Concatenating Aggregated Little Endians","license":[""],"tags":[],"downloads":13981998,"repositories":["crates.io"]},"rust:sqlx-core":{"coordinates":"rust:sqlx-core","name":"sqlx-core","description":"Core of SQLx, the rust SQL toolkit. Not intended to be used directly.","license":[""],"tags":[],"downloads":13947505,"repositories":["crates.io"]},"rust:byte-slice-cast":{"coordinates":"rust:byte-slice-cast","name":"byte-slice-cast","description":"Safely cast bytes slices from/to slices of built-in fundamental numeric types","license":[""],"tags":["no_std"],"downloads":13914612,"repositories":["crates.io"]},"rust:tokio-sync":{"coordinates":"rust:tokio-sync","name":"tokio-sync","description":"Synchronization utilities. ","license":[""],"tags":[],"downloads":13907580,"repositories":["crates.io"]},"rust:lexical-write-float":{"coordinates":"rust:lexical-write-float","name":"lexical-write-float","description":"Efficient formatting of floats to strings.","license":[""],"tags":["encoding","lexical","no_std"],"downloads":13887842,"repositories":["crates.io"]},"rust:lz4-sys":{"coordinates":"rust:lz4-sys","name":"lz4-sys","description":"Rust LZ4 sys package.","license":[""],"tags":[],"downloads":13877872,"repositories":["crates.io"]},"rust:sqlx-macros":{"coordinates":"rust:sqlx-macros","name":"sqlx-macros","description":"Macros for SQLx, the rust SQL toolkit. Not intended to be used directly.","license":[""],"tags":[],"downloads":13858121,"repositories":["crates.io"]},"rust:lexical-write-integer":{"coordinates":"rust:lexical-write-integer","name":"lexical-write-integer","description":"Efficient formatting of integers to strings.","license":[""],"tags":["encoding","lexical","no_std"],"downloads":13818725,"repositories":["crates.io"]},"rust:yasna":{"coordinates":"rust:yasna","name":"yasna","description":"ASN.1 library for Rust","license":[""],"tags":["parser","serialization"],"downloads":13812515,"repositories":["crates.io"]},"rust:tokio-current-thread":{"coordinates":"rust:tokio-current-thread","name":"tokio-current-thread","description":"Single threaded executor which manage many tasks concurrently on the current thread. ","license":[""],"tags":["futures","tokio"],"downloads":13723495,"repositories":["crates.io"]},"rust:dotenvy":{"coordinates":"rust:dotenvy","name":"dotenvy","description":"A well-maintained fork of the dotenv crate","license":[""],"tags":["environment","env","dotenv","settings","config"],"downloads":13720299,"repositories":["crates.io"]},"rust:publicsuffix":{"coordinates":"rust:publicsuffix","name":"publicsuffix","description":"Extract root domain and suffix from a domain name","license":[""],"tags":["domain","no_std","tld","psl","tldextract"],"downloads":13711549,"repositories":["crates.io"]},"rust:opentelemetry_sdk":{"coordinates":"rust:opentelemetry_sdk","name":"opentelemetry_sdk","description":"The SDK for the OpenTelemetry metrics collection and distributed tracing framework","license":[""],"tags":[],"downloads":13656893,"repositories":["crates.io"]},"rust:primitive-types":{"coordinates":"rust:primitive-types","name":"primitive-types","description":"Primitive types shared by Ethereum and Substrate","license":[""],"tags":[],"downloads":13656329,"repositories":["crates.io"]},"rust:dlv-list":{"coordinates":"rust:dlv-list","name":"dlv-list","description":"Semi-doubly linked list implemented using a vector","license":[""],"tags":["vector","list","linked"],"downloads":13599601,"repositories":["crates.io"]},"rust:simdutf8":{"coordinates":"rust:simdutf8","name":"simdutf8","description":"SIMD-accelerated UTF-8 validation.","license":[""],"tags":["unicode","string","simd","utf-8","validation"],"downloads":13597071,"repositories":["crates.io"]},"rust:borsh-derive":{"coordinates":"rust:borsh-derive","name":"borsh-derive","description":"Binary Object Representation Serializer for Hashing ","license":[""],"tags":[],"downloads":13579780,"repositories":["crates.io"]},"rust:ouroboros":{"coordinates":"rust:ouroboros","name":"ouroboros","description":"Easy, safe self-referential struct generation.","license":[""],"tags":[],"downloads":13559612,"repositories":["crates.io"]},"rust:nanorand":{"coordinates":"rust:nanorand","name":"nanorand","description":"A tiny, fast, zero-dep library for random number generation.","license":[""],"tags":["random","rand","entropy","no-std"],"downloads":13547541,"repositories":["crates.io"]},"rust:aws-smithy-types":{"coordinates":"rust:aws-smithy-types","name":"aws-smithy-types","description":"Types for smithy-rs codegen.","license":[""],"tags":[],"downloads":13530975,"repositories":["crates.io"]},"rust:cloudabi":{"coordinates":"rust:cloudabi","name":"cloudabi","description":"Low level interface to CloudABI. Contains all syscalls and related types.","license":[""],"tags":["cloudabi"],"downloads":13530420,"repositories":["crates.io"]},"rust:borsh":{"coordinates":"rust:borsh","name":"borsh","description":"Binary Object Representation Serializer for Hashing ","license":[""],"tags":[],"downloads":13437907,"repositories":["crates.io"]},"rust:chacha20poly1305":{"coordinates":"rust:chacha20poly1305","name":"chacha20poly1305","description":"Pure Rust implementation of the ChaCha20Poly1305 Authenticated Encryption with Additional Data Cipher (RFC 8439) with optional architecture-specific hardware acceleration. Also contains implementations of the XChaCha20Poly1305 extended nonce variant of ChaCha20Poly1305, and the reduced-round ChaCha8Poly1305 and ChaCha12Poly1305 lightweight variants. ","license":[""],"tags":["chacha20","poly1305","aead","xchacha20","xchacha20poly1305"],"downloads":13435763,"repositories":["crates.io"]},"rust:aws-smithy-http":{"coordinates":"rust:aws-smithy-http","name":"aws-smithy-http","description":"Smithy HTTP logic for smithy-rs.","license":[""],"tags":[],"downloads":13432193,"repositories":["crates.io"]},"rust:ref-cast-impl":{"coordinates":"rust:ref-cast-impl","name":"ref-cast-impl","description":"Derive implementation for ref_cast::RefCast.","license":[""],"tags":[],"downloads":13407124,"repositories":["crates.io"]},"rust:ref-cast":{"coordinates":"rust:ref-cast","name":"ref-cast","description":"Safely cast &T to &U where the struct U contains a single field of type T.","license":[""],"tags":[],"downloads":13403926,"repositories":["crates.io"]},"rust:ouroboros_macro":{"coordinates":"rust:ouroboros_macro","name":"ouroboros_macro","description":"Proc macro for ouroboros crate.","license":[""],"tags":[],"downloads":13355755,"repositories":["crates.io"]},"rust:shell-escape":{"coordinates":"rust:shell-escape","name":"shell-escape","description":"Escape characters that may have a special meaning in a shell","license":[""],"tags":[],"downloads":13342863,"repositories":["crates.io"]},"rust:uncased":{"coordinates":"rust:uncased","name":"uncased","description":"Case-preserving, ASCII case-insensitive, no_std string types.","license":[""],"tags":["case-insensitive","ascii","no_std","uncased","case-preserving"],"downloads":13312377,"repositories":["crates.io"]},"rust:clap_complete":{"coordinates":"rust:clap_complete","name":"clap_complete","description":"Generate shell completion scripts for your clap::Command","license":[""],"tags":["cli","completion","clap","bash"],"downloads":13289231,"repositories":["crates.io"]},"rust:fixed-hash":{"coordinates":"rust:fixed-hash","name":"fixed-hash","description":"Macros to define custom fixed-size hash types","license":[""],"tags":[],"downloads":13287777,"repositories":["crates.io"]},"rust:aes-soft":{"coordinates":"rust:aes-soft","name":"aes-soft","description":"DEPRECATED: replaced by the `aes` crate","license":[""],"tags":[],"downloads":13283718,"repositories":["crates.io"]},"rust:jni-sys":{"coordinates":"rust:jni-sys","name":"jni-sys","description":"Rust definitions corresponding to jni.h","license":[""],"tags":["java","jni"],"downloads":13281221,"repositories":["crates.io"]},"rust:procfs":{"coordinates":"rust:procfs","name":"procfs","description":"Interface to the linux procfs pseudo-filesystem","license":[""],"tags":["linux","process","proc","procfs"],"downloads":13200275,"repositories":["crates.io"]},"rust:aws-smithy-async":{"coordinates":"rust:aws-smithy-async","name":"aws-smithy-async","description":"Async runtime agnostic abstractions for smithy-rs.","license":[""],"tags":[],"downloads":13169940,"repositories":["crates.io"]},"rust:secp256k1-sys":{"coordinates":"rust:secp256k1-sys","name":"secp256k1-sys","description":"FFI for Pieter Wuille''s `libsecp256k1` library.","license":[""],"tags":["ffi","secp256k1","libsecp256k1"],"downloads":13121135,"repositories":["crates.io"]},"rust:aws-sigv4":{"coordinates":"rust:aws-sigv4","name":"aws-sigv4","description":"SigV4 signer for HTTP requests and Event Stream messages.","license":[""],"tags":[],"downloads":13092430,"repositories":["crates.io"]},"rust:ron":{"coordinates":"rust:ron","name":"ron","description":"Rusty Object Notation","license":[""],"tags":["parser","serialization","serde"],"downloads":13087354,"repositories":["crates.io"]},"rust:const_format":{"coordinates":"rust:const_format","name":"const_format","description":"Compile-time string formatting","license":[""],"tags":["format","no-std","concat"],"downloads":13072675,"repositories":["crates.io"]},"rust:output_vt100":{"coordinates":"rust:output_vt100","name":"output_vt100","description":"Utility to activate escape codes in Windows'' CMD and PowerShell","license":[""],"tags":["console","vt100","ansi"],"downloads":13041494,"repositories":["crates.io"]},"rust:fuchsia-zircon":{"coordinates":"rust:fuchsia-zircon","name":"fuchsia-zircon","description":"Rust bindings for the Zircon kernel","license":[""],"tags":[],"downloads":13025994,"repositories":["crates.io"]},"rust:const_format_proc_macros":{"coordinates":"rust:const_format_proc_macros","name":"const_format_proc_macros","description":"Implementation detail of the `const_format` crate","license":[""],"tags":["format","no-std","concat"],"downloads":13010565,"repositories":["crates.io"]},"rust:aws-types":{"coordinates":"rust:aws-types","name":"aws-types","description":"Cross-service types for the AWS SDK.","license":[""],"tags":[],"downloads":13001487,"repositories":["crates.io"]},"rust:signal-hook-mio":{"coordinates":"rust:signal-hook-mio","name":"signal-hook-mio","description":"MIO support for signal-hook","license":[""],"tags":["signal","unix","mio"],"downloads":12998087,"repositories":["crates.io"]},"rust:fuchsia-zircon-sys":{"coordinates":"rust:fuchsia-zircon-sys","name":"fuchsia-zircon-sys","description":"Low-level Rust bindings for the Zircon kernel","license":[""],"tags":[],"downloads":12990047,"repositories":["crates.io"]},"rust:radix_trie":{"coordinates":"rust:radix_trie","name":"radix_trie","description":"Generic radix trie data-structure.","license":[""],"tags":["collection","trie","generic","patricia","prefix"],"downloads":12961047,"repositories":["crates.io"]},"rust:nibble_vec":{"coordinates":"rust:nibble_vec","name":"nibble_vec","description":"Vector data-structure for half-byte values.","license":[""],"tags":["collection","data-structure","slice","vector","nibble"],"downloads":12919224,"repositories":["crates.io"]},"rust:multipart":{"coordinates":"rust:multipart","name":"multipart","description":"A backend-agnostic extension for HTTP libraries that provides support for POST multipart/form-data requests on both client and server.","license":[""],"tags":["form-data","hyper","http","upload","iron"],"downloads":12899454,"repositories":["crates.io"]},"rust:ordered-multimap":{"coordinates":"rust:ordered-multimap","name":"ordered-multimap","description":"Insertion ordered multimap","license":[""],"tags":[],"downloads":12894543,"repositories":["crates.io"]},"rust:memmap":{"coordinates":"rust:memmap","name":"memmap","description":"Cross-platform Rust API for memory-mapped file IO","license":[""],"tags":["file","io","mmap","memory-map"],"downloads":12880933,"repositories":["crates.io"]},"rust:sized-chunks":{"coordinates":"rust:sized-chunks","name":"sized-chunks","description":"Efficient sized chunk datatypes","license":[""],"tags":["sparse-array"],"downloads":12875807,"repositories":["crates.io"]},"rust:rgb":{"coordinates":"rust:rgb","name":"rgb","description":"`struct RGB/RGBA/etc.` for sharing pixels between crates + convenience methods for color manipulation. Allows no-copy high-level interoperability. Also adds common convenience methods and implements standard Rust traits to make `RGB`/`RGBA` pixels and slices first-class Rust objects.","license":[""],"tags":["color","rgb","rgba","pixel","bgra"],"downloads":12850762,"repositories":["crates.io"]},"rust:aws-smithy-json":{"coordinates":"rust:aws-smithy-json","name":"aws-smithy-json","description":"Token streaming JSON parser for smithy-rs.","license":[""],"tags":[],"downloads":12835948,"repositories":["crates.io"]},"rust:endian-type":{"coordinates":"rust:endian-type","name":"endian-type","description":"Type safe wrappers for types with a defined byte order","license":[""],"tags":["endian","no_std","byteorder"],"downloads":12826986,"repositories":["crates.io"]},"rust:parity-scale-codec-derive":{"coordinates":"rust:parity-scale-codec-derive","name":"parity-scale-codec-derive","description":"Serialization and deserialization derive macro for Parity SCALE Codec","license":[""],"tags":[],"downloads":12811181,"repositories":["crates.io"]},"rust:buf_redux":{"coordinates":"rust:buf_redux","name":"buf_redux","description":"Drop-in replacements for buffered I/O in `std::io` with extra features.","license":[""],"tags":["buffer","io","buffered"],"downloads":12805811,"repositories":["crates.io"]},"rust:fs-err":{"coordinates":"rust:fs-err","name":"fs-err","description":"A drop-in replacement for std::fs with more helpful error messages.","license":[""],"tags":[],"downloads":12757990,"repositories":["crates.io"]},"rust:rusoto_credential":{"coordinates":"rust:rusoto_credential","name":"rusoto_credential","description":"AWS credential tooling","license":[""],"tags":[],"downloads":12706942,"repositories":["crates.io"]},"rust:thread-id":{"coordinates":"rust:thread-id","name":"thread-id","description":"Get a unique thread ID","license":[""],"tags":["thread","pthread","getcurrentthreadid"],"downloads":12694361,"repositories":["crates.io"]},"rust:local-channel":{"coordinates":"rust:local-channel","name":"local-channel","description":"A non-threadsafe multi-producer, single-consumer, futures-aware, FIFO queue","license":[""],"tags":["channel","local","futures"],"downloads":12660347,"repositories":["crates.io"]},"rust:local-waker":{"coordinates":"rust:local-waker","name":"local-waker","description":"A synchronization primitive for thread-local task wakeup","license":[""],"tags":["local","futures","no-std","waker"],"downloads":12658902,"repositories":["crates.io"]},"rust:rusoto_core":{"coordinates":"rust:rusoto_core","name":"rusoto_core","description":"AWS SDK for Rust - Core","license":[""],"tags":["aws","amazon"],"downloads":12628755,"repositories":["crates.io"]},"rust:jemalloc-sys":{"coordinates":"rust:jemalloc-sys","name":"jemalloc-sys","description":"Rust FFI bindings to jemalloc ","license":[""],"tags":["allocator","jemalloc"],"downloads":12605715,"repositories":["crates.io"]},"rust:aws-smithy-xml":{"coordinates":"rust:aws-smithy-xml","name":"aws-smithy-xml","description":"XML parsing logic for Smithy protocols.","license":[""],"tags":[],"downloads":12601031,"repositories":["crates.io"]},"rust:aliasable":{"coordinates":"rust:aliasable","name":"aliasable","description":"Basic aliasable (non unique pointer) types","license":[""],"tags":[],"downloads":12589856,"repositories":["crates.io"]},"rust:nalgebra":{"coordinates":"rust:nalgebra","name":"nalgebra","description":"General-purpose linear algebra library with transformations and statically-sized or dynamically-sized matrices.","license":[""],"tags":["math","algebra","linear","matrix","vector"],"downloads":12556074,"repositories":["crates.io"]},"rust:humansize":{"coordinates":"rust:humansize","name":"humansize","description":"A configurable crate to easily represent sizes in a human-readable format.","license":[""],"tags":["size","humanize","formatting","file-size"],"downloads":12474285,"repositories":["crates.io"]},"rust:ghost":{"coordinates":"rust:ghost","name":"ghost","description":"Define your own PhantomData","license":[""],"tags":[],"downloads":12461209,"repositories":["crates.io"]},"rust:redis":{"coordinates":"rust:redis","name":"redis","description":"Redis driver for Rust.","license":[""],"tags":["database","redis"],"downloads":12458158,"repositories":["crates.io"]},"rust:k256":{"coordinates":"rust:k256","name":"k256","description":"secp256k1 elliptic curve library written in pure Rust with support for ECDSA signing/verification/public-key recovery, Taproot Schnorr signatures (BIP340), Elliptic Curve Diffie-Hellman (ECDH), and general-purpose secp256k1 elliptic curve group operations which can be used to implement arbitrary protocols ","license":[""],"tags":["crypto","bitcoin","secp256k1","ethereum","ecc"],"downloads":12432061,"repositories":["crates.io"]},"rust:block-modes":{"coordinates":"rust:block-modes","name":"block-modes","description":"This crate is deprecated. Use crates from https://github.com/RustCrypto/block-modes instead.","license":[""],"tags":[],"downloads":12407245,"repositories":["crates.io"]},"rust:bitmaps":{"coordinates":"rust:bitmaps","name":"bitmaps","description":"Fixed size boolean arrays","license":[""],"tags":[],"downloads":12385370,"repositories":["crates.io"]},"rust:aws-sdk-sts":{"coordinates":"rust:aws-sdk-sts","name":"aws-sdk-sts","description":"AWS SDK for AWS Security Token Service","license":[""],"tags":[],"downloads":12384119,"repositories":["crates.io"]},"rust:os_info":{"coordinates":"rust:os_info","name":"os_info","description":"Detect the operating system type and version.","license":[""],"tags":["os","os_type","os_version","os_info"],"downloads":12373427,"repositories":["crates.io"]},"rust:cesu8":{"coordinates":"rust:cesu8","name":"cesu8","description":"Convert to and from CESU-8 encoding (similar to UTF-8)","license":[""],"tags":[],"downloads":12336755,"repositories":["crates.io"]},"rust:build_const":{"coordinates":"rust:build_const","name":"build_const","description":"library for creating importable constants from build.rs or a script","license":[""],"tags":["static","embedded","build","no_std","const"],"downloads":12323168,"repositories":["crates.io"]},"rust:multer":{"coordinates":"rust:multer","name":"multer","description":"An async parser for `multipart/form-data` content-type in Rust.","license":[""],"tags":["async","multipart","multipart-formdata","multipart-uploads","formdata"],"downloads":12308231,"repositories":["crates.io"]},"rust:aws-smithy-query":{"coordinates":"rust:aws-smithy-query","name":"aws-smithy-query","description":"AWSQuery and EC2Query Smithy protocol logic for smithy-rs.","license":[""],"tags":[],"downloads":12277069,"repositories":["crates.io"]},"rust:aws-config":{"coordinates":"rust:aws-config","name":"aws-config","description":"AWS SDK config and credential provider implementations.","license":[""],"tags":[],"downloads":12244375,"repositories":["crates.io"]},"rust:cookie_store":{"coordinates":"rust:cookie_store","name":"cookie_store","description":"Implementation of Cookie storage and retrieval","license":[""],"tags":["http","store","cookie","jar"],"downloads":12217785,"repositories":["crates.io"]},"rust:scoped_threadpool":{"coordinates":"rust:scoped_threadpool","name":"scoped_threadpool","description":"A library for scoped and cached threadpools.","license":[""],"tags":["pool","threadpool","thread","scoped","cached"],"downloads":12187471,"repositories":["crates.io"]},"rust:deadpool":{"coordinates":"rust:deadpool","name":"deadpool","description":"Dead simple async pool","license":[""],"tags":["database","pool","async"],"downloads":12179225,"repositories":["crates.io"]},"rust:color-eyre":{"coordinates":"rust:color-eyre","name":"color-eyre","description":"An error report handler for panics and eyre::Reports for colorful, consistent, and well formatted error reports for all kinds of errors.","license":[""],"tags":[],"downloads":12165837,"repositories":["crates.io"]},"rust:rustc-hex":{"coordinates":"rust:rustc-hex","name":"rustc-hex","description":"rustc-serialize compatible hex conversion traits ","license":[""],"tags":["serialize","hex","rustc"],"downloads":12129540,"repositories":["crates.io"]},"rust:assert_cmd":{"coordinates":"rust:assert_cmd","name":"assert_cmd","description":"Test CLI Applications.","license":[""],"tags":["command","assert","test","cli","duct"],"downloads":12108630,"repositories":["crates.io"]},"rust:metrics":{"coordinates":"rust:metrics","name":"metrics","description":"A lightweight metrics facade.","license":[""],"tags":["metrics","facade"],"downloads":12068951,"repositories":["crates.io"]},"rust:smawk":{"coordinates":"rust:smawk","name":"smawk","description":"Functions for finding row-minima in a totally monotone matrix.","license":[""],"tags":["matrix","optimization","smawk","dynamic-programming"],"downloads":12039098,"repositories":["crates.io"]},"rust:strip-ansi-escapes":{"coordinates":"rust:strip-ansi-escapes","name":"strip-ansi-escapes","description":"Strip ANSI escape sequences from byte streams.","license":[""],"tags":["ansi","terminal","escape"],"downloads":12025378,"repositories":["crates.io"]},"rust:rusoto_signature":{"coordinates":"rust:rusoto_signature","name":"rusoto_signature","description":"AWS SDK for Rust - Request Signing","license":[""],"tags":["aws","amazon"],"downloads":12016055,"repositories":["crates.io"]},"rust:wast":{"coordinates":"rust:wast","name":"wast","description":"Customizable Rust parsers for the WebAssembly Text formats WAT and WAST ","license":[""],"tags":[],"downloads":11981998,"repositories":["crates.io"]},"rust:asn1-rs":{"coordinates":"rust:asn1-rs","name":"asn1-rs","description":"Parser/encoder for ASN.1 BER/DER data","license":[""],"tags":["parser","nom","asn1","der","ber"],"downloads":11953390,"repositories":["crates.io"]},"rust:futures-cpupool":{"coordinates":"rust:futures-cpupool","name":"futures-cpupool","description":"An implementation of thread pools which hand out futures to the results of the computation on the threads themselves. ","license":[""],"tags":[],"downloads":11930960,"repositories":["crates.io"]},"rust:lz4":{"coordinates":"rust:lz4","name":"lz4","description":"Rust LZ4 bindings library.","license":[""],"tags":[],"downloads":11921801,"repositories":["crates.io"]},"rust:html5ever":{"coordinates":"rust:html5ever","name":"html5ever","description":"High-performance browser-grade HTML5 parser","license":[""],"tags":[],"downloads":11908765,"repositories":["crates.io"]},"rust:aws-http":{"coordinates":"rust:aws-http","name":"aws-http","description":"This crate is no longer used by the AWS SDK and is deprecated.","license":[""],"tags":[],"downloads":11852507,"repositories":["crates.io"]},"rust:asn1-rs-derive":{"coordinates":"rust:asn1-rs-derive","name":"asn1-rs-derive","description":"Derive macros for the `asn1-rs` crate","license":[""],"tags":[],"downloads":11847406,"repositories":["crates.io"]},"rust:libflate":{"coordinates":"rust:libflate","name":"libflate","description":"A Rust implementation of DEFLATE algorithm and related formats (ZLIB, GZIP)","license":[""],"tags":["gzip","zlib","deflate"],"downloads":11784520,"repositories":["crates.io"]},"rust:mio-extras":{"coordinates":"rust:mio-extras","name":"mio-extras","description":"Extra components for use with Mio","license":[""],"tags":["io","async","non-blocking"],"downloads":11783552,"repositories":["crates.io"]},"rust:bytemuck_derive":{"coordinates":"rust:bytemuck_derive","name":"bytemuck_derive","description":"derive proc-macros for `bytemuck`","license":[""],"tags":["bytes","transmute","casting"],"downloads":11767192,"repositories":["crates.io"]},"rust:rcgen":{"coordinates":"rust:rcgen","name":"rcgen","description":"Rust X.509 certificate generator","license":[""],"tags":["certificate","mkcert","ca"],"downloads":11738359,"repositories":["crates.io"]},"rust:markup5ever":{"coordinates":"rust:markup5ever","name":"markup5ever","description":"Common code for xml5ever and html5ever","license":[""],"tags":[],"downloads":11734830,"repositories":["crates.io"]},"rust:lexical":{"coordinates":"rust:lexical","name":"lexical","description":"Lexical, to- and from-string conversion routines.","license":[""],"tags":["encoding","parsing","lexical","no_std"],"downloads":11729463,"repositories":["crates.io"]},"rust:opentelemetry_api":{"coordinates":"rust:opentelemetry_api","name":"opentelemetry_api","description":"OpenTelemetry is a metrics collection and distributed tracing framework","license":[""],"tags":[],"downloads":11724410,"repositories":["crates.io"]},"rust:tendril":{"coordinates":"rust:tendril","name":"tendril","description":"Compact buffer/string type for zero-copy parsing","license":[""],"tags":[],"downloads":11718383,"repositories":["crates.io"]},"rust:impl-codec":{"coordinates":"rust:impl-codec","name":"impl-codec","description":"Parity Codec serialization support for uint and fixed hash.","license":[""],"tags":[],"downloads":11685271,"repositories":["crates.io"]},"rust:simd-adler32":{"coordinates":"rust:simd-adler32","name":"simd-adler32","description":"A SIMD-accelerated Adler-32 hash algorithm implementation.","license":[""],"tags":["simd","adler32","avx2","ssse3","adler"],"downloads":11678229,"repositories":["crates.io"]},"rust:tokio-tls":{"coordinates":"rust:tokio-tls","name":"tokio-tls","description":"Deprecated in favor of `tokio-naitve-tls`.  An implementation of TLS/SSL streams for Tokio giving an implementation of TLS for nonblocking I/O streams. ","license":[""],"tags":[],"downloads":11669758,"repositories":["crates.io"]},"rust:json":{"coordinates":"rust:json","name":"json","description":"JSON implementation in Rust","license":[""],"tags":[],"downloads":11640525,"repositories":["crates.io"]},"rust:arbitrary":{"coordinates":"rust:arbitrary","name":"arbitrary","description":"The trait for generating structured data from unstructured data","license":[""],"tags":["testing","arbitrary"],"downloads":11636991,"repositories":["crates.io"]},"rust:heapless":{"coordinates":"rust:heapless","name":"heapless","description":"`static` friendly data structures that don''t require dynamic memory allocation","license":[""],"tags":["static","no-heap"],"downloads":11633614,"repositories":["crates.io"]},"rust:unicode-linebreak":{"coordinates":"rust:unicode-linebreak","name":"unicode-linebreak","description":"Implementation of the Unicode Line Breaking Algorithm","license":[""],"tags":["text","unicode","layout"],"downloads":11618435,"repositories":["crates.io"]},"rust:protobuf-codegen":{"coordinates":"rust:protobuf-codegen","name":"protobuf-codegen","description":"Code generator for rust-protobuf.  Includes a library to invoke programmatically (e. g. from `build.rs`) and `protoc-gen-rust` binary. ","license":[""],"tags":[],"downloads":11608434,"repositories":["crates.io"]},"rust:serde_ignored":{"coordinates":"rust:serde_ignored","name":"serde_ignored","description":"Find out about keys that are ignored when deserializing data","license":[""],"tags":["serialization","serde"],"downloads":11563809,"repositories":["crates.io"]},"rust:opentelemetry-otlp":{"coordinates":"rust:opentelemetry-otlp","name":"opentelemetry-otlp","description":"Exporter for the OpenTelemetry Collector","license":[""],"tags":["logging","metrics","tracing","opentelemetry","otlp"],"downloads":11555243,"repositories":["crates.io"]},"rust:num-format":{"coordinates":"rust:num-format","name":"num-format","description":"A Rust crate for producing string-representations of numbers, formatted according to international standards","license":[""],"tags":["comma","internationalization","number","separator","thousands"],"downloads":11500096,"repositories":["crates.io"]},"rust:unsigned-varint":{"coordinates":"rust:unsigned-varint","name":"unsigned-varint","description":"unsigned varint encoding","license":[""],"tags":[],"downloads":11479446,"repositories":["crates.io"]},"rust:impl-trait-for-tuples":{"coordinates":"rust:impl-trait-for-tuples","name":"impl-trait-for-tuples","description":"Attribute macro to implement a trait for tuples ","license":[""],"tags":["macro","trait","tuple","crate","proc-macro"],"downloads":11471074,"repositories":["crates.io"]},"rust:deunicode":{"coordinates":"rust:deunicode","name":"deunicode","description":"Convert Unicode strings to pure ASCII by intelligently transliterating them. Suppors Emoji and Chinese.","license":[""],"tags":["unicode","unidecode","transliteration","ascii","emoji"],"downloads":11466284,"repositories":["crates.io"]},"rust:futf":{"coordinates":"rust:futf","name":"futf","description":"Handling fragments of UTF-8","license":[""],"tags":[],"downloads":11463775,"repositories":["crates.io"]},"rust:dissimilar":{"coordinates":"rust:dissimilar","name":"dissimilar","description":"Diff library with semantic cleanup, based on Google''s diff-match-patch","license":[""],"tags":["diff"],"downloads":11457561,"repositories":["crates.io"]},"rust:beef":{"coordinates":"rust:beef","name":"beef","description":"More compact Cow","license":[""],"tags":["slice","str","borrow","cow"],"downloads":11445296,"repositories":["crates.io"]},"rust:pretty_env_logger":{"coordinates":"rust:pretty_env_logger","name":"pretty_env_logger","description":"a visually pretty env_logger","license":[""],"tags":["log","logging","logger"],"downloads":11438338,"repositories":["crates.io"]},"rust:ndarray":{"coordinates":"rust:ndarray","name":"ndarray","description":"An n-dimensional array for general elements and for numerics. Lightweight array views and slicing; views support chunking and splitting.","license":[""],"tags":["data-structure","matrix","array","multidimensional","blas"],"downloads":11423809,"repositories":["crates.io"]},"rust:aws-sdk-sso":{"coordinates":"rust:aws-sdk-sso","name":"aws-sdk-sso","description":"AWS SDK for AWS Single Sign-On","license":[""],"tags":[],"downloads":11421830,"repositories":["crates.io"]},"rust:cranelift-entity":{"coordinates":"rust:cranelift-entity","name":"cranelift-entity","description":"Data structures using entity references as mapping keys","license":[""],"tags":["entity","map","set"],"downloads":11363320,"repositories":["crates.io"]},"rust:sentry-types":{"coordinates":"rust:sentry-types","name":"sentry-types","description":"Common reusable types for implementing the sentry.io protocol. ","license":[""],"tags":["protocol","sentry"],"downloads":11353230,"repositories":["crates.io"]},"rust:lalrpop-util":{"coordinates":"rust:lalrpop-util","name":"lalrpop-util","description":"Runtime library for parsers generated by LALRPOP","license":[""],"tags":[],"downloads":11325358,"repositories":["crates.io"]},"rust:serde_test":{"coordinates":"rust:serde_test","name":"serde_test","description":"Token De/Serializer for testing De/Serialize implementations","license":[""],"tags":["serialization","testing","serde","dev-dependencies"],"downloads":11314132,"repositories":["crates.io"]},"rust:mac":{"coordinates":"rust:mac","name":"mac","description":"A collection of great and ubiqutitous macros.","license":[""],"tags":[],"downloads":11301328,"repositories":["crates.io"]},"rust:r2d2":{"coordinates":"rust:r2d2","name":"r2d2","description":"A generic connection pool","license":[""],"tags":["database","pool"],"downloads":11255644,"repositories":["crates.io"]},"rust:jemallocator":{"coordinates":"rust:jemallocator","name":"jemallocator","description":"A Rust allocator backed by jemalloc ","license":[""],"tags":["allocator","jemalloc"],"downloads":11233706,"repositories":["crates.io"]},"rust:async-mutex":{"coordinates":"rust:async-mutex","name":"async-mutex","description":"Async mutex","license":[""],"tags":["lock","mutex","synchronization","asynchronous"],"downloads":11209114,"repositories":["crates.io"]},"rust:opentelemetry-http":{"coordinates":"rust:opentelemetry-http","name":"opentelemetry-http","description":"Helper implementations for sending HTTP requests. Uses include propagating and extracting context over http, exporting telemetry, requesting sampling strategies.","license":[""],"tags":["context","propagation","tracing","opentelemetry"],"downloads":11126047,"repositories":["crates.io"]},"rust:ipnetwork":{"coordinates":"rust:ipnetwork","name":"ipnetwork","description":"A library to work with IP CIDRs in Rust","license":[""],"tags":["network","address","ip","cidr"],"downloads":11098875,"repositories":["crates.io"]},"rust:tracing-error":{"coordinates":"rust:tracing-error","name":"tracing-error","description":"Utilities for enriching errors with `tracing`. ","license":[""],"tags":["backtrace","tracing","error-handling","exception-reporting"],"downloads":11073288,"repositories":["crates.io"]},"rust:cranelift-frontend":{"coordinates":"rust:cranelift-frontend","name":"cranelift-frontend","description":"Cranelift IR builder helper","license":[""],"tags":[],"downloads":11037583,"repositories":["crates.io"]},"rust:more-asserts":{"coordinates":"rust:more-asserts","name":"more-asserts","description":"Small library providing additional assert_* and debug_assert_* macros.","license":[""],"tags":["testing","assertions","assert","debug","debug_assert"],"downloads":11004432,"repositories":["crates.io"]},"rust:sentry":{"coordinates":"rust:sentry","name":"sentry","description":"Sentry (getsentry.com) client for rust ;) ","license":[""],"tags":[],"downloads":10976304,"repositories":["crates.io"]},"rust:ipconfig":{"coordinates":"rust:ipconfig","name":"ipconfig","description":"Get network adapters information and network configuration for windows.","license":[""],"tags":["network","windows","interface","adapter","ipconfig"],"downloads":10963157,"repositories":["crates.io"]},"rust:vergen":{"coordinates":"rust:vergen","name":"vergen","description":"Generate ''cargo:rustc-env'' instructions via ''build.rs'' for use in your code via the ''env!'' macro","license":[""],"tags":["cargo","tool","build","instructions"],"downloads":10922670,"repositories":["crates.io"]},"rust:slog-term":{"coordinates":"rust:slog-term","name":"slog-term","description":"Unix terminal drain and formatter for slog-rs","license":[""],"tags":["log","logging","term","slog"],"downloads":10913852,"repositories":["crates.io"]},"rust:tokio-openssl":{"coordinates":"rust:tokio-openssl","name":"tokio-openssl","description":"An implementation of SSL streams for Tokio backed by OpenSSL ","license":[""],"tags":[],"downloads":10912878,"repositories":["crates.io"]},"rust:indoc-impl":{"coordinates":"rust:indoc-impl","name":"indoc-impl","description":"Indented document literals","license":[""],"tags":["string","literal","heredoc","nowdoc","multiline"],"downloads":10910021,"repositories":["crates.io"]},"rust:triomphe":{"coordinates":"rust:triomphe","name":"triomphe","description":"A fork of std::sync::Arc with some extra functionality and without weak references (originally servo_arc)","license":[""],"tags":["data-structure","ffi","arc","sync"],"downloads":10909782,"repositories":["crates.io"]},"rust:tokio-codec":{"coordinates":"rust:tokio-codec","name":"tokio-codec","description":"Utilities for encoding and decoding frames. ","license":[""],"tags":[],"downloads":10856724,"repositories":["crates.io"]},"rust:cranelift-codegen-meta":{"coordinates":"rust:cranelift-codegen-meta","name":"cranelift-codegen-meta","description":"Metaprogram for cranelift-codegen code generator library","license":[""],"tags":[],"downloads":10807794,"repositories":["crates.io"]},"rust:cranelift-codegen":{"coordinates":"rust:cranelift-codegen","name":"cranelift-codegen","description":"Low-level code generator library","license":[""],"tags":["compile","compiler","jit"],"downloads":10802615,"repositories":["crates.io"]},"rust:cranelift-bforest":{"coordinates":"rust:cranelift-bforest","name":"cranelift-bforest","description":"A forest of B+-trees","license":[""],"tags":["map","set","forest","btree"],"downloads":10792327,"repositories":["crates.io"]},"rust:ucd-util":{"coordinates":"rust:ucd-util","name":"ucd-util","description":"A small utility library for working with the Unicode character database. ","license":[""],"tags":["unicode","database","property","character"],"downloads":10786982,"repositories":["crates.io"]},"rust:string":{"coordinates":"rust:string","name":"string","description":"A UTF-8 encoded string with configurable byte storage.","license":[""],"tags":["string"],"downloads":10773178,"repositories":["crates.io"]},"rust:tracing-appender":{"coordinates":"rust:tracing-appender","name":"tracing-appender","description":"Provides utilities for file appenders and making non-blocking writers. ","license":[""],"tags":["logging","tracing","file-appender","non-blocking-writer"],"downloads":10760977,"repositories":["crates.io"]},"rust:docopt":{"coordinates":"rust:docopt","name":"docopt","description":"Command line argument parsing.","license":[""],"tags":["docopt","argument","command","argv"],"downloads":10757292,"repositories":["crates.io"]},"rust:aws-smithy-http-tower":{"coordinates":"rust:aws-smithy-http-tower","name":"aws-smithy-http-tower","description":"This crate is no longer used by smithy-rs and is deprecated.","license":[""],"tags":[],"downloads":10751616,"repositories":["crates.io"]},"rust:bit_field":{"coordinates":"rust:bit_field","name":"bit_field","description":"Simple bit field trait providing get_bit, get_bits, set_bit, and set_bits methods for Rust''s integral types.","license":[""],"tags":["no_std"],"downloads":10744172,"repositories":["crates.io"]},"rust:aws-smithy-client":{"coordinates":"rust:aws-smithy-client","name":"aws-smithy-client","description":"This crate is no longer used by smithy-rs and is deprecated.","license":[""],"tags":[],"downloads":10738685,"repositories":["crates.io"]},"rust:cranelift-codegen-shared":{"coordinates":"rust:cranelift-codegen-shared","name":"cranelift-codegen-shared","description":"For code shared between cranelift-codegen-meta and cranelift-codegen","license":[""],"tags":[],"downloads":10733435,"repositories":["crates.io"]},"rust:version-compare":{"coordinates":"rust:version-compare","name":"version-compare","description":"Rust library to easily compare version numbers with no specific format, and test against various comparison operators.","license":[""],"tags":["version","compare","comparison","comparing"],"downloads":10729894,"repositories":["crates.io"]},"rust:impl-serde":{"coordinates":"rust:impl-serde","name":"impl-serde","description":"Serde serialization support for uint and fixed hash.","license":[""],"tags":[],"downloads":10722438,"repositories":["crates.io"]},"rust:termios":{"coordinates":"rust:termios","name":"termios","description":"Safe bindings for the termios library.","license":[""],"tags":["terminal","posix","termios","tty"],"downloads":10702515,"repositories":["crates.io"]},"rust:postgres-protocol":{"coordinates":"rust:postgres-protocol","name":"postgres-protocol","description":"Low level Postgres protocol APIs","license":[""],"tags":[],"downloads":10668429,"repositories":["crates.io"]},"rust:pico-args":{"coordinates":"rust:pico-args","name":"pico-args","description":"An ultra simple CLI arguments parser.","license":[""],"tags":["cli","args"],"downloads":10652976,"repositories":["crates.io"]},"rust:enum_dispatch":{"coordinates":"rust:enum_dispatch","name":"enum_dispatch","description":"Near drop-in replacement for dynamic-dispatched method calls with up to 10x the speed","license":[""],"tags":["dynamic","performance","optimization","traits","speed"],"downloads":10605702,"repositories":["crates.io"]},"rust:http-types":{"coordinates":"rust:http-types","name":"http-types","description":"Common types for HTTP operations.","license":[""],"tags":["http","types","request","response","h2"],"downloads":10544834,"repositories":["crates.io"]},"rust:bech32":{"coordinates":"rust:bech32","name":"bech32","description":"Encodes and decodes the Bech32 format and implements the bech32 and bech32m checksums","license":[""],"tags":["encoding","bitcoin","base32","cryptocurrency","bech32"],"downloads":10539160,"repositories":["crates.io"]},"rust:trybuild":{"coordinates":"rust:trybuild","name":"trybuild","description":"Test harness for ui tests of compiler diagnostics","license":[""],"tags":["testing","macros","dev-dependencies"],"downloads":10535871,"repositories":["crates.io"]},"rust:rocksdb":{"coordinates":"rust:rocksdb","name":"rocksdb","description":"Rust wrapper for Facebook''s RocksDB embeddable database","license":[""],"tags":["database","embedded","lsm-tree","persistence"],"downloads":10521559,"repositories":["crates.io"]},"rust:lalrpop":{"coordinates":"rust:lalrpop","name":"lalrpop","description":"convenient LR(1) parser generator","license":[""],"tags":["parser","generator","grammar","lr","yacc"],"downloads":10509733,"repositories":["crates.io"]},"rust:cty":{"coordinates":"rust:cty","name":"cty","description":"Type aliases to C types like c_int for use with bindgen","license":[""],"tags":["ffi","types","c","bindgen"],"downloads":10509405,"repositories":["crates.io"]},"rust:fdeflate":{"coordinates":"rust:fdeflate","name":"fdeflate","description":"Fast specialized deflate implementation","license":[""],"tags":[],"downloads":10491500,"repositories":["crates.io"]},"rust:ttf-parser":{"coordinates":"rust:ttf-parser","name":"ttf-parser","description":"A high-level, safe, zero-allocation TrueType font parser.","license":[""],"tags":["ttf","opentype","truetype"],"downloads":10473666,"repositories":["crates.io"]},"rust:unic-common":{"coordinates":"rust:unic-common","name":"unic-common","description":"UNIC â Common Utilities","license":[""],"tags":["unicode","version"],"downloads":10462944,"repositories":["crates.io"]},"rust:tokio-udp":{"coordinates":"rust:tokio-udp","name":"tokio-udp","description":"UDP bindings for tokio. ","license":[""],"tags":[],"downloads":10460548,"repositories":["crates.io"]},"rust:unic-char-property":{"coordinates":"rust:unic-char-property","name":"unic-char-property","description":"UNIC â Unicode Character Tools â Character Property taxonomy, contracts and build macros","license":[""],"tags":["text","unicode","character-property"],"downloads":10458978,"repositories":["crates.io"]},"rust:unic-ucd-version":{"coordinates":"rust:unic-ucd-version","name":"unic-ucd-version","description":"UNIC â Unicode Character Database â Version","license":[""],"tags":["text","unicode","version"],"downloads":10457681,"repositories":["crates.io"]},"rust:librocksdb-sys":{"coordinates":"rust:librocksdb-sys","name":"librocksdb-sys","description":"Native bindings to librocksdb","license":[""],"tags":["bindings","ffi","rocksdb"],"downloads":10448205,"repositories":["crates.io"]},"rust:rstest":{"coordinates":"rust:rstest","name":"rstest","description":"Rust fixture based test framework. It use procedural macro to implement fixtures and table based tests. ","license":[""],"tags":["test","fixture"],"downloads":10443669,"repositories":["crates.io"]},"rust:shared_child":{"coordinates":"rust:shared_child","name":"shared_child","description":"a library for using child processes from multiple threads","license":[""],"tags":["command","process","subprocess","child"],"downloads":10441214,"repositories":["crates.io"]},"rust:tokio-uds":{"coordinates":"rust:tokio-uds","name":"tokio-uds","description":"Unix Domain sockets for Tokio ","license":[""],"tags":[],"downloads":10431688,"repositories":["crates.io"]},"rust:slog-async":{"coordinates":"rust:slog-async","name":"slog-async","description":"Asynchronous drain for slog-rs","license":[""],"tags":["log","logging","asynchronous","slog"],"downloads":10421188,"repositories":["crates.io"]},"rust:borsh-derive-internal":{"coordinates":"rust:borsh-derive-internal","name":"borsh-derive-internal","description":"Binary Object Representation Serializer for Hashing ","license":[""],"tags":[],"downloads":10420833,"repositories":["crates.io"]},"rust:sentry-core":{"coordinates":"rust:sentry-core","name":"sentry-core","description":"Core sentry library used for instrumentation and integration development. ","license":[""],"tags":[],"downloads":10414521,"repositories":["crates.io"]},"rust:unic-char-range":{"coordinates":"rust:unic-char-range","name":"unic-char-range","description":"UNIC â Unicode Character Tools â Character Range and Iteration","license":[""],"tags":["text","unicode","utilities","iteration"],"downloads":10413705,"repositories":["crates.io"]},"rust:borsh-schema-derive-internal":{"coordinates":"rust:borsh-schema-derive-internal","name":"borsh-schema-derive-internal","description":"Schema Generator for Borsh ","license":[""],"tags":[],"downloads":10399016,"repositories":["crates.io"]},"rust:smol_str":{"coordinates":"rust:smol_str","name":"smol_str","description":"small-string optimized string type with O(1) clone","license":[""],"tags":[],"downloads":10377811,"repositories":["crates.io"]},"rust:uname":{"coordinates":"rust:uname","name":"uname","description":"Name and information about current kernel","license":[""],"tags":["uname","hostname"],"downloads":10368413,"repositories":["crates.io"]},"rust:synom":{"coordinates":"rust:synom","name":"synom","description":"Stripped-down Nom parser used by Syn","license":[""],"tags":[],"downloads":10363665,"repositories":["crates.io"]},"rust:vte_generate_state_changes":{"coordinates":"rust:vte_generate_state_changes","name":"vte_generate_state_changes","description":"Proc macro for generating VTE state changes","license":[""],"tags":[],"downloads":10330602,"repositories":["crates.io"]},"rust:tokio-fs":{"coordinates":"rust:tokio-fs","name":"tokio-fs","description":"Filesystem API for Tokio. ","license":[""],"tags":["file","async","fs","futures","tokio"],"downloads":10253633,"repositories":["crates.io"]},"rust:outref":{"coordinates":"rust:outref","name":"outref","description":"Out reference","license":[""],"tags":["slice","reference","write-only"],"downloads":10220345,"repositories":["crates.io"]},"rust:simba":{"coordinates":"rust:simba","name":"simba","description":"SIMD algebra for Rust","license":[""],"tags":["math","algebra","simd"],"downloads":10201577,"repositories":["crates.io"]},"rust:sentry-backtrace":{"coordinates":"rust:sentry-backtrace","name":"sentry-backtrace","description":"Sentry integration and utilities for dealing with stacktraces. ","license":[""],"tags":[],"downloads":10201067,"repositories":["crates.io"]},"rust:libsecp256k1":{"coordinates":"rust:libsecp256k1","name":"libsecp256k1","description":"Pure Rust secp256k1 implementation.","license":[""],"tags":["crypto","bitcoin","ecdsa","secp256k1","no_std"],"downloads":10182635,"repositories":["crates.io"]},"rust:base64-simd":{"coordinates":"rust:base64-simd","name":"base64-simd","description":"SIMD-accelerated base64 encoding and decoding","license":[""],"tags":["simd","base64"],"downloads":10181024,"repositories":["crates.io"]},"rust:stdweb":{"coordinates":"rust:stdweb","name":"stdweb","description":"A standard library for the client-side Web","license":[""],"tags":["web","javascript","asmjs","webasm"],"downloads":10164500,"repositories":["crates.io"]},"rust:serde-wasm-bindgen":{"coordinates":"rust:serde-wasm-bindgen","name":"serde-wasm-bindgen","description":"Native Serde adapter for wasm-bindgen","license":[""],"tags":["serialization","serde","javascript","wasm","webassembly"],"downloads":10156306,"repositories":["crates.io"]},"rust:multihash":{"coordinates":"rust:multihash","name":"multihash","description":"Implementation of the multihash format","license":[""],"tags":["multihash","ipfs"],"downloads":10155385,"repositories":["crates.io"]},"rust:option-ext":{"coordinates":"rust:option-ext","name":"option-ext","description":"Extends `Option` with additional operations","license":[""],"tags":[],"downloads":10119154,"repositories":["crates.io"]},"rust:shellexpand":{"coordinates":"rust:shellexpand","name":"shellexpand","description":"Shell-like expansions in strings","license":[""],"tags":["strings","shell","variables"],"downloads":10092936,"repositories":["crates.io"]},"rust:nohash-hasher":{"coordinates":"rust:nohash-hasher","name":"nohash-hasher","description":"An implementation of `std::hash::Hasher` which does not hash at all.","license":[""],"tags":["hash","hashmap","hashset","hasher"],"downloads":10088364,"repositories":["crates.io"]},"rust:asn1-rs-impl":{"coordinates":"rust:asn1-rs-impl","name":"asn1-rs-impl","description":"Implementation details for the `asn1-rs` crate","license":[""],"tags":[],"downloads":10032499,"repositories":["crates.io"]},"rust:tikv-jemalloc-sys":{"coordinates":"rust:tikv-jemalloc-sys","name":"tikv-jemalloc-sys","description":"Rust FFI bindings to jemalloc ","license":[""],"tags":["allocator","jemalloc"],"downloads":9980885,"repositories":["crates.io"]},"rust:postgres-types":{"coordinates":"rust:postgres-types","name":"postgres-types","description":"Conversions between Rust and Postgres values","license":[""],"tags":["database","sql","postgres","postgresql"],"downloads":9979849,"repositories":["crates.io"]},"rust:sentry-contexts":{"coordinates":"rust:sentry-contexts","name":"sentry-contexts","description":"Sentry integration for os, device, and rust contexts. ","license":[""],"tags":[],"downloads":9935461,"repositories":["crates.io"]},"rust:btm":{"coordinates":"rust:btm","name":"btm","description":"Blockchain Time Machine","license":[""],"tags":["vcs","snapshot","zfs","btrfs"],"downloads":9921197,"repositories":["crates.io"]},"rust:windows-core":{"coordinates":"rust:windows-core","name":"windows-core","description":"Rust for Windows","license":[""],"tags":[],"downloads":9902204,"repositories":["crates.io"]},"rust:comfy-table":{"coordinates":"rust:comfy-table","name":"comfy-table","description":"An easy to use library for building beautiful tables with automatic content wrapping","license":[""],"tags":["unicode","table","terminal"],"downloads":9872982,"repositories":["crates.io"]},"rust:lzma-sys":{"coordinates":"rust:lzma-sys","name":"lzma-sys","description":"Raw bindings to liblzma which contains an implementation of LZMA and xz stream encoding/decoding.  High level Rust bindings are available in the `xz2` crate. ","license":[""],"tags":[],"downloads":9858355,"repositories":["crates.io"]},"rust:encoding":{"coordinates":"rust:encoding","name":"encoding","description":"Character encoding support for Rust","license":[""],"tags":["encoding","unicode","charset"],"downloads":9847553,"repositories":["crates.io"]},"rust:compiler_builtins":{"coordinates":"rust:compiler_builtins","name":"compiler_builtins","description":"Compiler intrinsics used by the Rust compiler. Also available for other targets if necessary! ","license":[""],"tags":[],"downloads":9827809,"repositories":["crates.io"]},"rust:ascii-canvas":{"coordinates":"rust:ascii-canvas","name":"ascii-canvas","description":"simple canvas for drawing lines and styled text and emitting to the terminal","license":[""],"tags":[],"downloads":9827645,"repositories":["crates.io"]},"rust:napi":{"coordinates":"rust:napi","name":"napi","description":"N-API bindings","license":[""],"tags":["ffi","node","nodejs","n-api","napi"],"downloads":9826806,"repositories":["crates.io"]},"rust:cadence":{"coordinates":"rust:cadence","name":"cadence","description":"An extensible Statsd client for Rust","license":[""],"tags":["metrics","statsd"],"downloads":9816141,"repositories":["crates.io"]},"rust:sentry-panic":{"coordinates":"rust:sentry-panic","name":"sentry-panic","description":"Sentry integration for capturing panics. ","license":[""],"tags":[],"downloads":9793416,"repositories":["crates.io"]},"rust:utf8-width":{"coordinates":"rust:utf8-width","name":"utf8-width","description":"To determine the width of a UTF-8 character by providing its first byte.","license":[""],"tags":["utf-8","width","character","length"],"downloads":9790638,"repositories":["crates.io"]},"rust:traitobject":{"coordinates":"rust:traitobject","name":"traitobject","description":"Unsafe helpers for working with raw trait objects.","license":[""],"tags":[],"downloads":9788987,"repositories":["crates.io"]},"rust:encoding-index-japanese":{"coordinates":"rust:encoding-index-japanese","name":"encoding-index-japanese","description":"Index tables for Japanese character encodings","license":[""],"tags":[],"downloads":9771486,"repositories":["crates.io"]},"rust:encoding-index-korean":{"coordinates":"rust:encoding-index-korean","name":"encoding-index-korean","description":"Index tables for Korean character encodings","license":[""],"tags":[],"downloads":9770319,"repositories":["crates.io"]},"rust:lz4_flex":{"coordinates":"rust:lz4_flex","name":"lz4_flex","description":"Fastest LZ4 implementation in Rust, no unsafe by default.","license":[""],"tags":["compression","decompression","decompress","compress","lz4"],"downloads":9770157,"repositories":["crates.io"]},"rust:encoding-index-simpchinese":{"coordinates":"rust:encoding-index-simpchinese","name":"encoding-index-simpchinese","description":"Index tables for simplified Chinese character encodings","license":[""],"tags":[],"downloads":9770008,"repositories":["crates.io"]},"rust:encoding-index-tradchinese":{"coordinates":"rust:encoding-index-tradchinese","name":"encoding-index-tradchinese","description":"Index tables for traditional Chinese character encodings","license":[""],"tags":[],"downloads":9768490,"repositories":["crates.io"]},"rust:encoding-index-singlebyte":{"coordinates":"rust:encoding-index-singlebyte","name":"encoding-index-singlebyte","description":"Index tables for various single-byte character encodings","license":[""],"tags":[],"downloads":9764772,"repositories":["crates.io"]},"rust:tokio-test":{"coordinates":"rust:tokio-test","name":"tokio-test","description":"Testing utilities for Tokio- and futures-based code ","license":[""],"tags":[],"downloads":9757856,"repositories":["crates.io"]},"rust:smartstring":{"coordinates":"rust:smartstring","name":"smartstring","description":"Compact inlined strings","license":[""],"tags":["sso","cache-local","cpu-cache","small-string","inline-string"],"downloads":9756856,"repositories":["crates.io"]},"rust:flatbuffers":{"coordinates":"rust:flatbuffers","name":"flatbuffers","description":"Official FlatBuffers Rust runtime library.","license":[""],"tags":["serialization","zero-copy","flatbuffers"],"downloads":9754694,"repositories":["crates.io"]},"rust:encoding_index_tests":{"coordinates":"rust:encoding_index_tests","name":"encoding_index_tests","description":"Helper macros used to test index tables for character encodings","license":[""],"tags":[],"downloads":9733151,"repositories":["crates.io"]},"rust:diesel_derives":{"coordinates":"rust:diesel_derives","name":"diesel_derives","description":"You should not use this crate directly, it is internal to Diesel.","license":[""],"tags":[],"downloads":9714196,"repositories":["crates.io"]},"rust:fsevent-sys":{"coordinates":"rust:fsevent-sys","name":"fsevent-sys","description":"Rust bindings to the fsevent macOS API for file changes notifications","license":[""],"tags":[],"downloads":9704925,"repositories":["crates.io"]},"rust:libnghttp2-sys":{"coordinates":"rust:libnghttp2-sys","name":"libnghttp2-sys","description":"FFI bindings for libnghttp2 (nghttp2) ","license":[""],"tags":[],"downloads":9668672,"repositories":["crates.io"]},"rust:discard":{"coordinates":"rust:discard","name":"discard","description":"Discard trait which allows for intentionally leaking memory","license":[""],"tags":["drop","leak","revoke","cancel","discard"],"downloads":9639179,"repositories":["crates.io"]},"rust:fern":{"coordinates":"rust:fern","name":"fern","description":"Simple, efficient logging","license":[""],"tags":["log","logging","logger"],"downloads":9589651,"repositories":["crates.io"]},"rust:ct-logs":{"coordinates":"rust:ct-logs","name":"ct-logs","description":"Google''s list of Certificate Transparency logs for use with sct crate","license":[""],"tags":[],"downloads":9583530,"repositories":["crates.io"]}}