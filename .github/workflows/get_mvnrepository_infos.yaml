name: mvnrepository
on:
  schedule:
    - cron: '0 1 1 * *'
  workflow_dispatch:

permissions:
  packages: read
# Allow only one concurrent run
concurrency:
  group: "mvnrepository"
  cancel-in-progress: true

jobs:
  read_mvn_repository:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Get latest version from repo
        id: version
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          owner: Riduidel
          repo: aadarchi-technology-detector
      - run: echo "Using version $VERSION"
        env:
          VERSION: "${{steps.version.outputs.release}}"
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: 21
          # We can't use cache for maven, since there will be no pom here
#          cache: maven
      # The mess with the settings is due to the fact that we push our artifacts to github packages, instead of maven central
      - name: Configure maven to use github packages
        uses: s4u/maven-settings-action@v3.0.0
        with:
          override: true
          githubServer: false
          servers: |
            [
              {
                "id": "github",
                "username": "${{ env.GITHUB_ACTOR }}",
                "password": "Bearer ${{ secrets.GITHUB_TOKEN }}",
                "configuration": {
                  "httpHeaders": {
                    "property": {
                      "name": "Authorization",
                      "value": "Bearer ${{ secrets.GITHUB_TOKEN }}"
                    }
                  }
                }
              }
            ]
          repositories: |
            [
              {
                "id":"central",
                "url":"https://repo1.maven.org/maven2"
              },
              {
                "id":"github",
                "name":"github",
                "url":"https://maven.pkg.github.com/Riduidel/aadarchi-technology-detector",
                "snapshots":{"enabled":true}
              }
            ]
      - name: Expose settings.xml
        run: |
          cat ~/.m2/settings.xml
      - name: Download artifact in current folder
        run: |
          mvn dependency:copy \
            -Dartifact=org.ndx.aadarchi.technology-detector:mvnrepository:$VERSION:jar:jar-with-dependencies \
            -DoutputDirectory=. \
            -DstripClassifier=true \
            -DstripVersion=true

        env:
          VERSION: "${{steps.version.outputs.release}}"

      - name: Clone TechEmpower benchmarks repository
        uses: actions/checkout@v4
        with:
          repository: TechEmpower/FrameworkBenchmarks
          ref: master
          path: FrameworkBenchmarks
          clean: false
          fetch-depth: 0

      - name: Run everything in the same step
        run: |
          sudo apt update
          sudo apt install curl -y
          MAVEN=$(which mvn)
          xvfb-run java -jar mvnrepository-$VERSION-jar-with-dependencies.jar \
            --techempower-frameworks-local-clone FrameworkBenchmarks/frameworks \
            --maven-path $MAVEN
          ls -la
          mkdir target
          mv schema.json target/schema.json
          mv artifacts.json target/artifacts.json
        env:
          VERSION: "${{steps.version.outputs.release}}"

      - name: Deploy
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: reports_mvnrepository
          FOLDER: target
          TARGET_DIR: mvnrepository
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MESSAGE: Updated mvnrepository infos
          COMMIT-NAME: ðŸ¤– GitHub Action
          COMMIT_EMAIL: get_mvnrepository_infos.yaml@github.actions